---
defaultChannel: stable
icon:
  base64data: PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4KPCEtLSBHZW5lcmF0b3I6IEFkb2JlIElsbHVzdHJhdG9yIDIyLjEuMCwgU1ZHIEV4cG9ydCBQbHVnLUluIC4gU1ZHIFZlcnNpb246IDYuMDAgQnVpbGQgMCkgIC0tPgo8c3ZnIHZlcnNpb249IjEuMSIgaWQ9IkxheWVyXzEiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgeG1sbnM6eGxpbms9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsiIHg9IjBweCIgeT0iMHB4IgoJIHZpZXdCb3g9IjAgMCAzMDAgMzAwIiBzdHlsZT0iZW5hYmxlLWJhY2tncm91bmQ6bmV3IDAgMCAzMDAgMzAwOyIgeG1sOnNwYWNlPSJwcmVzZXJ2ZSI+CjxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+Cgkuc3Qwe2ZpbGw6I0VFMDAwMDt9Cjwvc3R5bGU+Cjx0aXRsZT5Db3N0LWljb248L3RpdGxlPgo8ZGVzYz5DcmVhdGVkIHdpdGggU2tldGNoLjwvZGVzYz4KPGc+Cgk8Zz4KCQk8cGF0aCBjbGFzcz0ic3QwIiBkPSJNMjM5LjAzNzAzMzEsMTE3LjI3NTE3N2MtMy4yNjU4MDgxLTQxLjk4OTA1MTgtMzguMjU2NjgzMy03NC42NDcyMDE1LTgxLjE3ODgzMy03NC42NDcyMDE1CgkJCWMtMjcuNTI2MTUzNiwwLTUzLjE4NjEyNjcsMTMuOTk2MzQ5My02OC4xMTU1NzAxLDM3LjMyMzYwMDhjLTEuODY2MTgwNCwwLTMuNzMyMzUzMi0wLjQ2NjU0NTEtNi4wNjUwNzg3LTAuNDY2NTQ1MQoJCQljLTM0LjUyNDMzMDEsMC02Mi45ODM1Nzc3LDI3Ljk5MjY5ODctNjIuOTgzNTc3Nyw2Mi45ODM1NjYzczI3Ljk5MjY5ODcsNjIuOTgzNTY2Myw2Mi45ODM1Nzc3LDYyLjk4MzU2NjNoMTYuMzI5MDcxCgkJCWMzLjczMjM2MDgsMCw2Ljk5ODE3NjYtMy4yNjU4MDgxLDYuOTk4MTc2Ni02Ljk5ODE2ODlzLTMuMjY1ODE1Ny02Ljk5ODE2ODktNi45OTgxNzY2LTYuOTk4MTY4OWgtMTYuMzI5MDcxCgkJCWMtMjcuMDU5NjEyMywwLTQ4LjUyMDY3OTUtMjEuOTI3NjI3Ni00OC41MjA2Nzk1LTQ4LjUyMDY3NTdzMjEuOTI3NjEyMy00OC41MjA2ODMzLDQ4LjUyMDY3OTUtNDguNTIwNjgzMwoJCQljMi43OTkyNzA2LDAsNS41OTg1NDEzLDAuNDY2NTQ1MSw4LjM5NzgwNDMsMC45MzMwOTAyYzIuNzk5MjcwNiwwLjQ2NjU0NTEsNi4wNjUwNzg3LTAuOTMzMDkwMiw3LjQ2NDcyMTctMy43MzIzNjA4CgkJCWMxMi4xMzAxNzI3LTIwLjk5NDUyOTcsMzQuNTI0MzMwMS0zNC4wNTc3ODg4LDU4LjMxODEyMjktMzQuMDU3Nzg4OGMzNi44NTcwNzA5LDAsNjcuMTgyNDk1MSwzMC4zMjU0MjA0LDY3LjE4MjQ5NTEsNjcuMTgyNDc5OQoJCQljMCwzLjczMjM1MzIsMy4yNjU4MDgxLDYuOTk4MTc2Niw2Ljk5ODE2ODksNi45OTgxNzY2YzE2LjMyOTA3MSwwLDI5Ljg1ODkwMiwxMy41Mjk4MDA0LDI5Ljg1ODkwMiwyOS44NTg4NzE1CgkJCXMtMTMuNTI5ODMwOSwyOS44NTg4ODY3LTI5Ljg1ODkwMiwyOS44NTg4ODY3Yy0zLjczMjM2MDgsMC02Ljk5ODE2ODksMy4yNjU4MDgxLTYuOTk4MTY4OSw2Ljk5ODE2ODkKCQkJczMuMjY1ODA4MSw2Ljk5ODE2ODksNi45OTgxNjg5LDYuOTk4MTY4OWMyNC4yNjAzMzAyLDAsNDQuMzIxNzYyMS0yMC4wNjE0MTY2LDQ0LjMyMTc2MjEtNDQuMzIxNzYyMQoJCQlDMjc2LjM2MDYyNjIsMTM5LjIwMjc4OTMsMjYwLjAzMTU1NTIsMTIwLjU0MDk5MjcsMjM5LjAzNzAzMzEsMTE3LjI3NTE3N3oiLz4KCQk8cGF0aCBjbGFzcz0ic3QwIiBkPSJNMjA2Ljg0NTQyODUsMjIwLjg0ODE3NWM3LjQ2NDcwNjQtOC44NjQzNjQ2LDExLjY2MzYyLTIwLjUyNzk4NDYsMTEuNjYzNjItMzIuNjU4MTU3MwoJCQljMC0yOC45MjU3OTY1LTIzLjMyNzI0LTUyLjI1MzAzNjUtNTIuMjUzMDM2NS01Mi4yNTMwMzY1cy01Mi4yNTMwNDQxLDIzLjMyNzI0LTUyLjI1MzA0NDEsNTIuMjUzMDM2NQoJCQlzMjMuMzI3MjQ3Niw1Mi4yNTMwNTE4LDUyLjI1MzA0NDEsNTIuMjUzMDUxOGMxMS4xOTcwODI1LDAsMjEuOTI3NjEyMy0zLjczMjM2MDgsMzAuMzI1NDI0Mi05Ljc5NzQzOTZsMzEuNzI1MDUxOSwzMC43OTE5NjE3CgkJCWMxLjM5OTYyNzcsMS4zOTk2Mjc3LDMuMjY1ODIzNCwxLjg2NjE4MDQsNS4xMzE5ODg1LDEuODY2MTgwNGMxLjg2NjE5NTcsMCwzLjczMjM2MDgtMC45MzMwNzUsNS4xMzE5ODg1LTIuMzMyNzMzMgoJCQljMi43OTkyNzA2LTIuNzk5MjU1NCwyLjc5OTI3MDYtNy40NjQ3MDY0LDAtMTAuMjYzOTc3MUwyMDYuODQ1NDI4NSwyMjAuODQ4MTc1eiBNMTI4LjQ2NTg2NjEsMTg4LjE5MDAxNzcKCQkJYzAtMjAuOTk0NTIyMSwxNy4yNjIxNzY1LTM4LjI1NjY5ODYsMzguMjU2Njk4Ni0zOC4yNTY2OTg2czM4LjI1NjY5ODYsMTcuMjYyMTc2NSwzOC4yNTY2OTg2LDM4LjI1NjY5ODYKCQkJcy0xNy4yNjIxNzY1LDM4LjI1NjY5ODYtMzguMjU2Njk4NiwzOC4yNTY2OTg2UzEyOC40NjU4NjYxLDIwOS4xODQ1Mzk4LDEyOC40NjU4NjYxLDE4OC4xOTAwMTc3eiIvPgoJPC9nPgoJPGc+CgkJPHBhdGggY2xhc3M9InN0MCIgZD0iTTE3NC4yODA2Mzk2LDE4NS44NzM2MTE1YzIuMjE2Mjc4MSwwLjY4NjUzODcsNC4xMTAwMzExLDEuODcwNzEyMyw1LjY3NjYzNTcsMy41NTI1MDU1CgkJCWMxLjU2NjYwNDYsMS42ODE4MDg1LDIuNTk4NzA5MSwzLjY0OTI2MTUsMy4wOTE3MzU4LDUuOTAyNDA0OGMwLjQ5NzYxOTYsMi4yNTMxNDMzLDAuMzYzOTk4NCw0LjUyOTMyNzQtMC40MDA4Nzg5LDYuODE5MzM1OQoJCQljLTAuOTE2OTE1OSwyLjUyMDM4NTctMi40ODM1MjA1LDQuNTI5MzEyMS00LjY5OTc5ODYsNi4wMTc1OTM0Yy0yLjIxNjI2MjgsMS40ODgyODEyLTQuNjk1MjA1NywyLjI3MTU3NTktNy40NTA1NzY4LDIuMzQ5ODk5MwoJCQl2NS41MDE1NTY0YzAsMC41MzQ0ODQ5LTAuMTcwNDcxMiwwLjk3MjIxMzctMC41MTE0NTk0LDEuMzE3Nzc5NWMtMC4zNDU1NjU4LDAuMzQ1NTgxMS0wLjc4MzI5NDcsMC41MTYwNjc1LTEuMzIyMzg3NywwLjUxNjA2NzUKCQkJaC0zLjY2NzY5NDFjLTAuNTM0NTAwMSwwLTAuOTcyMjEzNy0wLjE3MDQ4NjUtMS4zMTc3Nzk1LTAuNTE2MDY3NWMtMC4zNDA5NzI5LTAuMzQ1NTY1OC0wLjUxNjA2NzUtMC43ODMyOTQ3LTAuNTE2MDY3NS0xLjMxNzc3OTUKCQkJdi01LjUwMTU1NjRjLTMuNjY3Njk0MSwwLTYuOTg5ODIyNC0xLjE0NzI5MzEtOS45Njg2NTg0LTMuNDM3MzAxNmMtMC4zODI0NDYzLTAuMzgyNDMxLTAuNjEyODIzNS0wLjg0MzIwMDctMC42ODg4NDI4LTEuMzc3NzAwOAoJCQljLTAuMDc2MDM0NS0wLjUzNDQ4NDksMC4xMTUxODg2LTEuMDMyMTA0NSwwLjU3MzYzODktMS40ODgyNTA3bDMuODk1NzgyNS0zLjg5ODA4NjUKCQkJYzAuMzA4NzAwNi0wLjIzMDM5MjUsMC42NjgxMDYxLTAuMzgyNDMxLDEuMDkyMDEwNS0wLjQ1NjE2MTVjMC40MTkyOTYzLTAuMDc4MzIzNCwwLjgyMDE1OTksMC4wMzY4NSwxLjIwMjYwNjIsMC4zNDA5NzI5CgkJCWMxLjE0NzI5MzEsMC43NjQ4NzczLDIuNDQyMDQ3MSwxLjE0NzMwODMsMy44OTM0NjMxLDEuMTQ3MzA4M2g3LjY4MDk1NGMwLjkxNjk0NjQsMCwxLjcwMDI0MTEtMC4zMjI1NDAzLDIuMzQ5ODk5My0wLjk3MjIxMzcKCQkJYzAuNjQ5Njg4Ny0wLjY0OTY4ODcsMC45NzIyMjktMS40NzQ0NTY4LDAuOTcyMjI5LTIuNDY1MTAzMWMwLTAuNjg2NTU0LTAuMjI1NzY5LTEuMzM2MjI3NC0wLjY4NjUzODctMS45NDkwMzU2CgkJCWMtMC40NTYxNjE1LTAuNjEyODIzNS0xLjAzMjExOTgtMS4wMzIxMTk4LTEuNzE4NjQzMi0xLjI2MjQ5NjlsLTExLjgwNDg0MDEtMy40MzczMTY5CgkJCWMtMi41OTg2OTM4LTAuNzY0ODc3My00Ljc3MzUyOTEtMi4xMzc5NTQ3LTYuNTMzNjQ1Ni00LjEyODQ0ODVjLTEuNzU3ODEyNS0xLjk4NTkwMDktMi43ODc2NDM0LTQuMjc1OTI0Ny0zLjA5NDAzOTktNi44NzQ2MzM4CgkJCWMtMC4xNTIwNTM4LTIuNDQ2NjU1MywwLjMwNjM5NjUtNC43MTgyMzEyLDEuMzc1Mzk2Ny02LjgxOTMzNTljMS4wNjg5Njk3LTIuMTAxMDg5NSwyLjU5ODcwOTEtMy43ODI4ODI3LDQuNTg0NjEtNS4wNDUzNzk2CgkJCWMxLjk4NTkwMDktMS4yNTc4ODg4LDQuMjAyMTc5LTEuODg5MTI5Niw2LjY0ODg0OTUtMS44ODkxMjk2aDAuMjI1NzY5di01LjUwMTU0MTEKCQkJYzAtMC41MzQ1MDAxLDAuMTc1MDk0Ni0wLjk3MjIyOSwwLjUxNjA2NzUtMS4zMTc3OTQ4YzAuMzQ1NTY1OC0wLjM0NTU4MTEsMC43ODMyNzk0LTAuNTE2MDUyMiwxLjMxNzc3OTUtMC41MTYwNTIyaDMuNjY3Njk0MQoJCQljMC41MzkwOTMsMCwwLjk3NjgyMTksMC4xNzA0NzEyLDEuMzIyMzg3NywwLjUxNjA1MjJjMC4zNDA5ODgyLDAuMzQ1NTY1OCwwLjUxMTQ1OTQsMC43ODMyOTQ3LDAuNTExNDU5NCwxLjMxNzc5NDh2NS41MDE1NDExCgkJCWMzLjY2NzY5NDEsMCw2Ljk1NzU2NTMsMS4xNDcyOTMxLDkuODYwMzgyMSwzLjQzNzMwMTZjMC40NTYxNzY4LDAuMzgyNDQ2MywwLjcyMzQxOTIsMC44NDMyMDA3LDAuODAxNzQyNiwxLjM3NzY4NTUKCQkJYzAuMDczNzE1MiwwLjUzNDUwMDEtMC4xMTUyMDM5LDAuOTkwNjQ2NC0wLjU3MTM1MDEsMS4zNzMwNzc0bC0zLjg5ODA4NjUsNC4wMTMyNzUxCgkJCWMtMC4zMDg3MTU4LDAuMjMwMzkyNS0wLjY2ODEwNjEsMC4zODI0MzEtMS4wOTIwMTA1LDAuNDU2MTYxNWMtMC40MTkyOTYzLDAuMDc4MzIzNC0wLjgyMDE1OTksMC0xLjIwMjU5MDktMC4yMjU3NjkKCQkJYy0xLjE0MjcxNTUtMC44NDMyMDA3LTIuNDQyMDc3Ni0xLjI2MjQ5NjktMy44OTgwODY1LTEuMjYyNDk2OWgtNy42NzYzNjExYy0wLjkxNjkxNTksMC0xLjcwMDIyNTgsMC4zMjI1MjUtMi4zNDk4OTkzLDAuOTcyMjEzNwoJCQljLTAuNjQ5Njg4NywwLjY0OTY3MzUtMC45NzY4MjE5LDEuNDc0NDQxNS0wLjk3NjgyMTksMi40NjUwODc5YzAsMC42ODY1NTQsMC4yMzAzOTI1LDEuMzM2MjEyMiwwLjY5MTE0NjksMS45NDkwMzU2CgkJCWMwLjQ1NjE2MTUsMC42MTI4MjM1LDEuMDMyMTE5OCwxLjAzMjExOTgsMS43MTg2NTg0LDEuMjYyNDk2OUwxNzQuMjgwNjM5NiwxODUuODczNjExNXoiLz4KCTwvZz4KPC9nPgo8L3N2Zz4K
  mediatype: image/svg+xml
name: costmanagement-metrics-operator
schema: olm.package
---
entries:
- name: costmanagement-metrics-operator.1.0.0
- name: costmanagement-metrics-operator.1.1.0
  replaces: costmanagement-metrics-operator.1.0.0
- name: costmanagement-metrics-operator.1.1.3
  replaces: costmanagement-metrics-operator.1.1.0
- name: costmanagement-metrics-operator.1.1.4
  replaces: costmanagement-metrics-operator.1.1.3
- name: costmanagement-metrics-operator.1.1.5
  replaces: costmanagement-metrics-operator.1.1.4
- name: costmanagement-metrics-operator.1.1.6
  replaces: costmanagement-metrics-operator.1.1.5
- name: costmanagement-metrics-operator.1.1.7
  replaces: costmanagement-metrics-operator.1.1.6
- name: costmanagement-metrics-operator.1.1.8
  replaces: costmanagement-metrics-operator.1.1.7
- name: costmanagement-metrics-operator.1.1.9
  replaces: costmanagement-metrics-operator.1.1.8
- name: costmanagement-metrics-operator.1.2.0
  replaces: costmanagement-metrics-operator.1.1.9
- name: costmanagement-metrics-operator.2.0.0
  replaces: costmanagement-metrics-operator.1.2.0
- name: costmanagement-metrics-operator.3.0.0
  replaces: costmanagement-metrics-operator.2.0.0
- name: costmanagement-metrics-operator.3.0.1
  replaces: costmanagement-metrics-operator.3.0.0
- name: costmanagement-metrics-operator.3.1.0
  replaces: costmanagement-metrics-operator.3.0.1
- name: costmanagement-metrics-operator.3.1.1
  replaces: costmanagement-metrics-operator.3.1.0
- name: costmanagement-metrics-operator.3.2.0
  replaces: costmanagement-metrics-operator.3.1.1
- name: costmanagement-metrics-operator.3.2.1
  replaces: costmanagement-metrics-operator.3.2.0
- name: costmanagement-metrics-operator.3.3.0
  replaces: costmanagement-metrics-operator.3.2.1
- name: costmanagement-metrics-operator.3.3.1
  replaces: costmanagement-metrics-operator.3.3.0
- name: costmanagement-metrics-operator.3.3.2
  replaces: costmanagement-metrics-operator.3.3.1
- name: costmanagement-metrics-operator.4.0.0
  replaces: costmanagement-metrics-operator.3.3.2
name: stable
package: costmanagement-metrics-operator
schema: olm.channel
---
image: registry.redhat.io/costmanagement/costmanagement-metrics-operator-bundle@sha256:70fa64452d13ec5e1ed1abb9b87029cc8e9fec9a5288640326a43d854d01f087
name: costmanagement-metrics-operator.1.0.0
package: costmanagement-metrics-operator
properties:
- type: olm.gvk
  value:
    group: costmanagement-metrics-cfg.openshift.io
    kind: CostManagementMetricsConfig
    version: v1beta1
- type: olm.package
  value:
    packageName: costmanagement-metrics-operator
    version: 1.0.0
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: registry.redhat.io/costmanagement/costmanagement-metrics-operator-bundle@sha256:70fa64452d13ec5e1ed1abb9b87029cc8e9fec9a5288640326a43d854d01f087
  name: ""
- image: registry.redhat.io/costmanagement/costmanagement-metrics-rhel8-operator@sha256:806ddc53720ba0a6b0e6b9ab7b1c4da5502c66dae3008bfdfce36edeb23eb8d8
  name: costmanagement-metrics-rhel8-operator-806ddc53720ba0a6b0e6b9ab7b1c4da5502c66dae3008bfdfce36edeb23eb8d8-annotation
- image: registry.redhat.io/costmanagement/costmanagement-metrics-rhel8-operator@sha256:806ddc53720ba0a6b0e6b9ab7b1c4da5502c66dae3008bfdfce36edeb23eb8d8
  name: manager
schema: olm.bundle
---
image: registry.redhat.io/costmanagement/costmanagement-metrics-operator-bundle@sha256:f2455392ddf7fe8506a2485835cbbd9c633476344a0cd9353e46c6fa44e4667c
name: costmanagement-metrics-operator.1.1.0
package: costmanagement-metrics-operator
properties:
- type: olm.gvk
  value:
    group: costmanagement-metrics-cfg.openshift.io
    kind: CostManagementMetricsConfig
    version: v1beta1
- type: olm.package
  value:
    packageName: costmanagement-metrics-operator
    version: 1.1.0
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: registry.redhat.io/costmanagement/costmanagement-metrics-operator-bundle@sha256:f2455392ddf7fe8506a2485835cbbd9c633476344a0cd9353e46c6fa44e4667c
  name: ""
- image: registry.redhat.io/costmanagement/costmanagement-metrics-rhel8-operator@sha256:36f3f6385d872f86f498fe221fd4e114b26d7b31f90969e57cd9637db9ea004c
  name: costmanagement-metrics-rhel8-operator-36f3f6385d872f86f498fe221fd4e114b26d7b31f90969e57cd9637db9ea004c-annotation
- image: registry.redhat.io/costmanagement/costmanagement-metrics-rhel8-operator@sha256:36f3f6385d872f86f498fe221fd4e114b26d7b31f90969e57cd9637db9ea004c
  name: manager
schema: olm.bundle
---
image: registry.redhat.io/costmanagement/costmanagement-metrics-operator-bundle@sha256:6393be8e83443f0039d5cefd2f4df992986b6b3ec16f7ed38b1a902aa7051091
name: costmanagement-metrics-operator.1.1.3
package: costmanagement-metrics-operator
properties:
- type: olm.gvk
  value:
    group: costmanagement-metrics-cfg.openshift.io
    kind: CostManagementMetricsConfig
    version: v1beta1
- type: olm.package
  value:
    packageName: costmanagement-metrics-operator
    version: 1.1.3
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: registry.redhat.io/costmanagement/costmanagement-metrics-operator-bundle@sha256:6393be8e83443f0039d5cefd2f4df992986b6b3ec16f7ed38b1a902aa7051091
  name: ""
- image: registry.redhat.io/costmanagement/costmanagement-metrics-rhel8-operator@sha256:76c5b8f887c88d79b0225259afeddf41be0bdde316b4dbf85bbc610462127e1b
  name: costmanagement-metrics-rhel8-operator-76c5b8f887c88d79b0225259afeddf41be0bdde316b4dbf85bbc610462127e1b-annotation
- image: registry.redhat.io/costmanagement/costmanagement-metrics-rhel8-operator@sha256:76c5b8f887c88d79b0225259afeddf41be0bdde316b4dbf85bbc610462127e1b
  name: manager
schema: olm.bundle
---
image: registry.redhat.io/costmanagement/costmanagement-metrics-operator-bundle@sha256:e14493e3b02509690c65016297cf95fc2e4a11a7c97e0f8ca5812e66acbc6c26
name: costmanagement-metrics-operator.1.1.4
package: costmanagement-metrics-operator
properties:
- type: olm.gvk
  value:
    group: costmanagement-metrics-cfg.openshift.io
    kind: CostManagementMetricsConfig
    version: v1beta1
- type: olm.package
  value:
    packageName: costmanagement-metrics-operator
    version: 1.1.4
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: registry.redhat.io/costmanagement/costmanagement-metrics-operator-bundle@sha256:e14493e3b02509690c65016297cf95fc2e4a11a7c97e0f8ca5812e66acbc6c26
  name: ""
- image: registry.redhat.io/costmanagement/costmanagement-metrics-rhel8-operator@sha256:2ce0ccd1c76080d4f97683eb3a11bac6848dfa13d231a8ad3f40c2463d977691
  name: costmanagement-metrics-rhel8-operator-2ce0ccd1c76080d4f97683eb3a11bac6848dfa13d231a8ad3f40c2463d977691-annotation
- image: registry.redhat.io/costmanagement/costmanagement-metrics-rhel8-operator@sha256:2ce0ccd1c76080d4f97683eb3a11bac6848dfa13d231a8ad3f40c2463d977691
  name: manager
schema: olm.bundle
---
image: registry.redhat.io/costmanagement/costmanagement-metrics-operator-bundle@sha256:ce775e3dac0fc6a04698c6a53fc38d73593cbd3100dacafb41d7b1bd9505c4e4
name: costmanagement-metrics-operator.1.1.5
package: costmanagement-metrics-operator
properties:
- type: olm.gvk
  value:
    group: costmanagement-metrics-cfg.openshift.io
    kind: CostManagementMetricsConfig
    version: v1beta1
- type: olm.package
  value:
    packageName: costmanagement-metrics-operator
    version: 1.1.5
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: registry.redhat.io/costmanagement/costmanagement-metrics-operator-bundle@sha256:ce775e3dac0fc6a04698c6a53fc38d73593cbd3100dacafb41d7b1bd9505c4e4
  name: ""
- image: registry.redhat.io/costmanagement/costmanagement-metrics-rhel8-operator@sha256:fe14a37527faed6262630c6f76cd862598244a318d40ea7d6ebaea14661b8e9b
  name: costmanagement-metrics-rhel8-operator-fe14a37527faed6262630c6f76cd862598244a318d40ea7d6ebaea14661b8e9b-annotation
- image: registry.redhat.io/costmanagement/costmanagement-metrics-rhel8-operator@sha256:fe14a37527faed6262630c6f76cd862598244a318d40ea7d6ebaea14661b8e9b
  name: manager
schema: olm.bundle
---
image: registry.redhat.io/costmanagement/costmanagement-metrics-operator-bundle@sha256:020d5d1777d0dec2ae432a1cd93f7a306c7860ad05cabe19c59f9359b5d4e44e
name: costmanagement-metrics-operator.1.1.6
package: costmanagement-metrics-operator
properties:
- type: olm.gvk
  value:
    group: costmanagement-metrics-cfg.openshift.io
    kind: CostManagementMetricsConfig
    version: v1beta1
- type: olm.package
  value:
    packageName: costmanagement-metrics-operator
    version: 1.1.6
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoib3BlcmF0b3JzLmNvcmVvcy5jb20vdjFhbHBoYTEiLCJraW5kIjoiQ2x1c3RlclNlcnZpY2VWZXJzaW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiYWxtLWV4YW1wbGVzIjoiW1xuICB7XG4gICAgXCJhcGlWZXJzaW9uXCI6IFwiY29zdG1hbmFnZW1lbnQtbWV0cmljcy1jZmcub3BlbnNoaWZ0LmlvL3YxYmV0YTFcIixcbiAgICBcImtpbmRcIjogXCJDb3N0TWFuYWdlbWVudE1ldHJpY3NDb25maWdcIixcbiAgICBcIm1ldGFkYXRhXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcImNvc3RtYW5hZ2VtZW50bWV0cmljc2NmZy1zYW1wbGUtdjFiZXRhMVwiXG4gICAgfSxcbiAgICBcInNwZWNcIjoge1xuICAgICAgXCJhdXRoZW50aWNhdGlvblwiOiB7XG4gICAgICAgIFwidHlwZVwiOiBcInRva2VuXCJcbiAgICAgIH0sXG4gICAgICBcInBhY2thZ2luZ1wiOiB7XG4gICAgICAgIFwibWF4X3JlcG9ydHNfdG9fc3RvcmVcIjogMzAsXG4gICAgICAgIFwibWF4X3NpemVfTUJcIjogMTAwXG4gICAgICB9LFxuICAgICAgXCJwcm9tZXRoZXVzX2NvbmZpZ1wiOiB7fSxcbiAgICAgIFwic291cmNlXCI6IHtcbiAgICAgICAgXCJjaGVja19jeWNsZVwiOiAxNDQwLFxuICAgICAgICBcImNyZWF0ZV9zb3VyY2VcIjogZmFsc2UsXG4gICAgICAgIFwibmFtZVwiOiBcIklOU0VSVC1TT1VSQ0UtTkFNRVwiXG4gICAgICB9LFxuICAgICAgXCJ1cGxvYWRcIjoge1xuICAgICAgICBcInVwbG9hZF9jeWNsZVwiOiAzNjAsXG4gICAgICAgIFwidXBsb2FkX3RvZ2dsZVwiOiB0cnVlXG4gICAgICB9XG4gICAgfVxuICB9XG5dIiwiY2FwYWJpbGl0aWVzIjoiU2VhbWxlc3MgVXBncmFkZXMiLCJjYXRlZ29yaWVzIjoiTW9uaXRvcmluZyIsImNlcnRpZmllZCI6ImZhbHNlIiwiY29udGFpbmVySW1hZ2UiOiJyZWdpc3RyeS5yZWRoYXQuaW8vY29zdG1hbmFnZW1lbnQvY29zdG1hbmFnZW1lbnQtbWV0cmljcy1yaGVsOC1vcGVyYXRvckBzaGEyNTY6NTIzYjY2MmZiMDUwOThlYzk0MTBjYzA2NjU1NTY0OTVmNjQwOWI0NGI4YzgwMzBjMWM0NTZlZWVlODY0ZGE2NiIsImNyZWF0ZWRBdCI6IjIwMjEtMDItMTZUMTY6MDM6MTJaIiwiZGVzY3JpcHRpb24iOiJBIEdvbGFuZy1iYXNlZCBPcGVuU2hpZnQgT3BlcmF0b3IgdGhhdCBnZW5lcmF0ZXMgYW5kIHVwbG9hZHMgT3BlblNoaWZ0IHVzYWdlIG1ldHJpY3MgdG8gY29zdCBtYW5hZ2VtZW50LiIsIm9wZXJhdG9yZnJhbWV3b3JrLmlvL3N1Z2dlc3RlZC1uYW1lc3BhY2UiOiJjb3N0bWFuYWdlbWVudC1tZXRyaWNzLW9wZXJhdG9yIiwib3BlcmF0b3JzLm9wZW5zaGlmdC5pby9pbmZyYXN0cnVjdHVyZS1mZWF0dXJlcyI6IltcIkRpc2Nvbm5lY3RlZFwiXSIsIm9wZXJhdG9ycy5vcGVyYXRvcmZyYW1ld29yay5pby9idWlsZGVyIjoib3BlcmF0b3Itc2RrLXYwLjE5LjQiLCJvcGVyYXRvcnMub3BlcmF0b3JmcmFtZXdvcmsuaW8vcHJvamVjdF9sYXlvdXQiOiJnby5rdWJlYnVpbGRlci5pby92MiIsInJlcG9zaXRvcnkiOiJodHRwczovL2dpdGh1Yi5jb20vcHJvamVjdC1rb2t1L2tva3UtbWV0cmljcy1vcGVyYXRvciIsInN1cHBvcnQiOiJSZWQgSGF0In0sIm5hbWUiOiJjb3N0bWFuYWdlbWVudC1tZXRyaWNzLW9wZXJhdG9yLjEuMS42IiwibmFtZXNwYWNlIjoicGxhY2Vob2xkZXIifSwic3BlYyI6eyJhcGlzZXJ2aWNlZGVmaW5pdGlvbnMiOnt9LCJjdXN0b21yZXNvdXJjZWRlZmluaXRpb25zIjp7Im93bmVkIjpbeyJkZXNjcmlwdGlvbiI6IkNvc3RNYW5hZ2VtZW50TWV0cmljc0NvbmZpZyBpcyB0aGUgU2NoZW1hIGZvciB0aGUgY29zdG1hbmFnZW1lbnRtZXRyaWNzY29uZmlnIEFQSSIsImtpbmQiOiJDb3N0TWFuYWdlbWVudE1ldHJpY3NDb25maWciLCJuYW1lIjoiY29zdG1hbmFnZW1lbnRtZXRyaWNzY29uZmlncy5jb3N0bWFuYWdlbWVudC1tZXRyaWNzLWNmZy5vcGVuc2hpZnQuaW8iLCJ2ZXJzaW9uIjoidjFiZXRhMSJ9XX0sImRlc2NyaXB0aW9uIjoiIyAxLjEuNiBDb3N0IE1hbmFnZW1lbnQgTWV0cmljcyBPcGVyYXRvclxuIyMgSW50cm9kdWN0aW9uXG5UaGUgYGNvc3RtYW5hZ2VtZW50LW1ldHJpY3Mtb3BlcmF0b3JgIGlzIGEgY29tcG9uZW50IG9mIHRoZSBbY29zdCBtYW5hZ21lbnRdKGh0dHBzOi8vYWNjZXNzLnJlZGhhdC5jb20vZG9jdW1lbnRhdGlvbi9lbi11cy9jb3N0X21hbmFnZW1lbnRfc2VydmljZSkgc2VydmljZSBmb3IgT3BlbnNoaWZ0LCB1c2VkIHRvIGdhdGhlciB0aGUgcmVxdWlyZWQgaW5mb3JtYXRpb24gZnJvbSB0aGUgY2x1c3Rlci4gSXQgaXMgcmVjb21tZW5kZWQgdG8gYmUgaW5zdGFsbGVkIGluIE9wZW5TaGlmdCA0LjYrLiBUaGlzIG9wZXJhdG9yIG9idGFpbnMgT3BlblNoaWZ0IHVzYWdlIGRhdGEgYnkgcXVlcnlpbmcgUHJvbWV0aGV1cyBhbmQgdXBsb2FkcyBpdCB0byBjb3N0IG1hbmFnZW1lbnQgdG8gYmUgcHJvY2Vzc2VkLiBUaGUgT3BlcmF0b3IgcXVlcmllcyBQcm9tZXRoZXVzIGV2ZXJ5IGhvdXIgdG8gY3JlYXRlIG1ldHJpYyByZXBvcnRzLCB3aGljaCBhcmUgdGhlbiBwYWNrYWdlZCBhbmQgdXBsb2FkZWQgdG8gY29zdCBtYW5hZ2VtZW50IGF0IFtjb25zb2xlLnJlZGhhdC5jb21dKGh0dHBzOi8vY29uc29sZS5yZWRoYXQuY29tKS4gRm9yIG1vcmUgaW5mb3JtYXRpb24sIHJlYWNoIG91dCB0byBcdTAwM2Njb3N0bWFuYWdlbWVudEByZWRoYXQuY29tXHUwMDNlLlxuXG5UaGlzIG9wZXJhdG9yIGlzIGNhcGFibGUgb2YgZnVuY3Rpb25pbmcgd2l0aGluIGEgZGlzY29ubmVjdGVkL3Jlc3RyaWN0ZWQgbmV0d29yayAoYWthIGFpci1nYXBwZWQgbW9kZSkuIEluIHRoaXMgbW9kZSwgdGhlIG9wZXJhdG9yIHdpbGwgc3RvcmUgdGhlIHBhY2thZ2VkIHJlcG9ydHMgZm9yIG1hbnVhbCByZXRyaWV2YWwgaW5zdGVhZCBvZiBiZWluZyB1cGxvYWRlZCB0byBjb3N0IG1hbmFnZW1lbnQuIERvY3VtZW50YXRpb24gZm9yIGluc3RhbGxpbmcgYW4gb3BlcmF0b3Igd2l0aGluIGEgcmVzdHJpY3RlZCBuZXR3b3JrIGNhbiBiZSBmb3VuZCBbaGVyZV0oaHR0cHM6Ly9kb2NzLm9wZW5zaGlmdC5jb20vY29udGFpbmVyLXBsYXRmb3JtL2xhdGVzdC9vcGVyYXRvcnMvYWRtaW4vb2xtLXJlc3RyaWN0ZWQtbmV0d29ya3MuaHRtbCkuXG5cbiMjIEZlYXR1cmVzIGFuZCBDYXBhYmlsaXRpZXNcbiMjIyMgTWV0cmljcyBjb2xsZWN0aW9uOlxuVGhlIENvc3QgTWFuYWdlbWVudCBNZXRyaWNzIE9wZXJhdG9yIChgY29zdG1hbmFnZW1lbnQtbWV0cmljcy1vcGVyYXRvcmApIGNvbGxlY3RzIHRoZSBtZXRyaWNzIHJlcXVpcmVkIGZvciBjb3N0IG1hbmFnZW1lbnQgYnk6XG4qIFF1ZXJ5aW5nIFByb21ldGhldXMgdG8gZ2F0aGVyIHRoZSBuZWNlc3NhcnkgbWV0cmljcyBmb3IgY29zdCBtYW5hZ2VtZW50LlxuKiBXcml0aW5nIFByb21ldGhldXMgcXVlcmllcyB0byBDU1YgcmVwb3J0IGZpbGVzLlxuKiBQYWNrYWdpbmcgdGhlIENTViByZXBvcnQgZmlsZXMgaW50byB0YXJiYWxscy5cblxuIyMjIyBBZGRpdGlvbmFsIENhcGFiaWxpdGllczpcbiogVGhlIG9wZXJhdG9yIGNhbiBiZSBjb25maWd1cmVkIHRvIGF1dG9tYXRpY2FsbHkgdXBsb2FkIHRoZSBwYWNrYWdlZCByZXBvcnRzIHRvIGNvc3QgbWFuYWdlbWVudCB0aHJvdWdoIFJlZCBIYXQgSW5zaWdodHMgSW5ncmVzcyBzZXJ2aWNlLlxuKiBUaGUgb3BlcmF0b3IgY2FuIGNyZWF0ZSBhIHNvdXJjZSBpbiBjb25zb2xlLnJlZGhhdC5jb20uIEEgc291cmNlIGlzIHJlcXVpcmVkIGZvciBjb3N0IG1hbmFnZW1lbnQgdG8gcHJvY2VzcyB0aGUgdXBsb2FkZWQgcGFja2FnZXMuXG4qIFBlcnNpc3RlbnRWb2x1bWVDbGFpbSAoUFZDKSBjb25maWd1cmF0aW9uOiBUaGUgQ29zdE1hbmFnZW1lbnRNZXRyaWNzQ29uZmlnIENSIGNhbiBhY2NlcHQgYSBQVkMgZGVmaW5pdGlvbiBhbmQgdGhlIG9wZXJhdG9yIHdpbGwgY3JlYXRlIGFuZCBtb3VudCB0aGUgUFZDLiBJZiBvbmUgaXMgbm90IHByb3ZpZGVkLCBhIGRlZmF1bHQgUFZDIHdpbGwgYmUgY3JlYXRlZC5cbiogUmVzdHJpY3RlZCBuZXR3b3JrIGluc3RhbGxhdGlvbjogdGhpcyBvcGVyYXRvciBjYW4gZnVuY3Rpb24gb24gYSByZXN0cmljdGVkIG5ldHdvcmsuIEluIHRoaXMgbW9kZSwgdGhlIG9wZXJhdG9yIHN0b3JlcyB0aGUgcGFja2FnZWQgcmVwb3J0cyBmb3IgbWFudWFsIHJldHJpZXZhbC5cblxuIyMgTGltaXRhdGlvbnMgYW5kIFByZS1SZXF1aXNpdGVzXG4jIyMjIExpbWl0YXRpb25zIChQb3RlbnRpYWwgZm9yIG1ldHJpY3MgZGF0YSBsb3NzKVxuKiBBIHNvdXJjZSAqKm11c3QqKiBleGlzdCBpbiBjb25zb2xlLnJlZGhhdC5jb20gZm9yIGFuIHVwbG9hZGVkIHBheWxvYWQgdG8gYmUgcHJvY2Vzc2VkIGJ5IGNvc3QgbWFuYWdlbWVudC4gVGhlIG9wZXJhdG9yIHNlbmRzIHRoZSBwYXlsb2FkIHRvIHRoZSBSZWQgSGF0IEluc2lnaHRzIEluZ3Jlc3Mgc2VydmljZSB3aGljaCB1c3VhbGx5IHJldHVybnMgc3VjY2Vzc2Z1bGx5LCBidXQgdGhlIG9wZXJhdG9yIGRvZXMgbm90IGN1cnJlbnRseSBjb25maXJtIHdpdGggY29zdCBtYW5hZ2VtZW50IHRoYXQgdGhlIHBheWxvYWQgd2FzIHByb2Nlc3NlZC4gQWZ0ZXIgSW5ncmVzcyBhY2NlcHRzIHRoZSB1cGxvYWRlZCBwYXlsb2FkLCB0aGUgcGF5bG9hZCBpcyByZW1vdmVkIGZyb20gdGhlIG9wZXJhdG9yIGFuZCBpcyBnb25lIGZvcmV2ZXIuIElmIHRoZSBkYXRhIHdpdGhpbiB0aGUgcGF5bG9hZCBpcyBub3QgcHJvY2Vzc2VkLCBhIGdhcCB3aWxsIGJlIGludHJvZHVjZWQgaW4gdGhlIHVzYWdlIG1ldHJpY3MuXG5cbioqTm90ZSoqIFRoZSBmb2xsb3dpbmcgbGltaXRhdGlvbnMgYXJlIHNwZWNpZmljIHRvIG9wZXJhdG9ycyBjb25maWd1cmVkIHRvIHJ1biBpbiBhIHJlc3RyaWN0ZWQgbmV0d29yazpcbiogVGhlIGBjb3N0bWFuYWdlbWVudC1tZXRyaWNzLW9wZXJhdG9yYCB3aWxsIG5vdCBiZSBhYmxlIHRvIGdlbmVyYXRlIG5ldyByZXBvcnRzIGlmIHRoZSBQVkMgc3RvcmFnZSBpcyBmaWxsZWQuIElmIHRoaXMgb2NjdXJzLCB0aGUgcmVwb3J0cyBtdXN0IGJlIG1hbnVhbGx5IGRlbGV0ZWQgZnJvbSB0aGUgUFZDIHNvIHRoYXQgdGhlIG9wZXJhdG9yIGNhbiBmdW5jdGlvbiBhcyBub3JtYWwuXG4qIFRoZSBkZWZhdWx0IHJlcG9ydCByZXRlbnRpb24gaXMgMzAgcmVwb3J0cyAoYWJvdXQgb25lIHdlZWsncyB3b3J0aCBvZiBkYXRhKS4gVGhlIHJlcG9ydHMgbXVzdCBiZSBtYW51YWxseSBkb3dubG9hZGVkIGFuZCB1cGxvYWRlZCB0byBjb25zb2xlLnJlZGhhdC5jb20gZXZlcnkgd2Vlaywgb3IgdGhleSB3aWxsIGJlIGRlbGV0ZWQgYW5kIHRoZSBkYXRhIHdpbGwgYmUgbG9zdC5cblxuIyMjIyBTdG9yYWdlIGNvbmZpZ3VyYXRpb24gcHJlcmVxdWlzaXRlXG5UaGUgb3BlcmF0b3Igd2lsbCBhdHRlbXB0IHRvIGNyZWF0ZSBhbmQgdXNlIHRoZSBmb2xsb3dpbmcgUFZDIHdoZW4gaW5zdGFsbGVkOlxuXG4gICAgICB2b2x1bWVfY2xhaW1fdGVtcGxhdGU6XG4gICAgICAgIGFwaVZlcnNpb246IHYxXG4gICAgICAgIGtpbmQ6IFBlcnNpc3RlbnRWb2x1bWVDbGFpbVxuICAgICAgICBtZXRhZGF0YTpcbiAgICAgICAgICBuYW1lOiBjb3N0bWFuYWdlbWVudC1tZXRyaWNzLW9wZXJhdG9yLWRhdGFcbiAgICAgICAgc3BlYzpcbiAgICAgICAgICBhY2Nlc3NNb2RlczpcbiAgICAgICAgICAgIC0gUmVhZFdyaXRlT25jZVxuICAgICAgICAgIHJlc291cmNlczpcbiAgICAgICAgICAgIHJlcXVlc3RzOlxuICAgICAgICAgICAgICBzdG9yYWdlOiAxMEdpXG5cbklmIGEgZGlmZmVyZW50IFBWQyBzaG91bGQgYmUgdXRpbGl6ZWQsIGEgdmFsaWQgUFZDIHNob3VsZCBiZSBzcGVjaWZpZWQgaW4gdGhlIENvc3RNYW5hZ2VtZW50TWV0cmljc0NvbmZpZyBDUiBhcyBkZXNjcmliZWQgaW4gdGhlIGFwcHJvcHJpYXRlIHNlY3Rpb24gYmVsb3cuIFRoZSBQVkMgdG8gYmUgdXNlZCBtYXkgZXhpc3QgYWxyZWFkeSwgb3IgdGhlIG9wZXJhdG9yIHdpbGwgYXR0ZW1wdCB0byBjcmVhdGUgaXQuXG5cblRvIHVzZSB0aGUgZGVmYXVsdCBzcGVjaWZpY2F0aW9uLCB0aGUgZm9sbG93IGFzc3VtcHRpb25zIG11c3QgYmUgbWV0OlxuMS4gQSBkZWZhdWx0IFN0b3JhZ2VDbGFzcyBpcyBkZWZpbmVkLlxuMi4gRHluYW1pYyBwcm92aXNpb25pbmcgZm9yIHRoYXQgZGVmYXVsdCBTdG9yYWdlQ2xhc3MgaXMgZW5hYmxlZC5cblxuSWYgdGhlc2UgYXNzdW1wdGlvbnMgYXJlIG5vdCBtZXQsIHRoZSBvcGVyYXRvciB3aWxsIG5vdCBkZXBsb3kgY29ycmVjdGx5LiBJbiB0aGVzZSBjYXNlcywgc3RvcmFnZSBtdXN0IGJlIG1hbnVhbGx5IGNvbmZpZ3VyZWQuIEFmdGVyIGNvbmZpZ3VyaW5nIHN0b3JhZ2UsIGEgdmFsaWQgUFZDIHRlbXBsYXRlIHNob3VsZCBiZSBzdXBwbGllZCBpbiB0aGUgYHZvbHVtZV9jbGFpbV90ZW1wbGF0ZWAgc3BlYyBvZiB0aGUgQ29zdE1hbmFnZW1lbnRNZXRyaWNzQ29uZmlnIENSLlxuXG4jIyBDb25maWd1cmUgdGhlIGNvc3RtYW5hZ2VtZW50LW1ldHJpY3Mtb3BlcmF0b3JcbioqTm90ZSoqIFRoZXJlIGFyZSBzZXBhcmF0ZSBpbnN0cnVjdGlvbnMgZm9yIGNvbmZpZ3VyaW5nIHRoZSBgY29zdG1hbmFnZW1lbnQtbWV0cmljcy1vcGVyYXRvcmAgdG8gcnVuIGluIGEgcmVzdHJpY3RlZCBuZXR3b3JrLlxuIyMjIyMgQ29uZmlndXJlIGF1dGhlbnRpY2F0aW9uXG5UaGUgZGVmYXVsdCBhdXRoZW50aWNhdGlvbiBmb3IgdGhlIG9wZXJhdG9yIGlzIGB0b2tlbmAuIE5vIGZ1cnRoZXIgc3RlcHMgYXJlIHJlcXVpcmVkIHRvIGNvbmZpZ3VyZSB0b2tlbiBhdXRoZW50aWNhdGlvbi4gSWYgYGJhc2ljYCBpcyB0aGUgcHJlZmVycmVkIGF1dGhlbnRpY2F0aW9uIG1ldGhvZCwgYSBTZWNyZXQgbXVzdCBiZSBjcmVhdGVkIHdoaWNoIGhvbGRzIHVzZXJuYW1lIGFuZCBwYXNzd29yZCBjcmVkZW50aWFsczpcbjEuIE9uIHRoZSBsZWZ0IG5hdmlnYXRpb24gcGFuZSwgc2VsZWN0IGBXb3JrbG9hZHNgIC1cdTAwM2UgYFNlY3JldHNgIC1cdTAwM2Ugc2VsZWN0IFByb2plY3Q6IGBjb3N0bWFuYWdlbWVudC1tZXRyaWNzLW9wZXJhdG9yYCAtXHUwMDNlIGBDcmVhdGVgIC1cdTAwM2UgYEtleS9WYWx1ZSBTZWNyZXRgXG4yLiBHaXZlIHRoZSBTZWNyZXQgYSBuYW1lIGFuZCBhZGQgMiBrZXlzOiBgdXNlcm5hbWVgIGFuZCBgcGFzc3dvcmRgIChhbGwgbG93ZXJjYXNlKS4gVGhlIHZhbHVlcyBmb3IgdGhlc2Uga2V5cyBjb3JyZXNwb25kIHRvIGNvbnNvbGUucmVkaGF0LmNvbSBjcmVkZW50aWFscy5cbjMuIFNlbGVjdCBgQ3JlYXRlYC5cbiMjIyMjIENyZWF0ZSB0aGUgQ29zdE1hbmFnZW1lbnRNZXRyaWNzQ29uZmlnXG5Db25maWd1cmUgdGhlIGNvc3RtYW5hZ2VtZW50LW1ldHJpY3Mtb3BlcmF0b3IgYnkgY3JlYXRpbmcgYSBgQ29zdE1hbmFnZW1lbnRNZXRyaWNzQ29uZmlnYC5cbjEuIE9uIHRoZSBsZWZ0IG5hdmlnYXRpb24gcGFuZSwgc2VsZWN0IGBPcGVyYXRvcnNgIC1cdTAwM2UgYEluc3RhbGxlZCBPcGVyYXRvcnNgIC1cdTAwM2UgYGNvc3RtYW5hZ2VtZW50LW1ldHJpY3Mtb3BlcmF0b3JgIC1cdTAwM2UgYENvc3RNYW5hZ2VtZW50TWV0cmljc0NvbmZpZ2AgLVx1MDAzZSBgQ3JlYXRlIEluc3RhbmNlYC5cbjIuIEZvciBgYmFzaWNgIGF1dGhlbnRpY2F0aW9uLCBlZGl0IHRoZSBmb2xsb3dpbmcgdmFsdWVzIGluIHRoZSBzcGVjOlxuICAgICogUmVwbGFjZSBgYXV0aGVudGljYXRpb246IHR5cGU6YCB3aXRoIGBiYXNpY2AuXG4gICAgKiBBZGQgdGhlIGBzZWNyZXRfbmFtZWAgZmllbGQgdW5kZXIgYGF1dGhlbnRpY2F0aW9uYCwgYW5kIHNldCBpdCBlcXVhbCB0byB0aGUgbmFtZSBvZiB0aGUgYXV0aGVudGljYXRpb24gU2VjcmV0IHRoYXQgd2FzIGNyZWF0ZWQgYWJvdmUuIFRoZSBzcGVjIHNob3VsZCBsb29rIHNpbWlsYXIgdG8gdGhlIGZvbGxvd2luZzpcblxuICAgICAgICBgYGBcbiAgICAgICAgICBhdXRoZW50aWNhdGlvbjpcbiAgICAgICAgICAgIHNlY3JldF9uYW1lOiBTRUNSRVQtTkFNRVxuICAgICAgICAgICAgdHlwZTogYmFzaWNcbiAgICAgICAgYGBgXG5cbjMuIFRvIGNvbmZpZ3VyZSB0aGUgY29zdG1hbmFnZW1lbnQtbWV0cmljcy1vcGVyYXRvciB0byBjcmVhdGUgYSBjb3N0IG1hbmFnZW1lbnQgc291cmNlLCBlZGl0IHRoZSBmb2xsb3dpbmcgdmFsdWVzIGluIHRoZSBgc291cmNlYCBmaWVsZDpcbiAgICAqIFJlcGxhY2UgYElOU0VSVC1TT1VSQ0UtTkFNRWAgd2l0aCB0aGUgcHJlZmVycmVkIG5hbWUgb2YgdGhlIHNvdXJjZSB0byBiZSBjcmVhdGVkLlxuICAgICogUmVwbGFjZSB0aGUgYGNyZWF0ZV9zb3VyY2VgIGZpZWxkIHZhbHVlIHdpdGggYHRydWVgLlxuXG4gICAgKipOb3RlOioqIGlmIHRoZSBzb3VyY2UgYWxyZWFkeSBleGlzdHMsIHJlcGxhY2UgYElOU0VSVC1TT1VSQ0UtTkFNRWAgd2l0aCB0aGUgZXhpc3RpbmcgbmFtZSwgYW5kIGxlYXZlIGBjcmVhdGVfc291cmNlYCBhcyBmYWxzZS4gVGhpcyB3aWxsIGFsbG93IHRoZSBvcGVyYXRvciB0byBjb25maXJtIHRoZSBzb3VyY2UgZXhpc3RzLlxuNC4gSWYgbm90IHNwZWNpZmllZCwgdGhlIG9wZXJhdG9yIHdpbGwgY3JlYXRlIGEgZGVmYXVsdCBQZXJzaXN0ZW50Vm9sdW1lQ2xhaW0gY2FsbGVkIGBjb3N0bWFuYWdlbWVudC1tZXRyaWNzLW9wZXJhdG9yLWRhdGFgIHdpdGggMTBHaSBvZiBzdG9yYWdlLiBUbyBjb25maWd1cmUgdGhlIGNvc3RtYW5hZ2VtZW50LW1ldHJpY3Mtb3BlcmF0b3IgdG8gdXNlIG9yIGNyZWF0ZSBhIGRpZmZlcmVudCBQVkMsIGVkaXQgdGhlIGZvbGxvd2luZyBpbiB0aGUgc3BlYzpcbiAgICAqIEFkZCB0aGUgZGVzaXJlZCBjb25maWd1cmF0aW9uIHRvIHRoZSBgdm9sdW1lX2NsYWltX3RlbXBsYXRlYCBmaWVsZCBpbiB0aGUgc3BlYzpcblxuICAgICAgYGBgXG4gICAgICAgIHZvbHVtZV9jbGFpbV90ZW1wbGF0ZTpcbiAgICAgICAgICBhcGlWZXJzaW9uOiB2MVxuICAgICAgICAgIGtpbmQ6IFBlcnNpc3RlbnRWb2x1bWVDbGFpbVxuICAgICAgICAgIG1ldGFkYXRhOlxuICAgICAgICAgICAgbmFtZTogXHUwMDNjaW5zZXJ0LW5hbWVcdTAwM2VcbiAgICAgICAgICBzcGVjOlxuICAgICAgICAgICAgYWNjZXNzTW9kZXM6XG4gICAgICAgICAgICAgIC0gUmVhZFdyaXRlT25jZVxuICAgICAgICAgICAgcmVzb3VyY2VzOlxuICAgICAgICAgICAgICByZXF1ZXN0czpcbiAgICAgICAgICAgICAgICBzdG9yYWdlOiAxMEdpXG4gICAgICBgYGBcblxuICAgICoqTm90ZToqKiBJZiB1c2luZyB0aGUgWUFNTCBWaWV3LCB0aGUgYHZvbHVtZV9jbGFpbV90ZW1wbGF0ZWAgZmllbGQgbXVzdCBiZSBhZGRlZCB0byB0aGUgc3BlY1xuNS4gU2VsZWN0IGBDcmVhdGVgLlxuXG4jIFJlc3RyaWN0ZWQgTmV0d29yayBVc2FnZSAoZGlzY29ubmVjdGVkL2Fpci1nYXBwZWQgbW9kZSlcbiMjIEluc3RhbGxhdGlvblxuVG8gaW5zdGFsbCB0aGUgYGNvc3RtYW5hZ2VtZW50LW1ldHJpY3Mtb3BlcmF0b3JgIGluIGEgcmVzdHJpY3RlZCBuZXR3b3JrLCBmb2xsb3cgdGhlIFtvbG0gZG9jdW1lbnRhdGlvbl0oaHR0cHM6Ly9kb2NzLm9wZW5zaGlmdC5jb20vY29udGFpbmVyLXBsYXRmb3JtLzQuNS9vcGVyYXRvcnMvYWRtaW4vb2xtLXJlc3RyaWN0ZWQtbmV0d29ya3MuaHRtbCkuIFRoZSBvcGVyYXRvciBpcyBmb3VuZCBpbiB0aGUgYGNvbW11bml0eS1vcGVyYXRvcnNgIENhdGFsb2cgaW4gdGhlIGByZWdpc3RyeS5yZWRoYXQuaW8vcmVkaGF0L2NvbW11bml0eS1vcGVyYXRvci1pbmRleDpsYXRlc3RgIEluZGV4LiBJZiBwcnVuaW5nIHRoZSBpbmRleCBiZWZvcmUgcHVzaGluZyB0byB0aGUgbWlycm9yZWQgcmVnaXN0cnksIGtlZXAgdGhlIGBjb3N0bWFuYWdlbWVudC1tZXRyaWNzLW9wZXJhdG9yYCBwYWNrYWdlLlxuXG5XaXRoaW4gYSByZXN0cmljdGVkIG5ldHdvcmssIHRoZSBvcGVyYXRvciBxdWVyaWVzIHByb21ldGhldXMgdG8gZ2F0aGVyIHRoZSBuZWNlc3NhcnkgdXNhZ2UgbWV0cmljcywgd3JpdGVzIHRoZSBxdWVyeSByZXN1bHRzIHRvIENTViBmaWxlcywgYW5kIHBhY2thZ2VzIHRoZSByZXBvcnRzIGZvciBzdG9yYWdlIGluIHRoZSBQVkMuIFRoZXNlIHJlcG9ydHMgdGhlbiBuZWVkIHRvIGJlIG1hbnVhbGx5IGRvd25sb2FkZWQgZnJvbSB0aGUgY2x1c3RlciBhbmQgdXBsb2FkZWQgdG8gW2NvbnNvbGUucmVkaGF0LmNvbV0oaHR0cHM6Ly9jb25zb2xlLnJlZGhhdC5jb20pLlxuXG4jIyBDb25maWd1cmUgdGhlIGNvc3RtYW5hZ2VtZW50LW1ldHJpY3Mtb3BlcmF0b3IgZm9yIGEgcmVzdHJpY3RlZCBuZXR3b3JrXG4jIyMjIyBDcmVhdGUgdGhlIENvc3RNYW5hZ2VtZW50TWV0cmljc0NvbmZpZ1xuQ29uZmlndXJlIHRoZSBjb3N0bWFuYWdlbWVudC1tZXRyaWNzLW9wZXJhdG9yIGJ5IGNyZWF0aW5nIGEgYENvc3RNYW5hZ2VtZW50TWV0cmljc0NvbmZpZ2AuXG4xLiBPbiB0aGUgbGVmdCBuYXZpZ2F0aW9uIHBhbmUsIHNlbGVjdCBgT3BlcmF0b3JzYCAtXHUwMDNlIGBJbnN0YWxsZWQgT3BlcmF0b3JzYCAtXHUwMDNlIGBjb3N0bWFuYWdlbWVudC1tZXRyaWNzLW9wZXJhdG9yYCAtXHUwMDNlIGBDb3N0TWFuYWdlbWVudE1ldHJpY3NDb25maWdgIC1cdTAwM2UgYENyZWF0ZSBJbnN0YW5jZWAuXG4yLiBTcGVjaWZ5IHRoZSBkZXNpcmVkIHN0b3JhZ2UuIElmIG5vdCBzcGVjaWZpZWQsIHRoZSBvcGVyYXRvciB3aWxsIGNyZWF0ZSBhIGRlZmF1bHQgUGVyc2lzdGVudCBWb2x1bWUgQ2xhaW0gY2FsbGVkIGBjb3N0bWFuYWdlbWVudC1tZXRyaWNzLW9wZXJhdG9yLWRhdGFgIHdpdGggMTBHaSBvZiBzdG9yYWdlLiBUbyBjb25maWd1cmUgdGhlIGNvc3RtYW5hZ2VtZW50LW1ldHJpY3Mtb3BlcmF0b3IgdG8gdXNlIG9yIGNyZWF0ZSBhIGRpZmZlcmVudCBQVkMsIGVkaXQgdGhlIGZvbGxvd2luZyBpbiB0aGUgc3BlYzpcbiAgICAqIEFkZCB0aGUgZGVzaXJlZCBjb25maWd1cmF0aW9uIHRvIHRoZSBgdm9sdW1lX2NsYWltX3RlbXBsYXRlYCBmaWVsZCBpbiB0aGUgc3BlYzpcblxuICAgICAgYGBgXG4gICAgICAgIHZvbHVtZV9jbGFpbV90ZW1wbGF0ZTpcbiAgICAgICAgICBhcGlWZXJzaW9uOiB2MVxuICAgICAgICAgIGtpbmQ6IFBlcnNpc3RlbnRWb2x1bWVDbGFpbVxuICAgICAgICAgIG1ldGFkYXRhOlxuICAgICAgICAgICAgbmFtZTogXHUwMDNjaW5zZXJ0LW5hbWVcdTAwM2VcbiAgICAgICAgICBzcGVjOlxuICAgICAgICAgICAgc3RvcmFnZUNsYXNzTmFtZTogXHUwMDNjaW5zZXJ0LWNsYXNzLW5hbWVcdTAwM2VcbiAgICAgICAgICAgIGFjY2Vzc01vZGVzOlxuICAgICAgICAgICAgICAtIFJlYWRXcml0ZU9uY2VcbiAgICAgICAgICAgIHJlc291cmNlczpcbiAgICAgICAgICAgICAgcmVxdWVzdHM6XG4gICAgICAgICAgICAgICAgc3RvcmFnZTogMTBHaVxuICAgICAgYGBgXG5cbiAgICAqKk5vdGU6KiogSWYgdXNpbmcgdGhlIFlBTUwgVmlldywgdGhlIGB2b2x1bWVfY2xhaW1fdGVtcGxhdGVgIGZpZWxkIG11c3QgYmUgYWRkZWQgdG8gdGhlIHNwZWNcbjMuIChPcHRpb25hbCkgU3BlY2lmeSB0aGUgZGVzaXJlZCByZXBvcnQgcmV0ZW50aW9uLiBUaGUgb3BlcmF0b3Igd2lsbCByZXRhaW4gMzAgcmVwb3J0cyBieSBkZWZhdWx0LiBUaGlzIGNvcnJlc3BvbmRzIHRvIGFwcHJveGltYXRlbHkgb25lIHdlZWsncyB3b3J0aCBvZiBkYXRhIGlmIHVzaW5nIHRoZSBkZWZhdWx0IHBhY2thZ2luZyBjeWNsZS4gVG8gbW9kaWZ5IHRoZSBudW1iZXIgb2YgcmV0YWluZWQgcmVwb3J0czpcbiAgICAqIENoYW5nZSB0aGUgYHBhY2thZ2luZ2Agc3BlYyBmaWVsZCBgbWF4X3JlcG9ydHNfdG9fc3RvcmVgIHRvIHRoZSBkZXNpcmVkIG51bWJlciBvZiByZXBvcnRzIHRvIHJldGFpbi4gT25jZSB0aGlzIG1heCBudW1iZXIgaXMgcmVhY2hlZCwgdGhlIG9wZXJhdG9yIHdpbGwgc3RhcnQgcmVtb3ZpbmcgdGhlIG9sZGVzdCBwYWNrYWdlcyByZW1haW5pbmcgb24gdGhlIFBWQzpcblxuICAgICAgYGBgXG4gICAgICAgIHBhY2thZ2luZzpcbiAgICAgICAgICBtYXhfc2l6ZV9NQjogMTAwXG4gICAgICAgICAgbWF4X3JlcG9ydHNfdG9fc3RvcmU6IDMwXG4gICAgICBgYGBcblxuICAgICoqTm90ZToqKiBUaGUgbnVtYmVyIG9mIHJldGFpbmVkIHJlcG9ydHMgZGlyZWN0bHkgYWZmZWN0cyB0aGUgZnJlcXVlbmN5IHRoYXQgcmVwb3J0cyBtdXN0IGJlIG1hbnVhbGx5IGRvd25sb2FkZWQgZnJvbSB0aGUgUFZDLiBUYWtlIGNhdXRpb24gaW4gc2V0dGluZyB0aGlzIHRvIGEgaGlnaGVyIG51bWJlciBvZiByZXBvcnRzLCBhcyB0aGUgb3BlcmF0b3IgY2Fubm90IHdyaXRlIGRhdGEgdG8gdGhlIFBWQyBpZiB0aGUgc3RvcmFnZSBpcyBmdWxsLlxuNC4gVG8gY29uZmlndXJlIHRoZSBvcGVyYXRvciB0byBwZXJmb3JtIGluIGEgcmVzdHJpY3RlZCBuZXR3b3JrLCBzZXQgdGhlIGB1cGxvYWRfdG9nZ2xlYCB0byBgZmFsc2VgOlxuXG4gIGBgYFxuICAgIHVwbG9hZDpcbiAgICAgIHVwbG9hZF9jeWNsZTogMzYwLFxuICAgICAgdXBsb2FkX3RvZ2dsZTogZmFsc2VcbiAgYGBgXG5cbjUuIFNlbGVjdCBgQ3JlYXRlYC5cblxuIyMgRG93bmxvYWQgcmVwb3J0cyBmcm9tIHRoZSBPcGVyYXRvciBcdTAwMjYgY2xlYW4gdXAgdGhlIFBWQ1xuSWYgdGhlIGBjb3N0bWFuYWdlbWVudC1tZXRyaWNzLW9wZXJhdG9yYCBpcyBjb25maWd1cmVkIHRvIHJ1biBpbiBhIHJlc3RyaWN0ZWQgbmV0d29yaywgdGhlIG1ldHJpYyByZXBvcnRzIHdpbGwgbm90IGF1dG9tYXRpY2FsbHkgdXBsb2FkIHRvIGNvc3QgbWFuYWdtZW50LiBJbnN0ZWFkLCB0aGV5IG5lZWQgdG8gYmUgbWFudWFsbHkgY29waWVkIGZyb20gdGhlIFBWQyBmb3IgdXBsb2FkIHRvIFtjb25zb2xlLnJlZGhhdC5jb21dKGh0dHBzOi8vY29uc29sZS5yZWRoYXQuY29tKS4gVGhlIGRlZmF1bHQgY29uZmlndXJhdGlvbiBzYXZlcyBvbmUgd2VlayBvZiByZXBvcnRzIHdoaWNoIG1lYW5zIHRoZSBwcm9jZXNzIG9mIGRvd25sb2FkaW5nIGFuZCB1cGxvYWRpbmcgcmVwb3J0cyBzaG91bGQgYmUgcmVwZWF0ZWQgd2Vla2x5IHRvIHByZXZlbnQgbG9zcyBvZiBtZXRyaWNzIGRhdGEuIFRvIGRvd25sb2FkIHRoZSByZXBvcnRzLCBjb21wbGV0ZSB0aGUgZm9sbG93aW5nIHN0ZXBzOlxuMS4gQ3JlYXRlIHRoZSBmb2xsb3dpbmcgUG9kLCBlbnN1cmluZyB0aGUgYGNsYWltTmFtZWAgbWF0Y2hlcyB0aGUgUFZDIGNvbnRhaW5pbmcgdGhlIHJlcG9ydCBkYXRhOlxuXG4gIGBgYFxuICAgIGtpbmQ6IFBvZFxuICAgIGFwaVZlcnNpb246IHYxXG4gICAgbWV0YWRhdGE6XG4gICAgICBuYW1lOiB2b2x1bWUtc2hlbGxcbiAgICAgIG5hbWVzcGFjZTogY29zdG1hbmFnZW1lbnQtbWV0cmljcy1vcGVyYXRvclxuICAgICAgbGFiZWxzOlxuICAgICAgICBhcHA6IGNvc3RtYW5hZ2VtZW50LW1ldHJpY3Mtb3BlcmF0b3JcbiAgICBzcGVjOlxuICAgICBhZmZpbml0eTpcbiAgICAgICBwb2RBZmZpbml0eTpcbiAgICAgICAgIHJlcXVpcmVkRHVyaW5nU2NoZWR1bGluZ0lnbm9yZWREdXJpbmdFeGVjdXRpb246XG4gICAgICAgICAtIGxhYmVsU2VsZWN0b3I6XG4gICAgICAgICAgICAgbWF0Y2hFeHByZXNzaW9uczpcbiAgICAgICAgICAgICAtIGtleTogYXBwXG4gICAgICAgICAgICAgICBvcGVyYXRvcjogSW5cbiAgICAgICAgICAgICAgIHZhbHVlczpcbiAgICAgICAgICAgICAgIC0gY29zdG1hbmFnZW1lbnQtbWV0cmljcy1vcGVyYXRvclxuICAgICAgICAgICB0b3BvbG9neUtleToga3ViZXJuZXRlcy5pby9ob3N0bmFtZVxuICAgICAgdm9sdW1lczpcbiAgICAgIC0gbmFtZTogY29zdG1hbmFnZW1lbnQtbWV0cmljcy1vcGVyYXRvci1yZXBvcnRzXG4gICAgICAgIHBlcnNpc3RlbnRWb2x1bWVDbGFpbTpcbiAgICAgICAgICBjbGFpbU5hbWU6IGNvc3RtYW5hZ2VtZW50LW1ldHJpY3Mtb3BlcmF0b3ItZGF0YVxuICAgICAgY29udGFpbmVyczpcbiAgICAgIC0gbmFtZTogdm9sdW1lLXNoZWxsXG4gICAgICAgIGltYWdlOiBidXN5Ym94XG4gICAgICAgIGNvbW1hbmQ6IFsnc2xlZXAnLCAnaW5maW5pdHknXVxuICAgICAgICB2b2x1bWVNb3VudHM6XG4gICAgICAgIC0gbmFtZTogY29zdG1hbmFnZW1lbnQtbWV0cmljcy1vcGVyYXRvci1yZXBvcnRzXG4gICAgICAgICAgbW91bnRQYXRoOiAvdG1wL2Nvc3RtYW5hZ2VtZW50LW1ldHJpY3Mtb3BlcmF0b3ItcmVwb3J0c1xuICBgYGBcblxuMi4gVXNlIHJzeW5jIHRvIGNvcHkgYWxsIG9mIHRoZSBmaWxlcyByZWFkeSBmb3IgdXBsb2FkIGZyb20gdGhlIFBWQyB0byBhIGxvY2FsIGZvbGRlcjpcblxuICBgYGBcbiAgJCBvYyByc3luYyB2b2x1bWUtc2hlbGw6L3RtcC9jb3N0bWFuYWdlbWVudC1tZXRyaWNzLW9wZXJhdG9yLXJlcG9ydHMvdXBsb2FkIGxvY2FsL3BhdGgvdG8vc2F2ZS9mb2xkZXJcbiAgYGBgXG5cbjMuIE9uY2UgY29uZmlybWluZyB0aGF0IHRoZSBmaWxlcyBoYXZlIGJlZW4gc3VjY2Vzc2Z1bGx5IGNvcGllZCwgdXNlIHJzaCB0byBjb25uZWN0IHRvIHRoZSBwb2QgYW5kIGRlbGV0ZSB0aGUgY29udGVudHMgb2YgdGhlIHVwbG9hZCBmb2xkZXIgc28gdGhhdCB0aGV5IGFyZSBubyBsb25nZXIgaW4gc3RvcmFnZTpcblxuICBgYGBcbiAgJCBvYyByc2ggdm9sdW1lLXNoZWxsXG4gICQgcm0gL3RtcC9jb3N0bWFuYWdlbWVudC1tZXRyaWNzLW9wZXJhdG9yLXJlcG9ydHMvdXBsb2FkLypcbiAgYGBgXG5cbjQuIChPcHRpb25hbCkgRGVsZXRlIHRoZSBwb2QgdGhhdCB3YXMgdXNlZCB0byBjb25uZWN0IHRvIHRoZSBQVkM6XG5cbiAgYGBgXG4gICQgb2MgZGVsZXRlIC1mIHZvbHVtZS1zaGVsbC55YW1sXG4gIGBgYFxuXG4jIyBDcmVhdGUgYSBzb3VyY2VcbkluIGEgcmVzdHJpY3RlZCBuZXR3b3JrLCB0aGUgYGNvc3RtYW5hZ2VtZW50LW1ldHJpY3Mtb3BlcmF0b3JgIGNhbm5vdCBhdXRvbWF0aWNhbGx5IGNyZWF0ZSBhIHNvdXJjZS4gVGhpcyBwcm9jZXNzIG11c3QgYmUgZG9uZSBtYW51YWxseS4gSW4gdGhlIGNvbnNvbGUucmVkaGF0LmNvbSBwbGF0Zm9ybSwgb3BlbiB0aGUgW1NvdXJjZXMgbWVudV0oaHR0cHM6Ly9jb25zb2xlLnJlZGhhdC5jb20vc2V0dGluZ3Mvc291cmNlcy8pIHRvIGJlZ2luIGFkZGluZyBhbiBPcGVuU2hpZnQgc291cmNlIHRvIGNvc3QgbWFuYWdlbWVudDpcblxuUHJlcmVxdWlzaXRlczpcbiogVGhlIGNsdXN0ZXIgaWRlbnRpZmllciB3aGljaCBjYW4gYmUgZm91bmQgaW4gdGhlIENvc3RNYW5hZ2VtZW50TWV0cmljc0NvbmZpZyBDUiwgdGhlIGNsdXN0ZXIgT3ZlcnZpZXcgcGFnZSwgb3IgdGhlIGNsdXN0ZXIgSGVscCBcdTAwM2UgQWJvdXQuXG5cbkNyZWF0ZSBzb3VyY2U6XG4xLiBOYXZpZ2F0ZSB0byB0aGUgU291cmNlcyBtZW51XG4yLiBTZWxlY3QgdGhlIGBSZWQgSGF0IHNvdXJjZXNgIHRhYlxuMy4gQ3JlYXRlIGEgbmV3IGBSZWQgSGF0IE9wZW5zaGlmdCBDb250YWluZXIgUGxhdGZvcm1gIHNvdXJjZTpcbiAgICAqIGdpdmUgdGhlIHNvdXJjZSBhIHVuaXF1ZSBuYW1lXG4gICAgKiBhZGQgdGhlIENvc3QgTWFuYWdlbWVudCBhcHBsaWNhdGlvblxuICAgICogYWRkIHRoZSBjbHVzdGVyIGlkZW50aWZpZXJcbjQuIEluIHRoZSBTb3VyY2VzIHdpemFyZCwgcmV2aWV3IHRoZSBkZXRhaWxzIGFuZCBjbGljayBgRmluaXNoYCB0byBjcmVhdGUgdGhlIFNvdXJjZS5cblxuIyMgVXBsb2FkIHRoZSByZXBvcnRzIHRvIGNvc3QgbWFuYWdtZW50XG5VcGxvYWRpbmcgcmVwb3J0cyB0byBjb3N0IG1hbmFnbWVudCBpcyBkb25lIHRocm91Z2ggY3VybDpcblxuICAgICQgY3VybCAtdnZ2diAtRiBcImZpbGU9QEZJTEVfTkFNRS50YXIuZ3o7dHlwZT1hcHBsaWNhdGlvbi92bmQucmVkaGF0LmhjY20udGFyK3RnelwiICBodHRwczovL2Nsb3VkLnJlZGhhdC5jb20vYXBpL2luZ3Jlc3MvdjEvdXBsb2FkIC11IFVTRVJOQU1FOlBBU1Ncblxud2hlcmUgYFVTRVJOQU1FYCBhbmQgYFBBU1NgIGNvcnJlc3BvbmQgdG8gdGhlIHVzZXIgY3JlZGVudGlhbHMgZm9yIFtjb25zb2xlLnJlZGhhdC5jb21dKGh0dHBzOi8vY29uc29sZS5yZWRoYXQuY29tKSwgYW5kIGBGSUxFX05BTUVgIGlzIHRoZSBuYW1lIG9mIHRoZSByZXBvcnQgdG8gdXBsb2FkLiIsImRpc3BsYXlOYW1lIjoiQ29zdCBNYW5hZ2VtZW50IE1ldHJpY3MgT3BlcmF0b3IiLCJpY29uIjpbeyJiYXNlNjRkYXRhIjoiUEQ5NGJXd2dkbVZ5YzJsdmJqMGlNUzR3SWlCbGJtTnZaR2x1WnowaWRYUm1MVGdpUHo0S1BDRXRMU0JIWlc1bGNtRjBiM0k2SUVGa2IySmxJRWxzYkhWemRISmhkRzl5SURJeUxqRXVNQ3dnVTFaSElFVjRjRzl5ZENCUWJIVm5MVWx1SUM0Z1UxWkhJRlpsY25OcGIyNDZJRFl1TURBZ1FuVnBiR1FnTUNrZ0lDMHRQZ284YzNabklIWmxjbk5wYjI0OUlqRXVNU0lnYVdROUlreGhlV1Z5WHpFaUlIaHRiRzV6UFNKb2RIUndPaTh2ZDNkM0xuY3pMbTl5Wnk4eU1EQXdMM04yWnlJZ2VHMXNibk02ZUd4cGJtczlJbWgwZEhBNkx5OTNkM2N1ZHpNdWIzSm5MekU1T1RrdmVHeHBibXNpSUhnOUlqQndlQ0lnZVQwaU1IQjRJZ29KSUhacFpYZENiM2c5SWpBZ01DQXpNREFnTXpBd0lpQnpkSGxzWlQwaVpXNWhZbXhsTFdKaFkydG5jbTkxYm1RNmJtVjNJREFnTUNBek1EQWdNekF3T3lJZ2VHMXNPbk53WVdObFBTSndjbVZ6WlhKMlpTSStDanh6ZEhsc1pTQjBlWEJsUFNKMFpYaDBMMk56Y3lJK0Nna3VjM1F3ZTJacGJHdzZJMFZGTURBd01EdDlDand2YzNSNWJHVStDangwYVhSc1pUNURiM04wTFdsamIyNDhMM1JwZEd4bFBnbzhaR1Z6WXo1RGNtVmhkR1ZrSUhkcGRHZ2dVMnRsZEdOb0xqd3ZaR1Z6WXo0S1BHYytDZ2s4Wno0S0NRazhjR0YwYUNCamJHRnpjejBpYzNRd0lpQmtQU0pOTWpNNUxqQXpOekF6TXpFc01URTNMakkzTlRFM04yTXRNeTR5TmpVNE1EZ3hMVFF4TGprNE9UQTFNVGd0TXpndU1qVTJOamd6TXkwM05DNDJORGN5TURFMUxUZ3hMakUzT0Rnek15MDNOQzQyTkRjeU1ERTFDZ2tKQ1dNdE1qY3VOVEkyTVRVek5pd3dMVFV6TGpFNE5qRXlOamNzTVRNdU9UazJNelE1TXkwMk9DNHhNVFUxTnpBeExETTNMak15TXpZd01EaGpMVEV1T0RZMk1UZ3dOQ3d3TFRNdU56TXlNelV6TWkwd0xqUTJOalUwTlRFdE5pNHdOalV3TnpnM0xUQXVORFkyTlRRMU1Rb0pDUWxqTFRNMExqVXlORE16TURFc01DMDJNaTQ1T0RNMU56YzNMREkzTGprNU1qWTVPRGN0TmpJdU9UZ3pOVGMzTnl3Mk1pNDVPRE0xTmpZemN6STNMams1TWpZNU9EY3NOakl1T1Rnek5UWTJNeXcyTWk0NU9ETTFOemMzTERZeUxqazRNelUyTmpOb01UWXVNekk1TURjeENna0pDV016TGpjek1qTTJNRGdzTUN3MkxqazVPREUzTmpZdE15NHlOalU0TURneExEWXVPVGs0TVRjMk5pMDJMams1T0RFMk9EbHpMVE11TWpZMU9ERTFOeTAyTGprNU9ERTJPRGt0Tmk0NU9UZ3hOelkyTFRZdU9UazRNVFk0T1dndE1UWXVNekk1TURjeENna0pDV010TWpjdU1EVTVOakV5TXl3d0xUUTRMalV5TURZM09UVXRNakV1T1RJM05qSTNOaTAwT0M0MU1qQTJOemsxTFRRNExqVXlNRFkzTlRkek1qRXVPVEkzTmpFeU15MDBPQzQxTWpBMk9ETXpMRFE0TGpVeU1EWTNPVFV0TkRndU5USXdOamd6TXdvSkNRbGpNaTQzT1RreU56QTJMREFzTlM0MU9UZzFOREV6TERBdU5EWTJOVFExTVN3NExqTTVOemd3TkRNc01DNDVNek13T1RBeVl6SXVOems1TWpjd05pd3dMalEyTmpVME5URXNOaTR3TmpVd056ZzNMVEF1T1RNek1Ea3dNaXczTGpRMk5EY3lNVGN0TXk0M016SXpOakE0Q2drSkNXTXhNaTR4TXpBeE56STNMVEl3TGprNU5EVXlPVGNzTXpRdU5USTBNek13TVMwek5DNHdOVGMzT0RnNExEVTRMak14T0RFeU1qa3RNelF1TURVM056ZzRPR016Tmk0NE5UY3dOekE1TERBc05qY3VNVGd5TkRrMU1Td3pNQzR6TWpVME1qQTBMRFkzTGpFNE1qUTVOVEVzTmpjdU1UZ3lORGM1T1FvSkNRbGpNQ3d6TGpjek1qTTFNeklzTXk0eU5qVTRNRGd4TERZdU9UazRNVGMyTml3MkxqazVPREUyT0Rrc05pNDVPVGd4TnpZMll6RTJMak15T1RBM01Td3dMREk1TGpnMU9Ea3dNaXd4TXk0MU1qazRNREEwTERJNUxqZzFPRGt3TWl3eU9TNDROVGc0TnpFMUNna0pDWE10TVRNdU5USTVPRE13T1N3eU9TNDROVGc0T0RZM0xUSTVMamcxT0Rrd01pd3lPUzQ0TlRnNE9EWTNZeTB6TGpjek1qTTJNRGdzTUMwMkxqazVPREUyT0Rrc015NHlOalU0TURneExUWXVPVGs0TVRZNE9TdzJMams1T0RFMk9Ea0tDUWtKY3pNdU1qWTFPREE0TVN3MkxqazVPREUyT0Rrc05pNDVPVGd4TmpnNUxEWXVPVGs0TVRZNE9XTXlOQzR5TmpBek16QXlMREFzTkRRdU16SXhOell5TVMweU1DNHdOakUwTVRZMkxEUTBMak15TVRjMk1qRXRORFF1TXpJeE56WXlNUW9KQ1FsRE1qYzJMak0yTURZeU5qSXNNVE01TGpJd01qYzRPVE1zTWpZd0xqQXpNVFUxTlRJc01USXdMalUwTURrNU1qY3NNak01TGpBek56QXpNekVzTVRFM0xqSTNOVEUzTjNvaUx6NEtDUWs4Y0dGMGFDQmpiR0Z6Y3owaWMzUXdJaUJrUFNKTk1qQTJMamcwTlRReU9EVXNNakl3TGpnME9ERTNOV00zTGpRMk5EY3dOalF0T0M0NE5qUXpOalEyTERFeExqWTJNell5TFRJd0xqVXlOems0TkRZc01URXVOall6TmpJdE16SXVOalU0TVRVM013b0pDUWxqTUMweU9DNDVNalUzT1RZMUxUSXpMak15TnpJMExUVXlMakkxTXpBek5qVXROVEl1TWpVek1ETTJOUzAxTWk0eU5UTXdNelkxY3kwMU1pNHlOVE13TkRReExESXpMak15TnpJMExUVXlMakkxTXpBME5ERXNOVEl1TWpVek1ETTJOUW9KQ1Fsek1qTXVNekkzTWpRM05pdzFNaTR5TlRNd05URTRMRFV5TGpJMU16QTBOREVzTlRJdU1qVXpNRFV4T0dNeE1TNHhPVGN3T0RJMUxEQXNNakV1T1RJM05qRXlNeTB6TGpjek1qTTJNRGdzTXpBdU16STFOREkwTWkwNUxqYzVOelF6T1Rac016RXVOekkxTURVeE9Td3pNQzQzT1RFNU5qRTNDZ2tKQ1dNeExqTTVPVFl5Tnpjc01TNHpPVGsyTWpjM0xETXVNalkxT0RJek5Dd3hMamcyTmpFNE1EUXNOUzR4TXpFNU9EZzFMREV1T0RZMk1UZ3dOR014TGpnMk5qRTVOVGNzTUN3ekxqY3pNak0yTURndE1DNDVNek13TnpVc05TNHhNekU1T0RnMUxUSXVNek15TnpNek1nb0pDUWxqTWk0M09Ua3lOekEyTFRJdU56azVNalUxTkN3eUxqYzVPVEkzTURZdE55NDBOalEzTURZMExEQXRNVEF1TWpZek9UYzNNVXd5TURZdU9EUTFOREk0TlN3eU1qQXVPRFE0TVRjMWVpQk5NVEk0TGpRMk5UZzJOakVzTVRnNExqRTVNREF4TnpjS0NRa0pZekF0TWpBdU9UazBOVEl5TVN3eE55NHlOakl4TnpZMUxUTTRMakkxTmpZNU9EWXNNemd1TWpVMk5qazROaTB6T0M0eU5UWTJPVGcyY3pNNExqSTFOalk1T0RZc01UY3VNall5TVRjMk5Td3pPQzR5TlRZMk9UZzJMRE00TGpJMU5qWTVPRFlLQ1FrSmN5MHhOeTR5TmpJeE56WTFMRE00TGpJMU5qWTVPRFl0TXpndU1qVTJOams0Tml3ek9DNHlOVFkyT1RnMlV6RXlPQzQwTmpVNE5qWXhMREl3T1M0eE9EUTFNems0TERFeU9DNDBOalU0TmpZeExERTRPQzR4T1RBd01UYzNlaUl2UGdvSlBDOW5QZ29KUEdjK0Nna0pQSEJoZEdnZ1kyeGhjM005SW5OME1DSWdaRDBpVFRFM05DNHlPREEyTXprMkxERTROUzQ0TnpNMk1URTFZekl1TWpFMk1qYzRNU3d3TGpZNE5qVXpPRGNzTkM0eE1UQXdNekV4TERFdU9EY3dOekV5TXl3MUxqWTNOall6TlRjc015NDFOVEkxTURVMUNna0pDV014TGpVMk5qWXdORFlzTVM0Mk9ERTRNRGcxTERJdU5UazROekE1TVN3ekxqWTBPVEkyTVRVc015NHdPVEUzTXpVNExEVXVPVEF5TkRBME9HTXdMalE1TnpZeE9UWXNNaTR5TlRNeE5ETXpMREF1TXpZek9UazROQ3cwTGpVeU9UTXlOelF0TUM0ME1EQTROemc1TERZdU9ERTVNek0xT1FvSkNRbGpMVEF1T1RFMk9URTFPU3d5TGpVeU1ETTROVGN0TWk0ME9ETTFNakExTERRdU5USTVNekV5TVMwMExqWTVPVGM1T0RZc05pNHdNVGMxT1RNMFl5MHlMakl4TmpJMk1qZ3NNUzQwT0RneU9ERXlMVFF1TmprMU1qQTFOeXd5TGpJM01UVTNOVGt0Tnk0ME5UQTFOelk0TERJdU16UTVPRGs1TXdvSkNRbDJOUzQxTURFMU5UWTBZekFzTUM0MU16UTBPRFE1TFRBdU1UY3dORGN4TWl3d0xqazNNakl4TXpjdE1DNDFNVEUwTlRrMExERXVNekUzTnpjNU5XTXRNQzR6TkRVMU5qVTRMREF1TXpRMU5UZ3hNUzB3TGpjNE16STVORGNzTUM0MU1UWXdOamMxTFRFdU16SXlNemczTnl3d0xqVXhOakEyTnpVS0NRa0phQzB6TGpZMk56WTVOREZqTFRBdU5UTTBOVEF3TVN3d0xUQXVPVGN5TWpFek55MHdMakUzTURRNE5qVXRNUzR6TVRjM056azFMVEF1TlRFMk1EWTNOV010TUM0ek5EQTVOekk1TFRBdU16UTFOVFkxT0Mwd0xqVXhOakEyTnpVdE1DNDNPRE15T1RRM0xUQXVOVEUyTURZM05TMHhMak14TnpjM09UVUtDUWtKZGkwMUxqVXdNVFUxTmpSakxUTXVOalkzTmprME1Td3dMVFl1T1RnNU9ESXlOQzB4TGpFME56STVNekV0T1M0NU5qZzJOVGcwTFRNdU5ETTNNekF4Tm1NdE1DNHpPREkwTkRZekxUQXVNemd5TkRNeExUQXVOakV5T0RJek5TMHdMamcwTXpJd01EY3RNQzQyT0RnNE5ESTRMVEV1TXpjM056QXdPQW9KQ1FsakxUQXVNRGMyTURNME5TMHdMalV6TkRRNE5Ea3NNQzR4TVRVeE9EZzJMVEV1TURNeU1UQTBOU3d3TGpVM016WXpPRGt0TVM0ME9EZ3lOVEEzYkRNdU9EazFOemd5TlMwekxqZzVPREE0TmpVS0NRa0pZekF1TXpBNE56QXdOaTB3TGpJek1ETTVNalVzTUM0Mk5qZ3hNRFl4TFRBdU16Z3lORE14TERFdU1Ea3lNREV3TlMwd0xqUTFOakUyTVRWak1DNDBNVGt5T1RZekxUQXVNRGM0TXpJek5Dd3dMamd5TURFMU9Ua3NNQzR3TXpZNE5Td3hMakl3TWpZd05qSXNNQzR6TkRBNU56STVDZ2tKQ1dNeExqRTBOekk1TXpFc01DNDNOalE0TnpjekxESXVORFF5TURRM01Td3hMakUwTnpNd09ETXNNeTQ0T1RNME5qTXhMREV1TVRRM016QTRNMmczTGpZNE1EazFOR013TGpreE5qazBOalFzTUN3eExqY3dNREkwTVRFdE1DNHpNakkxTkRBekxESXVNelE1T0RrNU15MHdMamszTWpJeE16Y0tDUWtKWXpBdU5qUTVOamc0Tnkwd0xqWTBPVFk0T0Rjc01DNDVOekl5TWprdE1TNDBOelEwTlRZNExEQXVPVGN5TWpJNUxUSXVORFkxTVRBek1XTXdMVEF1TmpnMk5UVTBMVEF1TWpJMU56WTVMVEV1TXpNMk1qSTNOQzB3TGpZNE5qVXpPRGN0TVM0NU5Ea3dNelUyQ2drSkNXTXRNQzQwTlRZeE5qRTFMVEF1TmpFeU9ESXpOUzB4TGpBek1qRXhPVGd0TVM0d016SXhNVGs0TFRFdU56RTROalF6TWkweExqSTJNalE1Tmpsc0xURXhMamd3TkRnME1ERXRNeTQwTXpjek1UWTVDZ2tKQ1dNdE1pNDFPVGcyT1RNNExUQXVOelkwT0RjM015MDBMamMzTXpVeU9URXRNaTR4TXpjNU5UUTNMVFl1TlRNek5qUTFOaTAwTGpFeU9EUTBPRFZqTFRFdU56VTNPREV5TlMweExqazROVGt3TURrdE1pNDNPRGMyTkRNMExUUXVNamMxT1RJME55MHpMakE1TkRBek9Ua3ROaTQ0TnpRMk16TTRDZ2tKQ1dNdE1DNHhOVEl3TlRNNExUSXVORFEyTmpVMU15d3dMak13TmpNNU5qVXROQzQzTVRneU16RXlMREV1TXpjMU16azJOeTAyTGpneE9UTXpOVGxqTVM0d05qZzVOamszTFRJdU1UQXhNRGc1TlN3eUxqVTVPRGN3T1RFdE15NDNPREk0T0RJM0xEUXVOVGcwTmpFdE5TNHdORFV6TnprMkNna0pDV014TGprNE5Ua3dNRGt0TVM0eU5UYzRPRGc0TERRdU1qQXlNVGM1TFRFdU9EZzVNVEk1Tml3MkxqWTBPRGcwT1RVdE1TNDRPRGt4TWprMmFEQXVNakkxTnpZNWRpMDFMalV3TVRVME1URUtDUWtKWXpBdE1DNDFNelExTURBeExEQXVNVGMxTURrME5pMHdMamszTWpJeU9Td3dMalV4TmpBMk56VXRNUzR6TVRjM09UUTRZekF1TXpRMU5UWTFPQzB3TGpNME5UVTRNVEVzTUM0M09ETXlOemswTFRBdU5URTJNRFV5TWl3eExqTXhOemMzT1RVdE1DNDFNVFl3TlRJeWFETXVOalkzTmprME1Rb0pDUWxqTUM0MU16a3dPVE1zTUN3d0xqazNOamd5TVRrc01DNHhOekEwTnpFeUxERXVNekl5TXpnM055d3dMalV4TmpBMU1qSmpNQzR6TkRBNU9EZ3lMREF1TXpRMU5UWTFPQ3d3TGpVeE1UUTFPVFFzTUM0M09ETXlPVFEzTERBdU5URXhORFU1TkN3eExqTXhOemM1TkRoMk5TNDFNREUxTkRFeENna0pDV016TGpZMk56WTVOREVzTUN3MkxqazFOelUyTlRNc01TNHhORGN5T1RNeExEa3VPRFl3TXpneU1Td3pMalF6TnpNd01UWmpNQzQwTlRZeE56WTRMREF1TXpneU5EUTJNeXd3TGpjeU16UXhPVElzTUM0NE5ETXlNREEzTERBdU9EQXhOelF5Tml3eExqTTNOelk0TlRVS0NRa0pZekF1TURjek56RTFNaXd3TGpVek5EVXdNREV0TUM0eE1UVXlNRE01TERBdU9Ua3dOalEyTkMwd0xqVTNNVE0xTURFc01TNHpOek13TnpjMGJDMHpMamc1T0RBNE5qVXNOQzR3TVRNeU56VXhDZ2tKQ1dNdE1DNHpNRGczTVRVNExEQXVNak13TXpreU5TMHdMalkyT0RFd05qRXNNQzR6T0RJME16RXRNUzR3T1RJd01UQTFMREF1TkRVMk1UWXhOV010TUM0ME1Ua3lPVFl6TERBdU1EYzRNekl6TkMwd0xqZ3lNREUxT1Rrc01DMHhMakl3TWpVNU1Ea3RNQzR5TWpVM05qa0tDUWtKWXkweExqRTBNamN4TlRVdE1DNDRORE15TURBM0xUSXVORFF5TURjM05pMHhMakkyTWpRNU5qa3RNeTQ0T1Rnd09EWTFMVEV1TWpZeU5EazJPV2d0Tnk0Mk56WXpOakV4WXkwd0xqa3hOamt4TlRrc01DMHhMamN3TURJeU5UZ3NNQzR6TWpJMU1qVXRNaTR6TkRrNE9Ua3pMREF1T1RjeU1qRXpOd29KQ1FsakxUQXVOalE1TmpnNE55d3dMalkwT1RZM016VXRNQzQ1TnpZNE1qRTVMREV1TkRjME5EUXhOUzB3TGprM05qZ3lNVGtzTWk0ME5qVXdPRGM1WXpBc01DNDJPRFkxTlRRc01DNHlNekF6T1RJMUxERXVNek0yTWpFeU1pd3dMalk1TVRFME5qa3NNUzQ1TkRrd016VTJDZ2tKQ1dNd0xqUTFOakUyTVRVc01DNDJNVEk0TWpNMUxERXVNRE15TVRFNU9Dd3hMakF6TWpFeE9UZ3NNUzQzTVRnMk5UZzBMREV1TWpZeU5EazJPVXd4TnpRdU1qZ3dOak01Tml3eE9EVXVPRGN6TmpFeE5Yb2lMejRLQ1R3dlp6NEtQQzluUGdvOEwzTjJaejRLIiwibWVkaWF0eXBlIjoiaW1hZ2Uvc3ZnK3htbCJ9XSwiaW5zdGFsbCI6eyJzcGVjIjp7ImNsdXN0ZXJQZXJtaXNzaW9ucyI6W3sicnVsZXMiOlt7ImFwaUdyb3VwcyI6WyJjb25maWcub3BlbnNoaWZ0LmlvIl0sInJlc291cmNlcyI6WyJjbHVzdGVydmVyc2lvbnMiXSwidmVyYnMiOlsiZ2V0IiwibGlzdCIsIndhdGNoIl19LHsiYXBpR3JvdXBzIjpbIiJdLCJyZXNvdXJjZXMiOlsibmFtZXNwYWNlcyJdLCJ2ZXJicyI6WyJnZXQiLCJsaXN0Iiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsiIl0sInJlc291cmNlcyI6WyJzZWNyZXRzIl0sInZlcmJzIjpbImdldCJdfV0sInNlcnZpY2VBY2NvdW50TmFtZSI6ImNvc3RtYW5hZ2VtZW50LW1ldHJpY3MtY29udHJvbGxlci1tYW5hZ2VyIn1dLCJkZXBsb3ltZW50cyI6W3sibmFtZSI6ImNvc3RtYW5hZ2VtZW50LW1ldHJpY3Mtb3BlcmF0b3IiLCJzcGVjIjp7InJlcGxpY2FzIjoxLCJzZWxlY3RvciI6eyJtYXRjaExhYmVscyI6eyJhcHAiOiJjb3N0bWFuYWdlbWVudC1tZXRyaWNzLW9wZXJhdG9yIiwiY29udHJvbC1wbGFuZSI6ImNvbnRyb2xsZXItbWFuYWdlciJ9fSwic3RyYXRlZ3kiOnt9LCJ0ZW1wbGF0ZSI6eyJtZXRhZGF0YSI6eyJsYWJlbHMiOnsiYXBwIjoiY29zdG1hbmFnZW1lbnQtbWV0cmljcy1vcGVyYXRvciIsImNvbnRyb2wtcGxhbmUiOiJjb250cm9sbGVyLW1hbmFnZXIifX0sInNwZWMiOnsiYWZmaW5pdHkiOnsicG9kQWZmaW5pdHkiOnsicmVxdWlyZWREdXJpbmdTY2hlZHVsaW5nSWdub3JlZER1cmluZ0V4ZWN1dGlvbiI6W3sibGFiZWxTZWxlY3RvciI6eyJtYXRjaEV4cHJlc3Npb25zIjpbeyJrZXkiOiJhcHAiLCJvcGVyYXRvciI6IkluIiwidmFsdWVzIjpbImNvc3RtYW5hZ2VtZW50LW1ldHJpY3Mtb3BlcmF0b3IiXX1dfSwidG9wb2xvZ3lLZXkiOiJrdWJlcm5ldGVzLmlvL2hvc3RuYW1lIn1dfX0sImNvbnRhaW5lcnMiOlt7ImFyZ3MiOlsiLS1lbmFibGUtbGVhZGVyLWVsZWN0aW9uIl0sImNvbW1hbmQiOlsiL3Vzci9iaW4vY29zdG1hbmFnZW1lbnQtbWV0cmljcy1vcGVyYXRvciJdLCJlbnYiOlt7Im5hbWUiOiJJTl9DTFVTVEVSIiwidmFsdWUiOiJ0cnVlIn0seyJuYW1lIjoiV0FUQ0hfTkFNRVNQQUNFIiwidmFsdWVGcm9tIjp7ImZpZWxkUmVmIjp7ImZpZWxkUGF0aCI6Im1ldGFkYXRhLmFubm90YXRpb25zWydvbG0udGFyZ2V0TmFtZXNwYWNlcyddIn19fV0sImltYWdlIjoicmVnaXN0cnkucmVkaGF0LmlvL2Nvc3RtYW5hZ2VtZW50L2Nvc3RtYW5hZ2VtZW50LW1ldHJpY3MtcmhlbDgtb3BlcmF0b3JAc2hhMjU2OjUyM2I2NjJmYjA1MDk4ZWM5NDEwY2MwNjY1NTU2NDk1ZjY0MDliNDRiOGM4MDMwYzFjNDU2ZWVlZTg2NGRhNjYiLCJuYW1lIjoibWFuYWdlciIsInJlc291cmNlcyI6eyJsaW1pdHMiOnsiY3B1IjoiNTAwbSIsIm1lbW9yeSI6IjUwME1pIn0sInJlcXVlc3RzIjp7ImNwdSI6IjEwMG0iLCJtZW1vcnkiOiIyME1pIn19LCJ0ZXJtaW5hdGlvbk1lc3NhZ2VQb2xpY3kiOiJGYWxsYmFja1RvTG9nc09uRXJyb3IiLCJ2b2x1bWVNb3VudHMiOlt7Im1vdW50UGF0aCI6Ii90bXAvY29zdG1hbmFnZW1lbnQtbWV0cmljcy1vcGVyYXRvci1yZXBvcnRzIiwibmFtZSI6ImNvc3RtYW5hZ2VtZW50LW1ldHJpY3Mtb3BlcmF0b3ItcmVwb3J0cyJ9XX1dLCJzZXJ2aWNlQWNjb3VudE5hbWUiOiJjb3N0bWFuYWdlbWVudC1tZXRyaWNzLWNvbnRyb2xsZXItbWFuYWdlciIsInRlcm1pbmF0aW9uR3JhY2VQZXJpb2RTZWNvbmRzIjoxMCwidm9sdW1lcyI6W3sibmFtZSI6ImNvc3RtYW5hZ2VtZW50LW1ldHJpY3Mtb3BlcmF0b3ItcmVwb3J0cyJ9XX19fX1dLCJwZXJtaXNzaW9ucyI6W3sicnVsZXMiOlt7ImFwaUdyb3VwcyI6WyIiXSwicmVzb3VyY2VzIjpbImNvbmZpZ21hcHMiXSwidmVyYnMiOlsiZ2V0IiwibGlzdCIsIndhdGNoIiwiY3JlYXRlIiwidXBkYXRlIiwicGF0Y2giLCJkZWxldGUiXX0seyJhcGlHcm91cHMiOlsiIl0sInJlc291cmNlcyI6WyJjb25maWdtYXBzL3N0YXR1cyJdLCJ2ZXJicyI6WyJnZXQiLCJ1cGRhdGUiLCJwYXRjaCJdfSx7ImFwaUdyb3VwcyI6WyIiXSwicmVzb3VyY2VzIjpbImV2ZW50cyJdLCJ2ZXJicyI6WyJjcmVhdGUiLCJwYXRjaCJdfSx7ImFwaUdyb3VwcyI6WyJjb29yZGluYXRpb24uazhzLmlvIl0sInJlc291cmNlcyI6WyJsZWFzZXMiXSwidmVyYnMiOlsiZ2V0IiwibGlzdCIsIndhdGNoIiwiY3JlYXRlIiwidXBkYXRlIiwicGF0Y2giLCJkZWxldGUiXX0seyJhcGlHcm91cHMiOlsiYXBwcyJdLCJyZXNvdXJjZXMiOlsiZGVwbG95bWVudHMiXSwidmVyYnMiOlsiZ2V0IiwibGlzdCIsInBhdGNoIiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsiIl0sInJlc291cmNlcyI6WyJjb25maWdtYXBzIiwiZW5kcG9pbnRzIiwiZXZlbnRzIiwicGVyc2lzdGVudHZvbHVtZWNsYWltcyIsInBvZHMiLCJzZWNyZXRzIiwic2VydmljZWFjY291bnRzIiwic2VydmljZXMiLCJzZXJ2aWNlcy9maW5hbGl6ZXJzIl0sInZlcmJzIjpbImNyZWF0ZSIsImRlbGV0ZSIsImdldCIsImxpc3QiLCJwYXRjaCIsInVwZGF0ZSIsIndhdGNoIl19LHsiYXBpR3JvdXBzIjpbImNvc3RtYW5hZ2VtZW50LW1ldHJpY3MtY2ZnLm9wZW5zaGlmdC5pbyJdLCJyZXNvdXJjZXMiOlsiY29zdG1hbmFnZW1lbnRtZXRyaWNzY29uZmlncyJdLCJ2ZXJicyI6WyJjcmVhdGUiLCJkZWxldGUiLCJnZXQiLCJsaXN0IiwicGF0Y2giLCJ1cGRhdGUiLCJ3YXRjaCJdfSx7ImFwaUdyb3VwcyI6WyJjb3N0bWFuYWdlbWVudC1tZXRyaWNzLWNmZy5vcGVuc2hpZnQuaW8iXSwicmVzb3VyY2VzIjpbImNvc3RtYW5hZ2VtZW50bWV0cmljc2NvbmZpZ3Mvc3RhdHVzIl0sInZlcmJzIjpbImdldCIsInBhdGNoIiwidXBkYXRlIl19LHsiYXBpR3JvdXBzIjpbIm9wZXJhdG9ycy5jb3Jlb3MuY29tIl0sInJlc291cmNlcyI6WyJjbHVzdGVyc2VydmljZXZlcnNpb25zIl0sInZlcmJzIjpbImdldCIsImxpc3QiLCJwYXRjaCIsInVwZGF0ZSIsIndhdGNoIl19XSwic2VydmljZUFjY291bnROYW1lIjoiY29zdG1hbmFnZW1lbnQtbWV0cmljcy1jb250cm9sbGVyLW1hbmFnZXIifV19LCJzdHJhdGVneSI6ImRlcGxveW1lbnQifSwiaW5zdGFsbE1vZGVzIjpbeyJzdXBwb3J0ZWQiOnRydWUsInR5cGUiOiJPd25OYW1lc3BhY2UifSx7InN1cHBvcnRlZCI6dHJ1ZSwidHlwZSI6IlNpbmdsZU5hbWVzcGFjZSJ9LHsic3VwcG9ydGVkIjpmYWxzZSwidHlwZSI6Ik11bHRpTmFtZXNwYWNlIn0seyJzdXBwb3J0ZWQiOmZhbHNlLCJ0eXBlIjoiQWxsTmFtZXNwYWNlcyJ9XSwia2V5d29yZHMiOlsiY29zdCIsIm1hbmFnZW1lbnQiLCJ1c2FnZSIsIm1vbml0b3IiXSwibWFpbnRhaW5lcnMiOlt7ImVtYWlsIjoiY29zdG1hbmFnZW1lbnRAcmVkaGF0LmNvbSIsIm5hbWUiOiJjb3N0bWFuYWdlbWVudCJ9XSwibWF0dXJpdHkiOiJhbHBoYSIsInByb3ZpZGVyIjp7Im5hbWUiOiJSZWQgSGF0In0sInJlbGF0ZWRJbWFnZXMiOlt7ImltYWdlIjoicmVnaXN0cnkucmVkaGF0LmlvL2Nvc3RtYW5hZ2VtZW50L2Nvc3RtYW5hZ2VtZW50LW1ldHJpY3MtcmhlbDgtb3BlcmF0b3JAc2hhMjU2OjUyM2I2NjJmYjA1MDk4ZWM5NDEwY2MwNjY1NTU2NDk1ZjY0MDliNDRiOGM4MDMwYzFjNDU2ZWVlZTg2NGRhNjYiLCJuYW1lIjoiY29zdG1hbmFnZW1lbnQtbWV0cmljcy1yaGVsOC1vcGVyYXRvci01MjNiNjYyZmIwNTA5OGVjOTQxMGNjMDY2NTU1NjQ5NWY2NDA5YjQ0YjhjODAzMGMxYzQ1NmVlZWU4NjRkYTY2LWFubm90YXRpb24ifSx7ImltYWdlIjoicmVnaXN0cnkucmVkaGF0LmlvL2Nvc3RtYW5hZ2VtZW50L2Nvc3RtYW5hZ2VtZW50LW1ldHJpY3MtcmhlbDgtb3BlcmF0b3JAc2hhMjU2OjUyM2I2NjJmYjA1MDk4ZWM5NDEwY2MwNjY1NTU2NDk1ZjY0MDliNDRiOGM4MDMwYzFjNDU2ZWVlZTg2NGRhNjYiLCJuYW1lIjoibWFuYWdlciJ9XSwicmVwbGFjZXMiOiJjb3N0bWFuYWdlbWVudC1tZXRyaWNzLW9wZXJhdG9yLjEuMS41IiwidmVyc2lvbiI6IjEuMS42In19
relatedImages:
- image: registry.redhat.io/costmanagement/costmanagement-metrics-operator-bundle@sha256:020d5d1777d0dec2ae432a1cd93f7a306c7860ad05cabe19c59f9359b5d4e44e
  name: ""
- image: registry.redhat.io/costmanagement/costmanagement-metrics-rhel8-operator@sha256:523b662fb05098ec9410cc0665556495f6409b44b8c8030c1c456eeee864da66
  name: costmanagement-metrics-rhel8-operator-523b662fb05098ec9410cc0665556495f6409b44b8c8030c1c456eeee864da66-annotation
- image: registry.redhat.io/costmanagement/costmanagement-metrics-rhel8-operator@sha256:523b662fb05098ec9410cc0665556495f6409b44b8c8030c1c456eeee864da66
  name: manager
schema: olm.bundle
---
image: registry.redhat.io/costmanagement/costmanagement-metrics-operator-bundle@sha256:0abc9b30a48080d2a4a413f7818770ea4dd7b78c715a816fe5818ec75326bb69
name: costmanagement-metrics-operator.1.1.7
package: costmanagement-metrics-operator
properties:
- type: olm.gvk
  value:
    group: costmanagement-metrics-cfg.openshift.io
    kind: CostManagementMetricsConfig
    version: v1beta1
- type: olm.package
  value:
    packageName: costmanagement-metrics-operator
    version: 1.1.7
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjMuMCJ9LCJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibmFtZSI6ImNvc3RtYW5hZ2VtZW50bWV0cmljc2NvbmZpZ3MuY29zdG1hbmFnZW1lbnQtbWV0cmljcy1jZmcub3BlbnNoaWZ0LmlvIn0sInNwZWMiOnsiZ3JvdXAiOiJjb3N0bWFuYWdlbWVudC1tZXRyaWNzLWNmZy5vcGVuc2hpZnQuaW8iLCJuYW1lcyI6eyJraW5kIjoiQ29zdE1hbmFnZW1lbnRNZXRyaWNzQ29uZmlnIiwibGlzdEtpbmQiOiJDb3N0TWFuYWdlbWVudE1ldHJpY3NDb25maWdMaXN0IiwicGx1cmFsIjoiY29zdG1hbmFnZW1lbnRtZXRyaWNzY29uZmlncyIsInNpbmd1bGFyIjoiY29zdG1hbmFnZW1lbnRtZXRyaWNzY29uZmlnIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJuYW1lIjoidjFiZXRhMSIsInNjaGVtYSI6eyJvcGVuQVBJVjNTY2hlbWEiOnsiZGVzY3JpcHRpb24iOiJDb3N0TWFuYWdlbWVudE1ldHJpY3NDb25maWcgaXMgdGhlIFNjaGVtYSBmb3IgdGhlIGNvc3RtYW5hZ2VtZW50bWV0cmljc2NvbmZpZyBBUEkiLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGRlZmluZXMgdGhlIHZlcnNpb25lZCBzY2hlbWEgb2YgdGhpcyByZXByZXNlbnRhdGlvbiBvZiBhbiBvYmplY3QuIFNlcnZlcnMgc2hvdWxkIGNvbnZlcnQgcmVjb2duaXplZCBzY2hlbWFzIHRvIHRoZSBsYXRlc3QgaW50ZXJuYWwgdmFsdWUsIGFuZCBtYXkgcmVqZWN0IHVucmVjb2duaXplZCB2YWx1ZXMuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjcmVzb3VyY2VzIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyBhIHN0cmluZyB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIFJFU1QgcmVzb3VyY2UgdGhpcyBvYmplY3QgcmVwcmVzZW50cy4gU2VydmVycyBtYXkgaW5mZXIgdGhpcyBmcm9tIHRoZSBlbmRwb2ludCB0aGUgY2xpZW50IHN1Ym1pdHMgcmVxdWVzdHMgdG8uIENhbm5vdCBiZSB1cGRhdGVkLiBJbiBDYW1lbENhc2UuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjdHlwZXMta2luZHMiLCJ0eXBlIjoic3RyaW5nIn0sIm1ldGFkYXRhIjp7InR5cGUiOiJvYmplY3QifSwic3BlYyI6eyJkZXNjcmlwdGlvbiI6IkNvc3RNYW5hZ2VtZW50TWV0cmljc0NvbmZpZ1NwZWMgZGVmaW5lcyB0aGUgZGVzaXJlZCBzdGF0ZSBvZiBDb3N0TWFuYWdlbWVudE1ldHJpY3NDb25maWcuIiwicHJvcGVydGllcyI6eyJhcGlfdXJsIjp7ImRlZmF1bHQiOiJodHRwczovL2Nsb3VkLnJlZGhhdC5jb20iLCJkZXNjcmlwdGlvbiI6IkZPUiBERVZFTE9QTUVOVCBPTkxZLiBBUElVUkwgaXMgYSBmaWVsZCBvZiBDb3N0TWFuYWdlbWVudE1ldHJpY3NDb25maWcgdG8gcmVwcmVzZW50IHRoZSB1cmwgb2YgdGhlIEFQSSBlbmRwb2ludCBmb3Igc2VydmljZSBpbnRlcmFjdGlvbi4gVGhlIGRlZmF1bHQgaXMgYGh0dHBzOi8vY2xvdWQucmVkaGF0LmNvbWAuIiwidHlwZSI6InN0cmluZyJ9LCJhdXRoZW50aWNhdGlvbiI6eyJkZXNjcmlwdGlvbiI6IkF1dGhlbnRpY2F0aW9uIGlzIGEgZmllbGQgb2YgQ29zdE1hbmFnZW1lbnRNZXRyaWNzQ29uZmlnIHRvIHJlcHJlc2VudCB0aGUgYXV0aGVudGljYXRpb24gb2JqZWN0LiIsInByb3BlcnRpZXMiOnsic2VjcmV0X25hbWUiOnsiZGVzY3JpcHRpb24iOiJBdXRoZW50aWNhdGlvblNlY3JldE5hbWUgaXMgYSBmaWVsZCBvZiBDb3N0TWFuYWdlbWVudE1ldHJpY3NDb25maWcgdG8gcmVwcmVzZW50IHRoZSBzZWNyZXQgd2l0aCB0aGUgdXNlciBhbmQgcGFzc3dvcmQgdXNlZCBmb3IgdXBsb2Fkcy4iLCJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOnsiZGVmYXVsdCI6InRva2VuIiwiZGVzY3JpcHRpb24iOiJBdXRoVHlwZSBpcyBhIGZpZWxkIG9mIENvc3RNYW5hZ2VtZW50TWV0cmljc0NvbmZpZyB0byByZXByZXNlbnQgdGhlIGF1dGhlbnRpY2F0aW9uIHR5cGUgdG8gYmUgdXNlZCBiYXNpYyBvciB0b2tlbi4gVmFsaWQgdmFsdWVzIGFyZTogLSBcImJhc2ljXCIgOiBFbmFibGVzIGF1dGhlbnRpY2F0aW9uIHVzaW5nIHVzZXIgYW5kIHBhc3N3b3JkIGZyb20gYXV0aGVudGljYXRpb24gc2VjcmV0LiAtIFwidG9rZW5cIiAoZGVmYXVsdCk6IFVzZXMgY2x1c3RlciB0b2tlbiBmb3IgYXV0aGVudGljYXRpb24uIiwiZW51bSI6WyJ0b2tlbiIsImJhc2ljIl0sInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbInR5cGUiXSwidHlwZSI6Im9iamVjdCJ9LCJjbHVzdGVySUQiOnsiZGVzY3JpcHRpb24iOiJDbHVzdGVySUQgaXMgYSBmaWVsZCBvZiBDb3N0TWFuYWdlbWVudE1ldHJpY3NDb25maWcgdG8gcmVwcmVzZW50IHRoZSBjbHVzdGVyIFVVSUQuIE5vcm1hbGx5IHRoaXMgdmFsdWUgc2hvdWxkIG5vdCBiZSBzcGVjaWZpZWQuIE9ubHkgc2V0IHRoaXMgdmFsdWUgaWYgdGhlIGNsdXN0ZXJJRCBjYW5ub3QgYmUgb2J0YWluZWQgZnJvbSB0aGUgQ2x1c3RlclZlcnNpb24uIiwidHlwZSI6InN0cmluZyJ9LCJjbHVzdGVyVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkNsdXN0ZXJWZXJzaW9uIGlzIGEgZmllbGQgb2YgQ29zdE1hbmFnZW1lbnRNZXRyaWNzQ29uZmlnIHRvIHJlcHJlc2VudCB0aGUgY2x1c3RlciB2ZXJzaW9uLiBOb3JtYWxseSB0aGlzIHZhbHVlIHNob3VsZCBub3QgYmUgc3BlY2lmaWVkLiBPbmx5IHNldCB0aGlzIHZhbHVlIGlmIHRoZSBjbHVzdGVyVmVyc2lvbiBjYW5ub3QgYmUgb2J0YWluZWQgZnJvbSB0aGUgQ2x1c3RlclZlcnNpb24uIiwidHlwZSI6InN0cmluZyJ9LCJwYWNrYWdpbmciOnsiZGVzY3JpcHRpb24iOiJQYWNrYWdpbmcgaXMgYSBmaWVsZCBvZiBDb3N0TWFuYWdlbWVudE1ldHJpY3NDb25maWcgdG8gcmVwcmVzZW50IHRoZSBwYWNrYWdpbmcgb2JqZWN0LiIsInByb3BlcnRpZXMiOnsibWF4X3JlcG9ydHNfdG9fc3RvcmUiOnsiZGVmYXVsdCI6MzAsImRlc2NyaXB0aW9uIjoiTWF4UmVwb3J0cyBpcyBhIGZpZWxkIG9mIENvc3RNYW5hZ2VtZW50TWV0cmljc0NvbmZpZyB0byByZXByZXNlbnQgdGhlIG1heGltdW0gbnVtYmVyIG9mIHJlcG9ydHMgdG8gc3RvcmUuIFRoZSBkZWZhdWx0IGlzIDMwIHJlcG9ydHMgd2hpY2ggY29ycmVzcG9uZHMgdG8gYXBwcm94aW1hdGVseSA3IGRheXMgd29ydGggb2YgZGF0YSBnaXZlbiB0aGUgb3RoZXIgZGVmYXVsdCB2YWx1ZXMuIiwiZm9ybWF0IjoiaW50NjQiLCJtaW5pbXVtIjoxLCJ0eXBlIjoiaW50ZWdlciJ9LCJtYXhfc2l6ZV9NQiI6eyJkZWZhdWx0IjoxMDAsImRlc2NyaXB0aW9uIjoiTWF4U2l6ZSBpcyBhIGZpZWxkIG9mIENvc3RNYW5hZ2VtZW50TWV0cmljc0NvbmZpZyB0byByZXByZXNlbnQgdGhlIG1heCBmaWxlIHNpemUgaW4gbWVnYWJ5dGVzIHRoYXQgd2lsbCBiZSBjb21wcmVzc2VkIGZvciB1cGxvYWQgdG8gSW5ncmVzcy4gVGhlIGRlZmF1bHQgaXMgMTAwLiIsImZvcm1hdCI6ImludDY0IiwibWF4aW11bSI6MTAwLCJtaW5pbXVtIjoxLCJ0eXBlIjoiaW50ZWdlciJ9fSwicmVxdWlyZWQiOlsibWF4X3JlcG9ydHNfdG9fc3RvcmUiLCJtYXhfc2l6ZV9NQiJdLCJ0eXBlIjoib2JqZWN0In0sInByb21ldGhldXNfY29uZmlnIjp7ImRlc2NyaXB0aW9uIjoiUHJvbWV0aGV1c0NvbmZpZyBpcyBhIGZpZWxkIG9mIENvc3RNYW5hZ2VtZW50TWV0cmljc0NvbmZpZyB0byByZXByZXNlbnQgdGhlIGNvbmZpZ3VyYXRpb24gb2YgUHJvbWV0aGV1cyBjb25uZWN0aW9uLiIsInByb3BlcnRpZXMiOnsiY29udGV4dF90aW1lb3V0Ijp7ImRlZmF1bHQiOjEyMCwiZGVzY3JpcHRpb24iOiJDb250ZXh0VGltZW91dCBpcyBhIGZpZWxkIG9mIENvc3RNYW5hZ2VtZW50TWV0cmljc0NvbmZpZyB0byByZXByZXNlbnQgaG93IGxvbmcgYSBxdWVyeSB0byBwcm9tZXRoZXVzIHNob3VsZCBydW4gaW4gc2Vjb25kcyBiZWZvcmUgdGltaW5nIG91dC4gVGhlIGRlZmF1bHQgaXMgMTIwIHNlY29uZHMuIiwiZm9ybWF0IjoiaW50NjQiLCJtYXhpbXVtIjoxODAsIm1pbmltdW0iOjEwLCJ0eXBlIjoiaW50ZWdlciJ9LCJzZXJ2aWNlX2FkZHJlc3MiOnsiZGVmYXVsdCI6Imh0dHBzOi8vdGhhbm9zLXF1ZXJpZXIub3BlbnNoaWZ0LW1vbml0b3Jpbmcuc3ZjOjkwOTEiLCJkZXNjcmlwdGlvbiI6IkZPUiBERVZFTE9QTUVOVCBPTkxZLiBTdmNBZGRyZXNzIGlzIGEgZmllbGQgb2YgQ29zdE1hbmFnZW1lbnRNZXRyaWNzQ29uZmlnIHRvIHJlcHJlc2VudCB0aGUgdGhhbm9zLXF1ZXJpZXIgYWRkcmVzcy4gVGhlIGRlZmF1bHQgaXMgYGh0dHBzOi8vdGhhbm9zLXF1ZXJpZXIub3BlbnNoaWZ0LW1vbml0b3Jpbmcuc3ZjOjkwOTFgLiIsInR5cGUiOiJzdHJpbmcifSwic2tpcF90bHNfdmVyaWZpY2F0aW9uIjp7ImRlZmF1bHQiOmZhbHNlLCJkZXNjcmlwdGlvbiI6IkZPUiBERVZFTE9QTUVOVCBPTkxZLiBTa2lwVExTVmVyaWZpY2F0aW9uIGlzIGEgZmllbGQgb2YgQ29zdE1hbmFnZW1lbnRNZXRyaWNzQ29uZmlnIHRvIHJlcHJlc2VudCBpZiB0aGUgdGhhbm9zLXF1ZXJpZXIgZW5kcG9pbnQgbXVzdCBiZSBjZXJ0aWZpY2F0ZSB2YWxpZGF0ZWQuIFRoZSBkZWZhdWx0IGlzIGZhbHNlLiIsInR5cGUiOiJib29sZWFuIn19LCJyZXF1aXJlZCI6WyJzZXJ2aWNlX2FkZHJlc3MiLCJza2lwX3Rsc192ZXJpZmljYXRpb24iXSwidHlwZSI6Im9iamVjdCJ9LCJzb3VyY2UiOnsiZGVzY3JpcHRpb24iOiJTb3VyY2UgaXMgYSBmaWVsZCBvZiBDb3N0TWFuYWdlbWVudE1ldHJpY3NDb25maWcgdG8gcmVwcmVzZW50IHRoZSBkZXNpcmVkIHNvdXJjZSBvbiBjbG91ZC5yZWRoYXQuY29tLiIsInByb3BlcnRpZXMiOnsiY2hlY2tfY3ljbGUiOnsiZGVmYXVsdCI6MTQ0MCwiZGVzY3JpcHRpb24iOiJDaGVja0N5Y2xlIGlzIGEgZmllbGQgb2YgQ29zdE1hbmFnZW1lbnRNZXRyaWNzQ29uZmlnIHRvIHJlcHJlc2VudCB0aGUgbnVtYmVyIG9mIG1pbnV0ZXMgYmV0d2VlbiBlYWNoIHNvdXJjZSBjaGVjayBzY2hlZHVsZSBUaGUgZGVmYXVsdCBpcyAxNDQwIG1pbiAoMjQgaG91cnMpLiIsImZvcm1hdCI6ImludDY0IiwibWluaW11bSI6MCwidHlwZSI6ImludGVnZXIifSwiY3JlYXRlX3NvdXJjZSI6eyJkZWZhdWx0IjpmYWxzZSwiZGVzY3JpcHRpb24iOiJDcmVhdGVTb3VyY2UgaXMgYSBmaWVsZCBvZiBDb3N0TWFuYWdlbWVudE1ldHJpY3NDb25maWdTcGVjIHRvIHJlcHJlc2VudCBpZiB0aGUgc291cmNlIHNob3VsZCBiZSBjcmVhdGVkIGlmIG5vdCBmb3VuZC4iLCJ0eXBlIjoiYm9vbGVhbiJ9LCJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiU291cmNlTmFtZSBpcyBhIGZpZWxkIG9mIENvc3RNYW5hZ2VtZW50TWV0cmljc0NvbmZpZ1NwZWMgdG8gcmVwcmVzZW50IHRoZSBzb3VyY2UgbmFtZSBvbiBjbG91ZC5yZWRoYXQuY29tLiIsInR5cGUiOiJzdHJpbmcifSwic291cmNlc19wYXRoIjp7ImRlZmF1bHQiOiIvYXBpL3NvdXJjZXMvdjEuMC8iLCJkZXNjcmlwdGlvbiI6IkZPUiBERVZFTE9QTUVOVCBPTkxZLiBTb3VyY2VzQVBJUGF0aCBpcyBhIGZpZWxkIG9mIENvc3RNYW5hZ2VtZW50TWV0cmljc0NvbmZpZyB0byByZXByZXNlbnQgdGhlIHBhdGggb2YgdGhlIFNvdXJjZXMgQVBJIHNlcnZpY2UuIFRoZSBkZWZhdWx0IGlzIGAvYXBpL3NvdXJjZXMvdjEuMC9gLiIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbImNoZWNrX2N5Y2xlIiwiY3JlYXRlX3NvdXJjZSIsInNvdXJjZXNfcGF0aCJdLCJ0eXBlIjoib2JqZWN0In0sInVwbG9hZCI6eyJkZXNjcmlwdGlvbiI6IlVwbG9hZCBpcyBhIGZpZWxkIG9mIENvc3RNYW5hZ2VtZW50TWV0cmljc0NvbmZpZyB0byByZXByZXNlbnQgdGhlIHVwbG9hZCBvYmplY3QuIiwicHJvcGVydGllcyI6eyJpbmdyZXNzX3BhdGgiOnsiZGVmYXVsdCI6Ii9hcGkvaW5ncmVzcy92MS91cGxvYWQiLCJkZXNjcmlwdGlvbiI6IkZPUiBERVZFTE9QTUVOVCBPTkxZLiBJbmdyZXNzQVBJUGF0aCBpcyBhIGZpZWxkIG9mIENvc3RNYW5hZ2VtZW50TWV0cmljc0NvbmZpZyB0byByZXByZXNlbnQgdGhlIHBhdGggb2YgdGhlIEluZ3Jlc3MgQVBJIHNlcnZpY2UuIFRoZSBkZWZhdWx0IGlzIGAvYXBpL2luZ3Jlc3MvdjEvdXBsb2FkYC4iLCJ0eXBlIjoic3RyaW5nIn0sInVwbG9hZF9jeWNsZSI6eyJkZWZhdWx0IjozNjAsImRlc2NyaXB0aW9uIjoiVXBsb2FkQ3ljbGUgaXMgYSBmaWVsZCBvZiBDb3N0TWFuYWdlbWVudE1ldHJpY3NDb25maWcgdG8gcmVwcmVzZW50IHRoZSBudW1iZXIgb2YgbWludXRlcyBiZXR3ZWVuIGVhY2ggdXBsb2FkIHNjaGVkdWxlLiBUaGUgZGVmYXVsdCBpcyAzNjAgbWluICg2IGhvdXJzKS4iLCJmb3JtYXQiOiJpbnQ2NCIsIm1pbmltdW0iOjAsInR5cGUiOiJpbnRlZ2VyIn0sInVwbG9hZF90b2dnbGUiOnsiZGVmYXVsdCI6dHJ1ZSwiZGVzY3JpcHRpb24iOiJVcGxvYWRUb2dnbGUgaXMgYSBmaWVsZCBvZiBDb3N0TWFuYWdlbWVudE1ldHJpY3NDb25maWcgdG8gcmVwcmVzZW50IGlmIHRoZSBvcGVyYXRvciBpcyBpbnN0YWxsZWQgaW4gYSByZXN0cmljdGVkLW5ldHdvcmsuIElmIGBmYWxzZWAsIHRoZSBvcGVyYXRvciB3aWxsIG5vdCB1cGxvYWQgdG8gY2xvdWQucmVkaGF0LmNvbSBvciBjaGVjay9jcmVhdGUgc291cmNlcy4gVGhlIGRlZmF1bHQgaXMgdHJ1ZS4iLCJ0eXBlIjoiYm9vbGVhbiJ9LCJ1cGxvYWRfd2FpdCI6eyJkZXNjcmlwdGlvbiI6IlVwbG9hZFdhaXQgaXMgYSBmaWVsZCBvZiBDb3N0TWFuYWdlbWVudE1ldHJpY3NDb25maWcgdG8gcmVwcmVzZW50IHRoZSB0aW1lIHRvIHdhaXQgYmVmb3JlIHNlbmRpbmcgYW4gdXBsb2FkLiIsImZvcm1hdCI6ImludDY0IiwibWluaW11bSI6MCwidHlwZSI6ImludGVnZXIifSwidmFsaWRhdGVfY2VydCI6eyJkZWZhdWx0Ijp0cnVlLCJkZXNjcmlwdGlvbiI6IlZhbGlkYXRlQ2VydCBpcyBhIGZpZWxkIG9mIENvc3RNYW5hZ2VtZW50TWV0cmljc0NvbmZpZyB0byByZXByZXNlbnQgaWYgdGhlIEluZ3Jlc3MgZW5kcG9pbnQgbXVzdCBiZSBjZXJ0aWZpY2F0ZSB2YWxpZGF0ZWQuIiwidHlwZSI6ImJvb2xlYW4ifX0sInJlcXVpcmVkIjpbImluZ3Jlc3NfcGF0aCIsInVwbG9hZF9jeWNsZSIsInVwbG9hZF90b2dnbGUiLCJ2YWxpZGF0ZV9jZXJ0Il0sInR5cGUiOiJvYmplY3QifSwidm9sdW1lX2NsYWltX3RlbXBsYXRlIjp7ImRlc2NyaXB0aW9uIjoiVm9sdW1lQ2xhaW1UZW1wbGF0ZSBpcyBhIGZpZWxkIG9mIENvc3RNYW5hZ2VtZW50TWV0cmljc0NvbmZpZyB0byByZXByZXNlbnQgYSBQVkMgdGVtcGxhdGUuIiwicHJvcGVydGllcyI6eyJhcGlWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQVBJVmVyc2lvbiBkZWZpbmVzIHRoZSB2ZXJzaW9uZWQgc2NoZW1hIG9mIHRoaXMgcmVwcmVzZW50YXRpb24gb2YgYW4gb2JqZWN0LiBTZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmQgbWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3Jlc291cmNlcyIsInR5cGUiOiJzdHJpbmcifSwia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgaXMgYSBzdHJpbmcgdmFsdWUgcmVwcmVzZW50aW5nIHRoZSBSRVNUIHJlc291cmNlIHRoaXMgb2JqZWN0IHJlcHJlc2VudHMuIFNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLiBDYW5ub3QgYmUgdXBkYXRlZC4gSW4gQ2FtZWxDYXNlLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJkZXNjcmlwdGlvbiI6IkVtYmVkZGVkTWV0YWRhdGEgY29udGFpbnMgbWV0YWRhdGEgcmVsZXZhbnQgdG8gYW4gRW1iZWRkZWRSZXNvdXJjZS4iLCJwcm9wZXJ0aWVzIjp7ImFubm90YXRpb25zIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7InR5cGUiOiJzdHJpbmcifSwiZGVzY3JpcHRpb24iOiJBbm5vdGF0aW9ucyBpcyBhbiB1bnN0cnVjdHVyZWQga2V5IHZhbHVlIG1hcCBzdG9yZWQgd2l0aCBhIHJlc291cmNlIHRoYXQgbWF5IGJlIHNldCBieSBleHRlcm5hbCB0b29scyB0byBzdG9yZSBhbmQgcmV0cmlldmUgYXJiaXRyYXJ5IG1ldGFkYXRhLiBUaGV5IGFyZSBub3QgcXVlcnlhYmxlIGFuZCBzaG91bGQgYmUgcHJlc2VydmVkIHdoZW4gbW9kaWZ5aW5nIG9iamVjdHMuIE1vcmUgaW5mbzogaHR0cDovL2t1YmVybmV0ZXMuaW8vZG9jcy91c2VyLWd1aWRlL2Fubm90YXRpb25zIiwidHlwZSI6Im9iamVjdCJ9LCJsYWJlbHMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsidHlwZSI6InN0cmluZyJ9LCJkZXNjcmlwdGlvbiI6Ik1hcCBvZiBzdHJpbmcga2V5cyBhbmQgdmFsdWVzIHRoYXQgY2FuIGJlIHVzZWQgdG8gb3JnYW5pemUgYW5kIGNhdGVnb3JpemUgKHNjb3BlIGFuZCBzZWxlY3QpIG9iamVjdHMuIE1heSBtYXRjaCBzZWxlY3RvcnMgb2YgcmVwbGljYXRpb24gY29udHJvbGxlcnMgYW5kIHNlcnZpY2VzLiBNb3JlIGluZm86IGh0dHA6Ly9rdWJlcm5ldGVzLmlvL2RvY3MvdXNlci1ndWlkZS9sYWJlbHMiLCJ0eXBlIjoib2JqZWN0In0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG11c3QgYmUgdW5pcXVlIHdpdGhpbiBhIG5hbWVzcGFjZS4gSXMgcmVxdWlyZWQgd2hlbiBjcmVhdGluZyByZXNvdXJjZXMsIGFsdGhvdWdoIHNvbWUgcmVzb3VyY2VzIG1heSBhbGxvdyBhIGNsaWVudCB0byByZXF1ZXN0IHRoZSBnZW5lcmF0aW9uIG9mIGFuIGFwcHJvcHJpYXRlIG5hbWUgYXV0b21hdGljYWxseS4gTmFtZSBpcyBwcmltYXJpbHkgaW50ZW5kZWQgZm9yIGNyZWF0aW9uIGlkZW1wb3RlbmNlIGFuZCBjb25maWd1cmF0aW9uIGRlZmluaXRpb24uIENhbm5vdCBiZSB1cGRhdGVkLiBNb3JlIGluZm86IGh0dHA6Ly9rdWJlcm5ldGVzLmlvL2RvY3MvdXNlci1ndWlkZS9pZGVudGlmaWVycyNuYW1lcyIsInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwic3BlYyI6eyJkZXNjcmlwdGlvbiI6IlNwZWMgZGVmaW5lcyB0aGUgZGVzaXJlZCBjaGFyYWN0ZXJpc3RpY3Mgb2YgYSB2b2x1bWUgcmVxdWVzdGVkIGJ5IGEgcG9kIGF1dGhvci4gTW9yZSBpbmZvOiBodHRwczovL2t1YmVybmV0ZXMuaW8vZG9jcy9jb25jZXB0cy9zdG9yYWdlL3BlcnNpc3RlbnQtdm9sdW1lcyNwZXJzaXN0ZW50dm9sdW1lY2xhaW1zIiwicHJvcGVydGllcyI6eyJhY2Nlc3NNb2RlcyI6eyJkZXNjcmlwdGlvbiI6IkFjY2Vzc01vZGVzIGNvbnRhaW5zIHRoZSBkZXNpcmVkIGFjY2VzcyBtb2RlcyB0aGUgdm9sdW1lIHNob3VsZCBoYXZlLiBNb3JlIGluZm86IGh0dHBzOi8va3ViZXJuZXRlcy5pby9kb2NzL2NvbmNlcHRzL3N0b3JhZ2UvcGVyc2lzdGVudC12b2x1bWVzI2FjY2Vzcy1tb2Rlcy0xIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkifSwiZGF0YVNvdXJjZSI6eyJkZXNjcmlwdGlvbiI6IlRoaXMgZmllbGQgY2FuIGJlIHVzZWQgdG8gc3BlY2lmeSBlaXRoZXI6ICogQW4gZXhpc3RpbmcgVm9sdW1lU25hcHNob3Qgb2JqZWN0IChzbmFwc2hvdC5zdG9yYWdlLms4cy5pby9Wb2x1bWVTbmFwc2hvdCkgKiBBbiBleGlzdGluZyBQVkMgKFBlcnNpc3RlbnRWb2x1bWVDbGFpbSkgKiBBbiBleGlzdGluZyBjdXN0b20gcmVzb3VyY2UgdGhhdCBpbXBsZW1lbnRzIGRhdGEgcG9wdWxhdGlvbiAoQWxwaGEpIEluIG9yZGVyIHRvIHVzZSBjdXN0b20gcmVzb3VyY2UgdHlwZXMgdGhhdCBpbXBsZW1lbnQgZGF0YSBwb3B1bGF0aW9uLCB0aGUgQW55Vm9sdW1lRGF0YVNvdXJjZSBmZWF0dXJlIGdhdGUgbXVzdCBiZSBlbmFibGVkLiBJZiB0aGUgcHJvdmlzaW9uZXIgb3IgYW4gZXh0ZXJuYWwgY29udHJvbGxlciBjYW4gc3VwcG9ydCB0aGUgc3BlY2lmaWVkIGRhdGEgc291cmNlLCBpdCB3aWxsIGNyZWF0ZSBhIG5ldyB2b2x1bWUgYmFzZWQgb24gdGhlIGNvbnRlbnRzIG9mIHRoZSBzcGVjaWZpZWQgZGF0YSBzb3VyY2UuIiwicHJvcGVydGllcyI6eyJhcGlHcm91cCI6eyJkZXNjcmlwdGlvbiI6IkFQSUdyb3VwIGlzIHRoZSBncm91cCBmb3IgdGhlIHJlc291cmNlIGJlaW5nIHJlZmVyZW5jZWQuIElmIEFQSUdyb3VwIGlzIG5vdCBzcGVjaWZpZWQsIHRoZSBzcGVjaWZpZWQgS2luZCBtdXN0IGJlIGluIHRoZSBjb3JlIEFQSSBncm91cC4gRm9yIGFueSBvdGhlciB0aGlyZC1wYXJ0eSB0eXBlcywgQVBJR3JvdXAgaXMgcmVxdWlyZWQuIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyB0aGUgdHlwZSBvZiByZXNvdXJjZSBiZWluZyByZWZlcmVuY2VkIiwidHlwZSI6InN0cmluZyJ9LCJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBpcyB0aGUgbmFtZSBvZiByZXNvdXJjZSBiZWluZyByZWZlcmVuY2VkIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsia2luZCIsIm5hbWUiXSwidHlwZSI6Im9iamVjdCJ9LCJyZXNvdXJjZXMiOnsiZGVzY3JpcHRpb24iOiJSZXNvdXJjZXMgcmVwcmVzZW50cyB0aGUgbWluaW11bSByZXNvdXJjZXMgdGhlIHZvbHVtZSBzaG91bGQgaGF2ZS4gTW9yZSBpbmZvOiBodHRwczovL2t1YmVybmV0ZXMuaW8vZG9jcy9jb25jZXB0cy9zdG9yYWdlL3BlcnNpc3RlbnQtdm9sdW1lcyNyZXNvdXJjZXMiLCJwcm9wZXJ0aWVzIjp7ImxpbWl0cyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJhbnlPZiI6W3sidHlwZSI6ImludGVnZXIifSx7InR5cGUiOiJzdHJpbmcifV0sInBhdHRlcm4iOiJeKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKChbS01HVFBFXWkpfFtudW1rTUdUUEVdfChbZUVdKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKSk/JCIsIngta3ViZXJuZXRlcy1pbnQtb3Itc3RyaW5nIjp0cnVlfSwiZGVzY3JpcHRpb24iOiJMaW1pdHMgZGVzY3JpYmVzIHRoZSBtYXhpbXVtIGFtb3VudCBvZiBjb21wdXRlIHJlc291cmNlcyBhbGxvd2VkLiBNb3JlIGluZm86IGh0dHBzOi8va3ViZXJuZXRlcy5pby9kb2NzL2NvbmNlcHRzL2NvbmZpZ3VyYXRpb24vbWFuYWdlLWNvbXB1dGUtcmVzb3VyY2VzLWNvbnRhaW5lci8iLCJ0eXBlIjoib2JqZWN0In0sInJlcXVlc3RzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7ImFueU9mIjpbeyJ0eXBlIjoiaW50ZWdlciJ9LHsidHlwZSI6InN0cmluZyJ9XSwicGF0dGVybiI6Il4oXFwrfC0pPygoWzAtOV0rKFxcLlswLTldKik/KXwoXFwuWzAtOV0rKSkoKFtLTUdUUEVdaSl8W251bWtNR1RQRV18KFtlRV0oXFwrfC0pPygoWzAtOV0rKFxcLlswLTldKik/KXwoXFwuWzAtOV0rKSkpKT8kIiwieC1rdWJlcm5ldGVzLWludC1vci1zdHJpbmciOnRydWV9LCJkZXNjcmlwdGlvbiI6IlJlcXVlc3RzIGRlc2NyaWJlcyB0aGUgbWluaW11bSBhbW91bnQgb2YgY29tcHV0ZSByZXNvdXJjZXMgcmVxdWlyZWQuIElmIFJlcXVlc3RzIGlzIG9taXR0ZWQgZm9yIGEgY29udGFpbmVyLCBpdCBkZWZhdWx0cyB0byBMaW1pdHMgaWYgdGhhdCBpcyBleHBsaWNpdGx5IHNwZWNpZmllZCwgb3RoZXJ3aXNlIHRvIGFuIGltcGxlbWVudGF0aW9uLWRlZmluZWQgdmFsdWUuIE1vcmUgaW5mbzogaHR0cHM6Ly9rdWJlcm5ldGVzLmlvL2RvY3MvY29uY2VwdHMvY29uZmlndXJhdGlvbi9tYW5hZ2UtY29tcHV0ZS1yZXNvdXJjZXMtY29udGFpbmVyLyIsInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifSwic2VsZWN0b3IiOnsiZGVzY3JpcHRpb24iOiJBIGxhYmVsIHF1ZXJ5IG92ZXIgdm9sdW1lcyB0byBjb25zaWRlciBmb3IgYmluZGluZy4iLCJwcm9wZXJ0aWVzIjp7Im1hdGNoRXhwcmVzc2lvbnMiOnsiZGVzY3JpcHRpb24iOiJtYXRjaEV4cHJlc3Npb25zIGlzIGEgbGlzdCBvZiBsYWJlbCBzZWxlY3RvciByZXF1aXJlbWVudHMuIFRoZSByZXF1aXJlbWVudHMgYXJlIEFORGVkLiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiQSBsYWJlbCBzZWxlY3RvciByZXF1aXJlbWVudCBpcyBhIHNlbGVjdG9yIHRoYXQgY29udGFpbnMgdmFsdWVzLCBhIGtleSwgYW5kIGFuIG9wZXJhdG9yIHRoYXQgcmVsYXRlcyB0aGUga2V5IGFuZCB2YWx1ZXMuIiwicHJvcGVydGllcyI6eyJrZXkiOnsiZGVzY3JpcHRpb24iOiJrZXkgaXMgdGhlIGxhYmVsIGtleSB0aGF0IHRoZSBzZWxlY3RvciBhcHBsaWVzIHRvLiIsInR5cGUiOiJzdHJpbmcifSwib3BlcmF0b3IiOnsiZGVzY3JpcHRpb24iOiJvcGVyYXRvciByZXByZXNlbnRzIGEga2V5J3MgcmVsYXRpb25zaGlwIHRvIGEgc2V0IG9mIHZhbHVlcy4gVmFsaWQgb3BlcmF0b3JzIGFyZSBJbiwgTm90SW4sIEV4aXN0cyBhbmQgRG9lc05vdEV4aXN0LiIsInR5cGUiOiJzdHJpbmcifSwidmFsdWVzIjp7ImRlc2NyaXB0aW9uIjoidmFsdWVzIGlzIGFuIGFycmF5IG9mIHN0cmluZyB2YWx1ZXMuIElmIHRoZSBvcGVyYXRvciBpcyBJbiBvciBOb3RJbiwgdGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIG5vbi1lbXB0eS4gSWYgdGhlIG9wZXJhdG9yIGlzIEV4aXN0cyBvciBEb2VzTm90RXhpc3QsIHRoZSB2YWx1ZXMgYXJyYXkgbXVzdCBiZSBlbXB0eS4gVGhpcyBhcnJheSBpcyByZXBsYWNlZCBkdXJpbmcgYSBzdHJhdGVnaWMgbWVyZ2UgcGF0Y2guIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkifX0sInJlcXVpcmVkIjpbImtleSIsIm9wZXJhdG9yIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In0sIm1hdGNoTGFiZWxzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7InR5cGUiOiJzdHJpbmcifSwiZGVzY3JpcHRpb24iOiJtYXRjaExhYmVscyBpcyBhIG1hcCBvZiB7a2V5LHZhbHVlfSBwYWlycy4gQSBzaW5nbGUge2tleSx2YWx1ZX0gaW4gdGhlIG1hdGNoTGFiZWxzIG1hcCBpcyBlcXVpdmFsZW50IHRvIGFuIGVsZW1lbnQgb2YgbWF0Y2hFeHByZXNzaW9ucywgd2hvc2Uga2V5IGZpZWxkIGlzIFwia2V5XCIsIHRoZSBvcGVyYXRvciBpcyBcIkluXCIsIGFuZCB0aGUgdmFsdWVzIGFycmF5IGNvbnRhaW5zIG9ubHkgXCJ2YWx1ZVwiLiBUaGUgcmVxdWlyZW1lbnRzIGFyZSBBTkRlZC4iLCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In0sInN0b3JhZ2VDbGFzc05hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSBTdG9yYWdlQ2xhc3MgcmVxdWlyZWQgYnkgdGhlIGNsYWltLiBNb3JlIGluZm86IGh0dHBzOi8va3ViZXJuZXRlcy5pby9kb2NzL2NvbmNlcHRzL3N0b3JhZ2UvcGVyc2lzdGVudC12b2x1bWVzI2NsYXNzLTEiLCJ0eXBlIjoic3RyaW5nIn0sInZvbHVtZU1vZGUiOnsiZGVzY3JpcHRpb24iOiJ2b2x1bWVNb2RlIGRlZmluZXMgd2hhdCB0eXBlIG9mIHZvbHVtZSBpcyByZXF1aXJlZCBieSB0aGUgY2xhaW0uIFZhbHVlIG9mIEZpbGVzeXN0ZW0gaXMgaW1wbGllZCB3aGVuIG5vdCBpbmNsdWRlZCBpbiBjbGFpbSBzcGVjLiIsInR5cGUiOiJzdHJpbmcifSwidm9sdW1lTmFtZSI6eyJkZXNjcmlwdGlvbiI6IlZvbHVtZU5hbWUgaXMgdGhlIGJpbmRpbmcgcmVmZXJlbmNlIHRvIHRoZSBQZXJzaXN0ZW50Vm9sdW1lIGJhY2tpbmcgdGhpcyBjbGFpbS4iLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In19LCJyZXF1aXJlZCI6WyJhdXRoZW50aWNhdGlvbiIsInBhY2thZ2luZyIsInByb21ldGhldXNfY29uZmlnIiwic291cmNlIiwidXBsb2FkIl0sInR5cGUiOiJvYmplY3QifSwic3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoiQ29zdE1hbmFnZW1lbnRNZXRyaWNzQ29uZmlnU3RhdHVzIGRlZmluZXMgdGhlIG9ic2VydmVkIHN0YXRlIG9mIENvc3RNYW5hZ2VtZW50TWV0cmljc0NvbmZpZy4iLCJwcm9wZXJ0aWVzIjp7ImFwaV91cmwiOnsiZGVzY3JpcHRpb24iOiJBUElVUkwgaXMgYSBmaWVsZCBvZiBDb3N0TWFuYWdlbWVudE1ldHJpY3NDb25maWcgdG8gcmVwcmVzZW50IHRoZSB1cmwgb2YgdGhlIEFQSSBlbmRwb2ludCBmb3Igc2VydmljZSBpbnRlcmFjdGlvbi4iLCJ0eXBlIjoic3RyaW5nIn0sImF1dGhlbnRpY2F0aW9uIjp7ImRlc2NyaXB0aW9uIjoiQXV0aGVudGljYXRpb24gaXMgYSBmaWVsZCBvZiBDb3N0TWFuYWdlbWVudE1ldHJpY3NDb25maWcgdG8gcmVwcmVzZW50IHRoZSBhdXRoZW50aWNhdGlvbiBzdGF0dXMuIiwicHJvcGVydGllcyI6eyJjcmVkZW50aWFsc19mb3VuZCI6eyJkZXNjcmlwdGlvbiI6IkF1dGhlbnRpY2F0aW9uQ3JlZGVudGlhbHNGb3VuZCBpcyBhIGZpZWxkIG9mIENvc3RNYW5hZ2VtZW50TWV0cmljc0NvbmZpZyB0byByZXByZXNlbnQgaWYgdXNlZCBmb3IgdXBsb2FkcyB3ZXJlIGZvdW5kLiIsInR5cGUiOiJib29sZWFuIn0sImVycm9yIjp7ImRlc2NyaXB0aW9uIjoiQXV0aEVycm9yTWVzc2FnZSBpcyBhIGZpZWxkIG9mIENvc3RNYW5hZ2VtZW50TWV0cmljc0NvbmZpZyB0byByZXByZXNlbnQgYW4gYGludmFsaWQgY3JlZGVudGlhbHNgIGVycm9yIG1lc3NhZ2UuIiwidHlwZSI6InN0cmluZyJ9LCJsYXN0X2NyZWRlbnRpYWxfdmVyaWZpY2F0aW9uX3RpbWUiOnsiZGVzY3JpcHRpb24iOiJMYXN0VmVyaWZpY2F0aW9uVGltZSBpcyBhIGZpZWxkIG9mIENvc3RNYW5hZ2VtZW50TWV0cmljc0NvbmZpZyB0byByZXByZXNlbnQgdGhlIGxhc3QgdGltZSBjcmVkZW50aWFscyB3ZXJlIHZlcmlmaWVkLiIsImZvcm1hdCI6ImRhdGUtdGltZSIsIm51bGxhYmxlIjp0cnVlLCJ0eXBlIjoic3RyaW5nIn0sInNlY3JldF9uYW1lIjp7ImRlc2NyaXB0aW9uIjoiQXV0aGVudGljYXRpb25TZWNyZXROYW1lIGlzIGEgZmllbGQgb2YgQ29zdE1hbmFnZW1lbnRNZXRyaWNzQ29uZmlnIHRvIHJlcHJlc2VudCB0aGUgc2VjcmV0IHdpdGggdGhlIHVzZXIgYW5kIHBhc3N3b3JkIHVzZWQgZm9yIHVwbG9hZHMuIiwidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjp7ImRlc2NyaXB0aW9uIjoiQXV0aFR5cGUgaXMgYSBmaWVsZCBvZiBDb3N0TWFuYWdlbWVudE1ldHJpY3NDb25maWcgdG8gcmVwcmVzZW50IHRoZSBhdXRoZW50aWNhdGlvbiB0eXBlIHRvIGJlIHVzZWQgYmFzaWMgb3IgdG9rZW4uIiwiZW51bSI6WyJ0b2tlbiIsImJhc2ljIl0sInR5cGUiOiJzdHJpbmcifSwidmFsaWRfYmFzaWNfYXV0aCI6eyJkZXNjcmlwdGlvbiI6IlZhbGlkQmFzaWNBdXRoIGlzIGEgZmllbGQgb2YgQ29zdE1hbmFnZW1lbnRNZXRyaWNzQ29uZmlnIHRvIHJlcHJlc2VudCBpZiB0aGUgZ2l2ZW4gYmFzaWMgYXV0aCBjcmVkZW50aWFscyBhcmUgdmFsaWQuIiwidHlwZSI6ImJvb2xlYW4ifX0sInR5cGUiOiJvYmplY3QifSwiY2x1c3RlcklEIjp7ImRlc2NyaXB0aW9uIjoiQ2x1c3RlcklEIGlzIGEgZmllbGQgb2YgQ29zdE1hbmFnZW1lbnRNZXRyaWNzQ29uZmlnIHRvIHJlcHJlc2VudCB0aGUgY2x1c3RlciBVVUlELiIsInR5cGUiOiJzdHJpbmcifSwiY2x1c3RlclZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJDbHVzdGVyVmVyc2lvbiBpcyBhIGZpZWxkIG9mIENvc3RNYW5hZ2VtZW50TWV0cmljc0NvbmZpZyB0byByZXByZXNlbnQgdGhlIGNsdXN0ZXIgdmVyc2lvbi4iLCJ0eXBlIjoic3RyaW5nIn0sIm9wZXJhdG9yX2NvbW1pdCI6eyJkZXNjcmlwdGlvbiI6Ik9wZXJhdG9yQ29tbWl0IGlzIGEgZmllbGQgb2YgQ29zdE1hbmFnZW1lbnRNZXRyaWNzQ29uZmlnIHRoYXQgc2hvd3MgdGhlIGNvbW1pdCBoYXNoIG9mIHRoZSBvcGVyYXRvci4iLCJ0eXBlIjoic3RyaW5nIn0sInBhY2thZ2luZyI6eyJkZXNjcmlwdGlvbiI6IlBhY2thZ2luZyBpcyBhIGZpZWxkIG9mIENvc3RNYW5hZ2VtZW50TWV0cmljc0NvbmZpZyB0byByZXByZXNlbnQgdGhlIHBhY2thZ2luZyBzdGF0dXMiLCJwcm9wZXJ0aWVzIjp7ImVycm9yIjp7ImRlc2NyaXB0aW9uIjoiUGFja2FnaW5nRXJyb3IgaXMgYSBmaWVsZCBvZiBDb3N0TWFuYWdlbWVudE1ldHJpY3NDb25maWcgdG8gcmVwcmVzZW50IHRoZSBlcnJvciBlbmNvdW50ZXJlZCBwYWNrYWdpbmcgdGhlIHJlcG9ydHMuIiwidHlwZSI6InN0cmluZyJ9LCJsYXN0X3N1Y2Nlc3NmdWxfcGFja2FnaW5nX3RpbWUiOnsiZGVzY3JpcHRpb24iOiJMYXN0U3VjY2Vzc2Z1bFBhY2thZ2luZ1RpbWUgaXMgYSBmaWVsZCBvZiBDb3N0TWFuYWdlbWVudE1ldHJpY3NDb25maWcgdGhhdCBzaG93cyB0aGUgdGltZSBvZiB0aGUgbGFzdCBzdWNjZXNzZnVsIGZpbGUgcGFja2FnaW5nLiIsImZvcm1hdCI6ImRhdGUtdGltZSIsIm51bGxhYmxlIjp0cnVlLCJ0eXBlIjoic3RyaW5nIn0sIm1heF9yZXBvcnRzX3RvX3N0b3JlIjp7ImRlc2NyaXB0aW9uIjoiTWF4UmVwb3J0cyBpcyBhIGZpZWxkIG9mIENvc3RNYW5hZ2VtZW50TWV0cmljc0NvbmZpZyB0byByZXByZXNlbnQgdGhlIG1heGltdW0gbnVtYmVyIG9mIHJlcG9ydHMgdG8gc3RvcmUuIiwiZm9ybWF0IjoiaW50NjQiLCJ0eXBlIjoiaW50ZWdlciJ9LCJtYXhfc2l6ZV9NQiI6eyJkZXNjcmlwdGlvbiI6Ik1heFNpemUgaXMgYSBmaWVsZCBvZiBDb3N0TWFuYWdlbWVudE1ldHJpY3NDb25maWcgdG8gcmVwcmVzZW50IHRoZSBtYXggZmlsZSBzaXplIGluIG1lZ2FieXRlcyB0aGF0IHdpbGwgYmUgY29tcHJlc3NlZCBmb3IgdXBsb2FkIHRvIEluZ3Jlc3MuIiwiZm9ybWF0IjoiaW50NjQiLCJ0eXBlIjoiaW50ZWdlciJ9LCJudW1iZXJfcmVwb3J0c19zdG9yZWQiOnsiZGVzY3JpcHRpb24iOiJSZXBvcnRDb3VudCBpcyBhIGZpZWxkIG9mIENvc3RNYW5hZ2VtZW50TWV0cmljc0NvbmZpZyB0byByZXByZXNlbnQgdGhlIG51bWJlciBvZiByZXBvcnRzIGluIHN0b3JhZ2UuIiwiZm9ybWF0IjoiaW50NjQiLCJ0eXBlIjoiaW50ZWdlciJ9LCJwYWNrYWdlZF9maWxlcyI6eyJkZXNjcmlwdGlvbiI6IlBhY2thZ2VkRmlsZXMgaXMgYSBmaWVsZCBvZiBDb3N0TWFuYWdlbWVudE1ldHJpY3NDb25maWcgdG8gcmVwcmVzZW50IHRoZSBsaXN0IG9mIGZpbGUgcGFja2FnZXMgaW4gc3RvcmFnZS4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9fSwidHlwZSI6Im9iamVjdCJ9LCJwZXJzaXN0ZW50X3ZvbHVtZV9jbGFpbSI6eyJkZXNjcmlwdGlvbiI6IlBlcnNpc3RlbnRWb2x1bWVDbGFpbSBpcyBhIGZpZWxkIG9mIENvc3RNYW5hZ2VtZW50TWV0cmljc0NvbmZpZyB0byByZXByZXNlbnQgYSBQVkMuIiwicHJvcGVydGllcyI6eyJhcGlWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQVBJVmVyc2lvbiBkZWZpbmVzIHRoZSB2ZXJzaW9uZWQgc2NoZW1hIG9mIHRoaXMgcmVwcmVzZW50YXRpb24gb2YgYW4gb2JqZWN0LiBTZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmQgbWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3Jlc291cmNlcyIsInR5cGUiOiJzdHJpbmcifSwia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgaXMgYSBzdHJpbmcgdmFsdWUgcmVwcmVzZW50aW5nIHRoZSBSRVNUIHJlc291cmNlIHRoaXMgb2JqZWN0IHJlcHJlc2VudHMuIFNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLiBDYW5ub3QgYmUgdXBkYXRlZC4gSW4gQ2FtZWxDYXNlLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJkZXNjcmlwdGlvbiI6IkVtYmVkZGVkTWV0YWRhdGEgY29udGFpbnMgbWV0YWRhdGEgcmVsZXZhbnQgdG8gYW4gRW1iZWRkZWRSZXNvdXJjZS4iLCJwcm9wZXJ0aWVzIjp7ImFubm90YXRpb25zIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7InR5cGUiOiJzdHJpbmcifSwiZGVzY3JpcHRpb24iOiJBbm5vdGF0aW9ucyBpcyBhbiB1bnN0cnVjdHVyZWQga2V5IHZhbHVlIG1hcCBzdG9yZWQgd2l0aCBhIHJlc291cmNlIHRoYXQgbWF5IGJlIHNldCBieSBleHRlcm5hbCB0b29scyB0byBzdG9yZSBhbmQgcmV0cmlldmUgYXJiaXRyYXJ5IG1ldGFkYXRhLiBUaGV5IGFyZSBub3QgcXVlcnlhYmxlIGFuZCBzaG91bGQgYmUgcHJlc2VydmVkIHdoZW4gbW9kaWZ5aW5nIG9iamVjdHMuIE1vcmUgaW5mbzogaHR0cDovL2t1YmVybmV0ZXMuaW8vZG9jcy91c2VyLWd1aWRlL2Fubm90YXRpb25zIiwidHlwZSI6Im9iamVjdCJ9LCJsYWJlbHMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsidHlwZSI6InN0cmluZyJ9LCJkZXNjcmlwdGlvbiI6Ik1hcCBvZiBzdHJpbmcga2V5cyBhbmQgdmFsdWVzIHRoYXQgY2FuIGJlIHVzZWQgdG8gb3JnYW5pemUgYW5kIGNhdGVnb3JpemUgKHNjb3BlIGFuZCBzZWxlY3QpIG9iamVjdHMuIE1heSBtYXRjaCBzZWxlY3RvcnMgb2YgcmVwbGljYXRpb24gY29udHJvbGxlcnMgYW5kIHNlcnZpY2VzLiBNb3JlIGluZm86IGh0dHA6Ly9rdWJlcm5ldGVzLmlvL2RvY3MvdXNlci1ndWlkZS9sYWJlbHMiLCJ0eXBlIjoib2JqZWN0In0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG11c3QgYmUgdW5pcXVlIHdpdGhpbiBhIG5hbWVzcGFjZS4gSXMgcmVxdWlyZWQgd2hlbiBjcmVhdGluZyByZXNvdXJjZXMsIGFsdGhvdWdoIHNvbWUgcmVzb3VyY2VzIG1heSBhbGxvdyBhIGNsaWVudCB0byByZXF1ZXN0IHRoZSBnZW5lcmF0aW9uIG9mIGFuIGFwcHJvcHJpYXRlIG5hbWUgYXV0b21hdGljYWxseS4gTmFtZSBpcyBwcmltYXJpbHkgaW50ZW5kZWQgZm9yIGNyZWF0aW9uIGlkZW1wb3RlbmNlIGFuZCBjb25maWd1cmF0aW9uIGRlZmluaXRpb24uIENhbm5vdCBiZSB1cGRhdGVkLiBNb3JlIGluZm86IGh0dHA6Ly9rdWJlcm5ldGVzLmlvL2RvY3MvdXNlci1ndWlkZS9pZGVudGlmaWVycyNuYW1lcyIsInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwic3BlYyI6eyJkZXNjcmlwdGlvbiI6IlNwZWMgZGVmaW5lcyB0aGUgZGVzaXJlZCBjaGFyYWN0ZXJpc3RpY3Mgb2YgYSB2b2x1bWUgcmVxdWVzdGVkIGJ5IGEgcG9kIGF1dGhvci4gTW9yZSBpbmZvOiBodHRwczovL2t1YmVybmV0ZXMuaW8vZG9jcy9jb25jZXB0cy9zdG9yYWdlL3BlcnNpc3RlbnQtdm9sdW1lcyNwZXJzaXN0ZW50dm9sdW1lY2xhaW1zIiwicHJvcGVydGllcyI6eyJhY2Nlc3NNb2RlcyI6eyJkZXNjcmlwdGlvbiI6IkFjY2Vzc01vZGVzIGNvbnRhaW5zIHRoZSBkZXNpcmVkIGFjY2VzcyBtb2RlcyB0aGUgdm9sdW1lIHNob3VsZCBoYXZlLiBNb3JlIGluZm86IGh0dHBzOi8va3ViZXJuZXRlcy5pby9kb2NzL2NvbmNlcHRzL3N0b3JhZ2UvcGVyc2lzdGVudC12b2x1bWVzI2FjY2Vzcy1tb2Rlcy0xIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkifSwiZGF0YVNvdXJjZSI6eyJkZXNjcmlwdGlvbiI6IlRoaXMgZmllbGQgY2FuIGJlIHVzZWQgdG8gc3BlY2lmeSBlaXRoZXI6ICogQW4gZXhpc3RpbmcgVm9sdW1lU25hcHNob3Qgb2JqZWN0IChzbmFwc2hvdC5zdG9yYWdlLms4cy5pby9Wb2x1bWVTbmFwc2hvdCkgKiBBbiBleGlzdGluZyBQVkMgKFBlcnNpc3RlbnRWb2x1bWVDbGFpbSkgKiBBbiBleGlzdGluZyBjdXN0b20gcmVzb3VyY2UgdGhhdCBpbXBsZW1lbnRzIGRhdGEgcG9wdWxhdGlvbiAoQWxwaGEpIEluIG9yZGVyIHRvIHVzZSBjdXN0b20gcmVzb3VyY2UgdHlwZXMgdGhhdCBpbXBsZW1lbnQgZGF0YSBwb3B1bGF0aW9uLCB0aGUgQW55Vm9sdW1lRGF0YVNvdXJjZSBmZWF0dXJlIGdhdGUgbXVzdCBiZSBlbmFibGVkLiBJZiB0aGUgcHJvdmlzaW9uZXIgb3IgYW4gZXh0ZXJuYWwgY29udHJvbGxlciBjYW4gc3VwcG9ydCB0aGUgc3BlY2lmaWVkIGRhdGEgc291cmNlLCBpdCB3aWxsIGNyZWF0ZSBhIG5ldyB2b2x1bWUgYmFzZWQgb24gdGhlIGNvbnRlbnRzIG9mIHRoZSBzcGVjaWZpZWQgZGF0YSBzb3VyY2UuIiwicHJvcGVydGllcyI6eyJhcGlHcm91cCI6eyJkZXNjcmlwdGlvbiI6IkFQSUdyb3VwIGlzIHRoZSBncm91cCBmb3IgdGhlIHJlc291cmNlIGJlaW5nIHJlZmVyZW5jZWQuIElmIEFQSUdyb3VwIGlzIG5vdCBzcGVjaWZpZWQsIHRoZSBzcGVjaWZpZWQgS2luZCBtdXN0IGJlIGluIHRoZSBjb3JlIEFQSSBncm91cC4gRm9yIGFueSBvdGhlciB0aGlyZC1wYXJ0eSB0eXBlcywgQVBJR3JvdXAgaXMgcmVxdWlyZWQuIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyB0aGUgdHlwZSBvZiByZXNvdXJjZSBiZWluZyByZWZlcmVuY2VkIiwidHlwZSI6InN0cmluZyJ9LCJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBpcyB0aGUgbmFtZSBvZiByZXNvdXJjZSBiZWluZyByZWZlcmVuY2VkIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsia2luZCIsIm5hbWUiXSwidHlwZSI6Im9iamVjdCJ9LCJyZXNvdXJjZXMiOnsiZGVzY3JpcHRpb24iOiJSZXNvdXJjZXMgcmVwcmVzZW50cyB0aGUgbWluaW11bSByZXNvdXJjZXMgdGhlIHZvbHVtZSBzaG91bGQgaGF2ZS4gTW9yZSBpbmZvOiBodHRwczovL2t1YmVybmV0ZXMuaW8vZG9jcy9jb25jZXB0cy9zdG9yYWdlL3BlcnNpc3RlbnQtdm9sdW1lcyNyZXNvdXJjZXMiLCJwcm9wZXJ0aWVzIjp7ImxpbWl0cyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJhbnlPZiI6W3sidHlwZSI6ImludGVnZXIifSx7InR5cGUiOiJzdHJpbmcifV0sInBhdHRlcm4iOiJeKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKChbS01HVFBFXWkpfFtudW1rTUdUUEVdfChbZUVdKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKSk/JCIsIngta3ViZXJuZXRlcy1pbnQtb3Itc3RyaW5nIjp0cnVlfSwiZGVzY3JpcHRpb24iOiJMaW1pdHMgZGVzY3JpYmVzIHRoZSBtYXhpbXVtIGFtb3VudCBvZiBjb21wdXRlIHJlc291cmNlcyBhbGxvd2VkLiBNb3JlIGluZm86IGh0dHBzOi8va3ViZXJuZXRlcy5pby9kb2NzL2NvbmNlcHRzL2NvbmZpZ3VyYXRpb24vbWFuYWdlLWNvbXB1dGUtcmVzb3VyY2VzLWNvbnRhaW5lci8iLCJ0eXBlIjoib2JqZWN0In0sInJlcXVlc3RzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7ImFueU9mIjpbeyJ0eXBlIjoiaW50ZWdlciJ9LHsidHlwZSI6InN0cmluZyJ9XSwicGF0dGVybiI6Il4oXFwrfC0pPygoWzAtOV0rKFxcLlswLTldKik/KXwoXFwuWzAtOV0rKSkoKFtLTUdUUEVdaSl8W251bWtNR1RQRV18KFtlRV0oXFwrfC0pPygoWzAtOV0rKFxcLlswLTldKik/KXwoXFwuWzAtOV0rKSkpKT8kIiwieC1rdWJlcm5ldGVzLWludC1vci1zdHJpbmciOnRydWV9LCJkZXNjcmlwdGlvbiI6IlJlcXVlc3RzIGRlc2NyaWJlcyB0aGUgbWluaW11bSBhbW91bnQgb2YgY29tcHV0ZSByZXNvdXJjZXMgcmVxdWlyZWQuIElmIFJlcXVlc3RzIGlzIG9taXR0ZWQgZm9yIGEgY29udGFpbmVyLCBpdCBkZWZhdWx0cyB0byBMaW1pdHMgaWYgdGhhdCBpcyBleHBsaWNpdGx5IHNwZWNpZmllZCwgb3RoZXJ3aXNlIHRvIGFuIGltcGxlbWVudGF0aW9uLWRlZmluZWQgdmFsdWUuIE1vcmUgaW5mbzogaHR0cHM6Ly9rdWJlcm5ldGVzLmlvL2RvY3MvY29uY2VwdHMvY29uZmlndXJhdGlvbi9tYW5hZ2UtY29tcHV0ZS1yZXNvdXJjZXMtY29udGFpbmVyLyIsInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifSwic2VsZWN0b3IiOnsiZGVzY3JpcHRpb24iOiJBIGxhYmVsIHF1ZXJ5IG92ZXIgdm9sdW1lcyB0byBjb25zaWRlciBmb3IgYmluZGluZy4iLCJwcm9wZXJ0aWVzIjp7Im1hdGNoRXhwcmVzc2lvbnMiOnsiZGVzY3JpcHRpb24iOiJtYXRjaEV4cHJlc3Npb25zIGlzIGEgbGlzdCBvZiBsYWJlbCBzZWxlY3RvciByZXF1aXJlbWVudHMuIFRoZSByZXF1aXJlbWVudHMgYXJlIEFORGVkLiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiQSBsYWJlbCBzZWxlY3RvciByZXF1aXJlbWVudCBpcyBhIHNlbGVjdG9yIHRoYXQgY29udGFpbnMgdmFsdWVzLCBhIGtleSwgYW5kIGFuIG9wZXJhdG9yIHRoYXQgcmVsYXRlcyB0aGUga2V5IGFuZCB2YWx1ZXMuIiwicHJvcGVydGllcyI6eyJrZXkiOnsiZGVzY3JpcHRpb24iOiJrZXkgaXMgdGhlIGxhYmVsIGtleSB0aGF0IHRoZSBzZWxlY3RvciBhcHBsaWVzIHRvLiIsInR5cGUiOiJzdHJpbmcifSwib3BlcmF0b3IiOnsiZGVzY3JpcHRpb24iOiJvcGVyYXRvciByZXByZXNlbnRzIGEga2V5J3MgcmVsYXRpb25zaGlwIHRvIGEgc2V0IG9mIHZhbHVlcy4gVmFsaWQgb3BlcmF0b3JzIGFyZSBJbiwgTm90SW4sIEV4aXN0cyBhbmQgRG9lc05vdEV4aXN0LiIsInR5cGUiOiJzdHJpbmcifSwidmFsdWVzIjp7ImRlc2NyaXB0aW9uIjoidmFsdWVzIGlzIGFuIGFycmF5IG9mIHN0cmluZyB2YWx1ZXMuIElmIHRoZSBvcGVyYXRvciBpcyBJbiBvciBOb3RJbiwgdGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIG5vbi1lbXB0eS4gSWYgdGhlIG9wZXJhdG9yIGlzIEV4aXN0cyBvciBEb2VzTm90RXhpc3QsIHRoZSB2YWx1ZXMgYXJyYXkgbXVzdCBiZSBlbXB0eS4gVGhpcyBhcnJheSBpcyByZXBsYWNlZCBkdXJpbmcgYSBzdHJhdGVnaWMgbWVyZ2UgcGF0Y2guIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkifX0sInJlcXVpcmVkIjpbImtleSIsIm9wZXJhdG9yIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In0sIm1hdGNoTGFiZWxzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7InR5cGUiOiJzdHJpbmcifSwiZGVzY3JpcHRpb24iOiJtYXRjaExhYmVscyBpcyBhIG1hcCBvZiB7a2V5LHZhbHVlfSBwYWlycy4gQSBzaW5nbGUge2tleSx2YWx1ZX0gaW4gdGhlIG1hdGNoTGFiZWxzIG1hcCBpcyBlcXVpdmFsZW50IHRvIGFuIGVsZW1lbnQgb2YgbWF0Y2hFeHByZXNzaW9ucywgd2hvc2Uga2V5IGZpZWxkIGlzIFwia2V5XCIsIHRoZSBvcGVyYXRvciBpcyBcIkluXCIsIGFuZCB0aGUgdmFsdWVzIGFycmF5IGNvbnRhaW5zIG9ubHkgXCJ2YWx1ZVwiLiBUaGUgcmVxdWlyZW1lbnRzIGFyZSBBTkRlZC4iLCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In0sInN0b3JhZ2VDbGFzc05hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSBTdG9yYWdlQ2xhc3MgcmVxdWlyZWQgYnkgdGhlIGNsYWltLiBNb3JlIGluZm86IGh0dHBzOi8va3ViZXJuZXRlcy5pby9kb2NzL2NvbmNlcHRzL3N0b3JhZ2UvcGVyc2lzdGVudC12b2x1bWVzI2NsYXNzLTEiLCJ0eXBlIjoic3RyaW5nIn0sInZvbHVtZU1vZGUiOnsiZGVzY3JpcHRpb24iOiJ2b2x1bWVNb2RlIGRlZmluZXMgd2hhdCB0eXBlIG9mIHZvbHVtZSBpcyByZXF1aXJlZCBieSB0aGUgY2xhaW0uIFZhbHVlIG9mIEZpbGVzeXN0ZW0gaXMgaW1wbGllZCB3aGVuIG5vdCBpbmNsdWRlZCBpbiBjbGFpbSBzcGVjLiIsInR5cGUiOiJzdHJpbmcifSwidm9sdW1lTmFtZSI6eyJkZXNjcmlwdGlvbiI6IlZvbHVtZU5hbWUgaXMgdGhlIGJpbmRpbmcgcmVmZXJlbmNlIHRvIHRoZSBQZXJzaXN0ZW50Vm9sdW1lIGJhY2tpbmcgdGhpcyBjbGFpbS4iLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In0sInByb21ldGhldXMiOnsiZGVzY3JpcHRpb24iOiJQcm9tZXRoZXVzIHJlcHJlc2VudHMgdGhlIHN0YXR1cyBvZiBwcmVtZXRoZXVzIHF1ZXJpZXMuIiwicHJvcGVydGllcyI6eyJjb25maWd1cmF0aW9uX2Vycm9yIjp7ImRlc2NyaXB0aW9uIjoiQ29uZmlnRXJyb3IgaXMgYSBmaWVsZCBvZiBDb3N0TWFuYWdlbWVudE1ldHJpY3NDb25maWdTdGF0dXMgdG8gcmVwcmVzZW50IGVycm9ycyBkdXJpbmcgcHJvbWV0aGV1cyBjb25maWd1cmF0aW9uLiIsInR5cGUiOiJzdHJpbmcifSwiY29udGV4dF90aW1lb3V0Ijp7ImRlc2NyaXB0aW9uIjoiQ29udGV4dFRpbWVvdXQgaXMgYSBmaWVsZCBvZiBDb3N0TWFuYWdlbWVudE1ldHJpY3NDb25maWdTdGF0ZSB0byByZXByZXNlbnQgaG93IGxvbmcgYSBxdWVyeSB0byBwcm9tZXRoZXVzIHNob3VsZCBydW4gaW4gc2Vjb25kcyBiZWZvcmUgdGltaW5nIG91dC4iLCJmb3JtYXQiOiJpbnQ2NCIsInR5cGUiOiJpbnRlZ2VyIn0sImxhc3RfcXVlcnlfc3RhcnRfdGltZSI6eyJkZXNjcmlwdGlvbiI6Ikxhc3RRdWVyeVN0YXJ0VGltZSBpcyBhIGZpZWxkIG9mIENvc3RNYW5hZ2VtZW50TWV0cmljc0NvbmZpZ1N0YXR1cyB0byByZXByZXNlbnQgdGhlIGxhc3QgdGltZSBxdWVyaWVzIHdlcmUgc3RhcnRlZC4iLCJmb3JtYXQiOiJkYXRlLXRpbWUiLCJudWxsYWJsZSI6dHJ1ZSwidHlwZSI6InN0cmluZyJ9LCJsYXN0X3F1ZXJ5X3N1Y2Nlc3NfdGltZSI6eyJkZXNjcmlwdGlvbiI6Ikxhc3RRdWVyeVN1Y2Nlc3NUaW1lIGlzIGEgZmllbGQgb2YgQ29zdE1hbmFnZW1lbnRNZXRyaWNzQ29uZmlnU3RhdHVzIHRvIHJlcHJlc2VudCB0aGUgbGFzdCB0aW1lIHF1ZXJpZXMgd2VyZSBzdWNjZXNzZnVsLiIsImZvcm1hdCI6ImRhdGUtdGltZSIsIm51bGxhYmxlIjp0cnVlLCJ0eXBlIjoic3RyaW5nIn0sInByb21ldGhldXNfY29uZmlndXJlZCI6eyJkZXNjcmlwdGlvbiI6IlByb21ldGhldXNDb25maWd1cmVkIGlzIGEgZmllbGQgb2YgQ29zdE1hbmFnZW1lbnRNZXRyaWNzQ29uZmlnU3RhdHVzIHRvIHJlcHJlc2VudCBpZiB0aGUgb3BlcmF0b3IgaXMgY29uZmlndXJlZCB0byBjb25uZWN0IHRvIHByb21ldGhldXMuIiwidHlwZSI6ImJvb2xlYW4ifSwicHJvbWV0aGV1c19jb25uZWN0ZWQiOnsiZGVzY3JpcHRpb24iOiJQcm9tZXRoZXVzQ29ubmVjdGVkIGlzIGEgZmllbGQgb2YgQ29zdE1hbmFnZW1lbnRNZXRyaWNzQ29uZmlnU3RhdHVzIHRvIHJlcHJlc2VudCBpZiBwcm9tZXRoZXVzIGNhbiBiZSBxdWVyaWVkLiIsInR5cGUiOiJib29sZWFuIn0sInByb21ldGhldXNfY29ubmVjdGlvbl9lcnJvciI6eyJkZXNjcmlwdGlvbiI6IkNvbm5lY3Rpb25FcnJvciBpcyBhIGZpZWxkIG9mIENvc3RNYW5hZ2VtZW50TWV0cmljc0NvbmZpZ1N0YXR1cyB0byByZXByZXNlbnQgZXJyb3JzIGR1cmluZyBwcm9tZXRoZXVzIHRlc3QgcXVlcnkuIiwidHlwZSI6InN0cmluZyJ9LCJzZXJ2aWNlX2FkZHJlc3MiOnsiZGVzY3JpcHRpb24iOiJTdmNBZGRyZXNzIGlzIHRoZSBpbnRlcm5hbCB0aGFub3MtcXVlcmllciBhZGRyZXNzLiIsInR5cGUiOiJzdHJpbmcifSwic2tpcF90bHNfdmVyaWZpY2F0aW9uIjp7ImRlc2NyaXB0aW9uIjoiU2tpcFRMU1ZlcmlmaWNhdGlvbiBpcyBhIGZpZWxkIG9mIENvc3RNYW5hZ2VtZW50TWV0cmljc0NvbmZpZ1N0YXR1cyB0byByZXByZXNlbnQgaWYgdGhlIHRoYW5vcy1xdWVyaWVyIGVuZHBvaW50IG11c3QgYmUgY2VydGlmaWNhdGUgdmFsaWRhdGVkLiIsInR5cGUiOiJib29sZWFuIn19LCJyZXF1aXJlZCI6WyJwcm9tZXRoZXVzX2NvbmZpZ3VyZWQiLCJwcm9tZXRoZXVzX2Nvbm5lY3RlZCJdLCJ0eXBlIjoib2JqZWN0In0sInJlcG9ydHMiOnsiZGVzY3JpcHRpb24iOiJSZXBvcnRzIHJlcHJlc2VudHMgdGhlIHN0YXR1cyBvZiByZXBvcnQgZ2VuZXJhdGlvbi4iLCJwcm9wZXJ0aWVzIjp7ImRhdGFfY29sbGVjdGVkIjp7ImRlc2NyaXB0aW9uIjoiRGF0YUNvbGxlY3RlZCBpcyBhIGZpZWxkIG9mIENvc3RNYW5hZ2VtZW50TWV0cmljc0NvbmZpZ1N0YXR1cyB0byByZXByZXNlbnQgd2hldGhlciBvciBub3QgZGF0YSB3YXMgY29sbGVjdGVkIGZvciB0aGUgbGFzdCBxdWVyeS4iLCJ0eXBlIjoiYm9vbGVhbiJ9LCJkYXRhX2NvbGxlY3Rpb25fbWVzc2FnZSI6eyJkZXNjcmlwdGlvbiI6IkRhdGFDb2xsZWN0aW9uTWVzc2FnZSBpcyBhIGZpZWxkIG9mIENvc3RNYW5hZ2VtZW50TWV0cmljc0NvbmZpZ1N0YXR1cyB0byByZXByZXNlbnQgYSBtZXNzYWdlIGFzc29jaWF0ZWQgd2l0aCB0aGUgZGF0YV9jb2xsZWN0ZWQgc3RhdHVzLiIsInR5cGUiOiJzdHJpbmcifSwibGFzdF9ob3VyX3F1ZXJpZWQiOnsiZGVzY3JpcHRpb24iOiJMYXN0SG91clF1ZXJpZWQgaXMgYSBmaWVsZCBvZiBDb3N0TWFuYWdlbWVudE1ldHJpY3NDb25maWdTdGF0dXMgdG8gcmVwcmVzZW50IHRoZSB0aW1lIHJhbmdlIGZvciB3aGljaCBtZXRyaWNzIHdlcmUgbGFzdCBxdWVyaWVkLiIsInR5cGUiOiJzdHJpbmcifSwicmVwb3J0X21vbnRoIjp7ImRlc2NyaXB0aW9uIjoiUmVwb3J0TW9udGggaXMgYSBmaWVsZCBvZiBDb3N0TWFuYWdlbWVudE1ldHJpY3NDb25maWdTdGF0dXMgdG8gcmVwcmVzZW50IHRoZSBtb250aCBmb3Igd2hpY2ggcmVwb3J0cyBhcmUgYmVpbmcgZ2VuZXJhdGVkLiIsInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwic291cmNlIjp7ImRlc2NyaXB0aW9uIjoiU291cmNlIGlzIGEgZmllbGQgb2YgQ29zdE1hbmFnZW1lbnRNZXRyaWNzQ29uZmlnIHRvIHJlcHJlc2VudCB0aGUgb2JzZXJ2ZWQgc3RhdGUgb2YgdGhlIHNvdXJjZSBvbiBjbG91ZC5yZWRoYXQuY29tLiIsInByb3BlcnRpZXMiOnsiY2hlY2tfY3ljbGUiOnsiZGVzY3JpcHRpb24iOiJDaGVja0N5Y2xlIGlzIGEgZmllbGQgb2YgQ29zdE1hbmFnZW1lbnRNZXRyaWNzQ29uZmlnIHRvIHJlcHJlc2VudCB0aGUgbnVtYmVyIG9mIG1pbnV0ZXMgYmV0d2VlbiBlYWNoIHNvdXJjZSBjaGVjayBzY2hlZHVsZS4gVGhlIGRlZmF1bHQgaXMgMTQ0MCBtaW4gKDI0IGhvdXJzKS4iLCJmb3JtYXQiOiJpbnQ2NCIsInR5cGUiOiJpbnRlZ2VyIn0sImNyZWF0ZV9zb3VyY2UiOnsiZGVzY3JpcHRpb24iOiJDcmVhdGVTb3VyY2UgaXMgYSBmaWVsZCBvZiBDb3N0TWFuYWdlbWVudE1ldHJpY3NDb25maWdTdGF0dXMgdG8gcmVwcmVzZW50IGlmIHRoZSBzb3VyY2Ugc2hvdWxkIGJlIGNyZWF0ZWQgaWYgbm90IGZvdW5kLiBBIHNvdXJjZSB3aWxsIG5vdCBiZSBjcmVhdGVkIGlmIHVwbG9hZF90b2dnbGUgaXMgYGZhbHNlYC4iLCJ0eXBlIjoiYm9vbGVhbiJ9LCJlcnJvciI6eyJkZXNjcmlwdGlvbiI6IlNvdXJjZUVycm9yIGlzIGEgZmllbGQgb2YgQ29zdE1hbmFnZW1lbnRNZXRyaWNzQ29uZmlnU3RhdHVzIHRvIHJlcHJlc2VudCB0aGUgZXJyb3IgZW5jb3VudGVyZWQgY3JlYXRpbmcgdGhlIHNvdXJjZS4iLCJ0eXBlIjoic3RyaW5nIn0sImxhc3RfY2hlY2tfdGltZSI6eyJkZXNjcmlwdGlvbiI6Ikxhc3RTb3VyY2VDaGVja1RpbWUgaXMgYSBmaWVsZCBvZiBDb3N0TWFuYWdlbWVudE1ldHJpY3NDb25maWcgdGhhdCBzaG93cyB0aGUgdGltZSB0aGF0IHRoZSBsYXN0IGNoZWNrIHdhcyBhdHRlbXB0ZWQuIiwiZm9ybWF0IjoiZGF0ZS10aW1lIiwibnVsbGFibGUiOnRydWUsInR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6IlNvdXJjZU5hbWUgaXMgYSBmaWVsZCBvZiBDb3N0TWFuYWdlbWVudE1ldHJpY3NDb25maWdTdGF0dXMgdG8gcmVwcmVzZW50IHRoZSBzb3VyY2UgbmFtZSBvbiBjbG91ZC5yZWRoYXQuY29tLiIsInR5cGUiOiJzdHJpbmcifSwic291cmNlX2RlZmluZWQiOnsiZGVzY3JpcHRpb24iOiJTb3VyY2VEZWZpbmVkIGlzIGEgZmllbGQgb2YgQ29zdE1hbmFnZW1lbnRNZXRyaWNzQ29uZmlnU3RhdHVzIHRvIHJlcHJlc2VudCBpZiB0aGUgc291cmNlIGV4aXN0cyBhcyBkZWZpbmVkIG9uIGNsb3VkLnJlZGhhdC5jb20uIiwidHlwZSI6ImJvb2xlYW4ifSwic291cmNlc19wYXRoIjp7ImRlc2NyaXB0aW9uIjoiU291cmNlc0FQSVBhdGggaXMgYSBmaWVsZCBvZiBDb3N0TWFuYWdlbWVudE1ldHJpY3NDb25maWcgdG8gcmVwcmVzZW50IHRoZSBwYXRoIG9mIHRoZSBTb3VyY2VzIEFQSSBzZXJ2aWNlLiIsInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwic3RvcmFnZSI6eyJkZXNjcmlwdGlvbiI6IlN0b3JhZ2UgaXMgYSBmaWVsZCIsInByb3BlcnRpZXMiOnsidm9sdW1lX21vdW50ZWQiOnsiZGVzY3JpcHRpb24iOiJWb2x1bWVNb3VudGVkIGlzIGEgYm9vbCB0byBpbmRpY2F0ZSBpZiBzdG9yYWdlIHZvbHVtZSB3YXMgbW91bnRlZC4iLCJ0eXBlIjoiYm9vbGVhbiJ9LCJ2b2x1bWVfdHlwZSI6eyJkZXNjcmlwdGlvbiI6IlZvbHVtZVR5cGUgaXMgdGhlIHN0cmluZyByZXByZXNlbnRhdGlvbiBvZiB0aGUgdm9sdW1lIHR5cGUuIiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJ1cGxvYWQiOnsiZGVzY3JpcHRpb24iOiJVcGxvYWQgaXMgYSBmaWVsZCBvZiBDb3N0TWFuYWdlbWVudE1ldHJpY3NDb25maWcgdG8gcmVwcmVzZW50IHRoZSB1cGxvYWQgb2JqZWN0LiIsInByb3BlcnRpZXMiOnsiZXJyb3IiOnsiZGVzY3JpcHRpb24iOiJVcGxvYWRFcnJvciBpcyBhIGZpZWxkIG9mIENvc3RNYW5hZ2VtZW50TWV0cmljc0NvbmZpZ1N0YXR1cyB0byByZXByZXNlbnQgdGhlIGVycm9yIGVuY291bnRlcmVkIHVwbG9hZGluZyByZXBvcnRzLiIsInR5cGUiOiJzdHJpbmcifSwiaW5ncmVzc19wYXRoIjp7ImRlc2NyaXB0aW9uIjoiSW5ncmVzc0FQSVBhdGggaXMgYSBmaWVsZCBvZiBDb3N0TWFuYWdlbWVudE1ldHJpY3NDb25maWcgdG8gcmVwcmVzZW50IHRoZSBwYXRoIG9mIHRoZSBJbmdyZXNzIEFQSSBzZXJ2aWNlLiIsInR5cGUiOiJzdHJpbmcifSwibGFzdF9wYXlsb2FkX2ZpbGVzIjp7ImRlc2NyaXB0aW9uIjoiTGFzdFBheWxvYWRGaWxlcyBpcyBhIGZpZWxkIG9mIENvc3RNYW5hZ2VtZW50TWV0cmljc0NvbmZpZyB0byByZXByZXNlbnQgdGhlIGxpc3Qgb2YgZmlsZXMgaW4gdGhlIGxhc3QgcGF5bG9hZCB0aGF0IHdhcyBzZW50LiIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5In0sImxhc3RfcGF5bG9hZF9tYW5pZmVzdF9pZCI6eyJkZXNjcmlwdGlvbiI6Ikxhc3RQYXlsb2FkTWFuaWZlc3QgaXMgYSBmaWVsZCBvZiBDb3N0TWFuYWdlbWVudE1ldHJpY3NDb25maWcgdGhhdCBzaG93cyB0aGUgbWFuaWZlc3RJRCBvZiB0aGUgbGFzdCBwYXlsb2FkLiIsInR5cGUiOiJzdHJpbmcifSwibGFzdF9wYXlsb2FkX25hbWUiOnsiZGVzY3JpcHRpb24iOiJMYXN0UGF5bG9hZE5hbWUgaXMgYSBmaWVsZCBvZiBDb3N0TWFuYWdlbWVudE1ldHJpY3NDb25maWcgdGhhdCBzaG93cyB0aGUgbmFtZSBvZiB0aGUgbGFzdCBwYXlsb2FkIGZpbGUuIiwidHlwZSI6InN0cmluZyJ9LCJsYXN0X3BheWxvYWRfcmVxdWVzdF9pZCI6eyJkZXNjcmlwdGlvbiI6Ikxhc3RQYXlsb2FkUmVxdWVzdElEIGlzIGEgZmllbGQgb2YgQ29zdE1hbmFnZW1lbnRNZXRyaWNzQ29uZmlnIHRoYXQgc2hvd3MgdGhlIGluc2lnaHRzIHJlcXVlc3QgaWQgb2YgdGhlIGxhc3QgcGF5bG9hZC4iLCJ0eXBlIjoic3RyaW5nIn0sImxhc3Rfc3VjY2Vzc2Z1bF91cGxvYWRfdGltZSI6eyJkZXNjcmlwdGlvbiI6Ikxhc3RTdWNjZXNzZnVsVXBsb2FkVGltZSBpcyBhIGZpZWxkIG9mIENvc3RNYW5hZ2VtZW50TWV0cmljc0NvbmZpZyB0aGF0IHNob3dzIHRoZSB0aW1lIG9mIHRoZSBsYXN0IHN1Y2Nlc3NmdWwgdXBsb2FkLiIsImZvcm1hdCI6ImRhdGUtdGltZSIsIm51bGxhYmxlIjp0cnVlLCJ0eXBlIjoic3RyaW5nIn0sImxhc3RfdXBsb2FkX3N0YXR1cyI6eyJkZXNjcmlwdGlvbiI6Ikxhc3RVcGxvYWRTdGF0dXMgaXMgYSBmaWVsZCBvZiBDb3N0TWFuYWdlbWVudE1ldHJpY3NDb25maWcgdGhhdCBzaG93cyB0aGUgaHR0cCBzdGF0dXMgb2YgdGhlIGxhc3QgdXBsb2FkLiIsInR5cGUiOiJzdHJpbmcifSwidXBsb2FkIjp7ImRlc2NyaXB0aW9uIjoiVXBsb2FkVG9nZ2xlIGlzIGEgZmllbGQgb2YgQ29zdE1hbmFnZW1lbnRNZXRyaWNzQ29uZmlnIHRvIHJlcHJlc2VudCBpZiB0aGUgb3BlcmF0b3Igc2hvdWxkIHVwbG9hZCB0byBjbG91ZC5yZWRoYXQuY29tLiBUaGUgZGVmYXVsdCBpcyB0cnVlIiwidHlwZSI6ImJvb2xlYW4ifSwidXBsb2FkX2N5Y2xlIjp7ImRlc2NyaXB0aW9uIjoiVXBsb2FkQ3ljbGUgaXMgYSBmaWVsZCBvZiBDb3N0TWFuYWdlbWVudE1ldHJpY3NDb25maWcgdG8gcmVwcmVzZW50IHRoZSBudW1iZXIgb2YgbWludXRlcyBiZXR3ZWVuIGVhY2ggdXBsb2FkIHNjaGVkdWxlLiBUaGUgZGVmYXVsdCBpcyAzNjAgbWluICg2IGhvdXJzKS4iLCJmb3JtYXQiOiJpbnQ2NCIsInR5cGUiOiJpbnRlZ2VyIn0sInVwbG9hZF93YWl0Ijp7ImRlc2NyaXB0aW9uIjoiVXBsb2FkV2FpdCBpcyBhIGZpZWxkIG9mIENvc3RNYW5hZ2VtZW50TWV0cmljc0NvbmZpZyB0byByZXByZXNlbnQgdGhlIHRpbWUgdG8gd2FpdCBiZWZvcmUgc2VuZGluZyBhbiB1cGxvYWQuIiwiZm9ybWF0IjoiaW50NjQiLCJ0eXBlIjoiaW50ZWdlciJ9LCJ2YWxpZGF0ZV9jZXJ0Ijp7ImRlc2NyaXB0aW9uIjoiVmFsaWRhdGVDZXJ0IGlzIGEgZmllbGQgb2YgQ29zdE1hbmFnZW1lbnRNZXRyaWNzQ29uZmlnIHRvIHJlcHJlc2VudCBpZiB0aGUgSW5ncmVzcyBlbmRwb2ludCBtdXN0IGJlIGNlcnRpZmljYXRlIHZhbGlkYXRlZC4iLCJ0eXBlIjoiYm9vbGVhbiJ9fSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9fSwicmVxdWlyZWQiOlsic3BlYyJdLCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOnRydWUsInN1YnJlc291cmNlcyI6eyJzdGF0dXMiOnt9fX1dfSwic3RhdHVzIjp7ImFjY2VwdGVkTmFtZXMiOnsia2luZCI6IiIsInBsdXJhbCI6IiJ9LCJjb25kaXRpb25zIjpbXSwic3RvcmVkVmVyc2lvbnMiOltdfX0=
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: registry.redhat.io/costmanagement/costmanagement-metrics-operator-bundle@sha256:0abc9b30a48080d2a4a413f7818770ea4dd7b78c715a816fe5818ec75326bb69
  name: ""
- image: registry.redhat.io/costmanagement/costmanagement-metrics-rhel8-operator@sha256:4c9153b33cc942134e2bd857a8cae47ded38eb789874fde089d67b00d0c2e6f6
  name: costmanagement-metrics-rhel8-operator-4c9153b33cc942134e2bd857a8cae47ded38eb789874fde089d67b00d0c2e6f6-annotation
- image: registry.redhat.io/costmanagement/costmanagement-metrics-rhel8-operator@sha256:4c9153b33cc942134e2bd857a8cae47ded38eb789874fde089d67b00d0c2e6f6
  name: manager
schema: olm.bundle
---
image: registry.redhat.io/costmanagement/costmanagement-metrics-operator-bundle@sha256:2c326d847a0d15677171c69c451a8fd34da9e652169a8c9da7a20d0b7defda28
name: costmanagement-metrics-operator.1.1.8
package: costmanagement-metrics-operator
properties:
- type: olm.gvk
  value:
    group: costmanagement-metrics-cfg.openshift.io
    kind: CostManagementMetricsConfig
    version: v1beta1
- type: olm.package
  value:
    packageName: costmanagement-metrics-operator
    version: 1.1.8
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: registry.redhat.io/costmanagement/costmanagement-metrics-operator-bundle@sha256:2c326d847a0d15677171c69c451a8fd34da9e652169a8c9da7a20d0b7defda28
  name: ""
- image: registry.redhat.io/costmanagement/costmanagement-metrics-rhel8-operator@sha256:d1aa318a720495fdc6b05274416be9135a16c27a57a89e6f692de43a3c5c1d09
  name: costmanagement-metrics-rhel8-operator-d1aa318a720495fdc6b05274416be9135a16c27a57a89e6f692de43a3c5c1d09-annotation
- image: registry.redhat.io/costmanagement/costmanagement-metrics-rhel8-operator@sha256:d1aa318a720495fdc6b05274416be9135a16c27a57a89e6f692de43a3c5c1d09
  name: manager
schema: olm.bundle
---
image: registry.redhat.io/costmanagement/costmanagement-metrics-operator-bundle@sha256:e2a0375e814938a2e2e4bdf5d7ffa767d19bb80c7bb491c79c4d80254c5fb65e
name: costmanagement-metrics-operator.1.1.9
package: costmanagement-metrics-operator
properties:
- type: olm.gvk
  value:
    group: costmanagement-metrics-cfg.openshift.io
    kind: CostManagementMetricsConfig
    version: v1beta1
- type: olm.package
  value:
    packageName: costmanagement-metrics-operator
    version: 1.1.9
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjMuMCJ9LCJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibmFtZSI6ImNvc3RtYW5hZ2VtZW50bWV0cmljc2NvbmZpZ3MuY29zdG1hbmFnZW1lbnQtbWV0cmljcy1jZmcub3BlbnNoaWZ0LmlvIn0sInNwZWMiOnsiZ3JvdXAiOiJjb3N0bWFuYWdlbWVudC1tZXRyaWNzLWNmZy5vcGVuc2hpZnQuaW8iLCJuYW1lcyI6eyJraW5kIjoiQ29zdE1hbmFnZW1lbnRNZXRyaWNzQ29uZmlnIiwibGlzdEtpbmQiOiJDb3N0TWFuYWdlbWVudE1ldHJpY3NDb25maWdMaXN0IiwicGx1cmFsIjoiY29zdG1hbmFnZW1lbnRtZXRyaWNzY29uZmlncyIsInNpbmd1bGFyIjoiY29zdG1hbmFnZW1lbnRtZXRyaWNzY29uZmlnIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJuYW1lIjoidjFiZXRhMSIsInNjaGVtYSI6eyJvcGVuQVBJVjNTY2hlbWEiOnsiZGVzY3JpcHRpb24iOiJDb3N0TWFuYWdlbWVudE1ldHJpY3NDb25maWcgaXMgdGhlIFNjaGVtYSBmb3IgdGhlIGNvc3RtYW5hZ2VtZW50bWV0cmljc2NvbmZpZyBBUEkiLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGRlZmluZXMgdGhlIHZlcnNpb25lZCBzY2hlbWEgb2YgdGhpcyByZXByZXNlbnRhdGlvbiBvZiBhbiBvYmplY3QuIFNlcnZlcnMgc2hvdWxkIGNvbnZlcnQgcmVjb2duaXplZCBzY2hlbWFzIHRvIHRoZSBsYXRlc3QgaW50ZXJuYWwgdmFsdWUsIGFuZCBtYXkgcmVqZWN0IHVucmVjb2duaXplZCB2YWx1ZXMuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjcmVzb3VyY2VzIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyBhIHN0cmluZyB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIFJFU1QgcmVzb3VyY2UgdGhpcyBvYmplY3QgcmVwcmVzZW50cy4gU2VydmVycyBtYXkgaW5mZXIgdGhpcyBmcm9tIHRoZSBlbmRwb2ludCB0aGUgY2xpZW50IHN1Ym1pdHMgcmVxdWVzdHMgdG8uIENhbm5vdCBiZSB1cGRhdGVkLiBJbiBDYW1lbENhc2UuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjdHlwZXMta2luZHMiLCJ0eXBlIjoic3RyaW5nIn0sIm1ldGFkYXRhIjp7InR5cGUiOiJvYmplY3QifSwic3BlYyI6eyJkZXNjcmlwdGlvbiI6IkNvc3RNYW5hZ2VtZW50TWV0cmljc0NvbmZpZ1NwZWMgZGVmaW5lcyB0aGUgZGVzaXJlZCBzdGF0ZSBvZiBDb3N0TWFuYWdlbWVudE1ldHJpY3NDb25maWcuIiwicHJvcGVydGllcyI6eyJhcGlfdXJsIjp7ImRlZmF1bHQiOiJodHRwczovL2Nsb3VkLnJlZGhhdC5jb20iLCJkZXNjcmlwdGlvbiI6IkZPUiBERVZFTE9QTUVOVCBPTkxZLiBBUElVUkwgaXMgYSBmaWVsZCBvZiBDb3N0TWFuYWdlbWVudE1ldHJpY3NDb25maWcgdG8gcmVwcmVzZW50IHRoZSB1cmwgb2YgdGhlIEFQSSBlbmRwb2ludCBmb3Igc2VydmljZSBpbnRlcmFjdGlvbi4gVGhlIGRlZmF1bHQgaXMgYGh0dHBzOi8vY2xvdWQucmVkaGF0LmNvbWAuIiwidHlwZSI6InN0cmluZyJ9LCJhdXRoZW50aWNhdGlvbiI6eyJkZXNjcmlwdGlvbiI6IkF1dGhlbnRpY2F0aW9uIGlzIGEgZmllbGQgb2YgQ29zdE1hbmFnZW1lbnRNZXRyaWNzQ29uZmlnIHRvIHJlcHJlc2VudCB0aGUgYXV0aGVudGljYXRpb24gb2JqZWN0LiIsInByb3BlcnRpZXMiOnsic2VjcmV0X25hbWUiOnsiZGVzY3JpcHRpb24iOiJBdXRoZW50aWNhdGlvblNlY3JldE5hbWUgaXMgYSBmaWVsZCBvZiBDb3N0TWFuYWdlbWVudE1ldHJpY3NDb25maWcgdG8gcmVwcmVzZW50IHRoZSBzZWNyZXQgd2l0aCB0aGUgdXNlciBhbmQgcGFzc3dvcmQgdXNlZCBmb3IgdXBsb2Fkcy4iLCJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOnsiZGVmYXVsdCI6InRva2VuIiwiZGVzY3JpcHRpb24iOiJBdXRoVHlwZSBpcyBhIGZpZWxkIG9mIENvc3RNYW5hZ2VtZW50TWV0cmljc0NvbmZpZyB0byByZXByZXNlbnQgdGhlIGF1dGhlbnRpY2F0aW9uIHR5cGUgdG8gYmUgdXNlZCBiYXNpYyBvciB0b2tlbi4gVmFsaWQgdmFsdWVzIGFyZTogLSBcImJhc2ljXCIgOiBFbmFibGVzIGF1dGhlbnRpY2F0aW9uIHVzaW5nIHVzZXIgYW5kIHBhc3N3b3JkIGZyb20gYXV0aGVudGljYXRpb24gc2VjcmV0LiAtIFwidG9rZW5cIiAoZGVmYXVsdCk6IFVzZXMgY2x1c3RlciB0b2tlbiBmb3IgYXV0aGVudGljYXRpb24uIiwiZW51bSI6WyJ0b2tlbiIsImJhc2ljIl0sInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbInR5cGUiXSwidHlwZSI6Im9iamVjdCJ9LCJjbHVzdGVySUQiOnsiZGVzY3JpcHRpb24iOiJDbHVzdGVySUQgaXMgYSBmaWVsZCBvZiBDb3N0TWFuYWdlbWVudE1ldHJpY3NDb25maWcgdG8gcmVwcmVzZW50IHRoZSBjbHVzdGVyIFVVSUQuIE5vcm1hbGx5IHRoaXMgdmFsdWUgc2hvdWxkIG5vdCBiZSBzcGVjaWZpZWQuIE9ubHkgc2V0IHRoaXMgdmFsdWUgaWYgdGhlIGNsdXN0ZXJJRCBjYW5ub3QgYmUgb2J0YWluZWQgZnJvbSB0aGUgQ2x1c3RlclZlcnNpb24uIiwidHlwZSI6InN0cmluZyJ9LCJjbHVzdGVyVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkNsdXN0ZXJWZXJzaW9uIGlzIGEgZmllbGQgb2YgQ29zdE1hbmFnZW1lbnRNZXRyaWNzQ29uZmlnIHRvIHJlcHJlc2VudCB0aGUgY2x1c3RlciB2ZXJzaW9uLiBOb3JtYWxseSB0aGlzIHZhbHVlIHNob3VsZCBub3QgYmUgc3BlY2lmaWVkLiBPbmx5IHNldCB0aGlzIHZhbHVlIGlmIHRoZSBjbHVzdGVyVmVyc2lvbiBjYW5ub3QgYmUgb2J0YWluZWQgZnJvbSB0aGUgQ2x1c3RlclZlcnNpb24uIiwidHlwZSI6InN0cmluZyJ9LCJwYWNrYWdpbmciOnsiZGVzY3JpcHRpb24iOiJQYWNrYWdpbmcgaXMgYSBmaWVsZCBvZiBDb3N0TWFuYWdlbWVudE1ldHJpY3NDb25maWcgdG8gcmVwcmVzZW50IHRoZSBwYWNrYWdpbmcgb2JqZWN0LiIsInByb3BlcnRpZXMiOnsibWF4X3JlcG9ydHNfdG9fc3RvcmUiOnsiZGVmYXVsdCI6MzAsImRlc2NyaXB0aW9uIjoiTWF4UmVwb3J0cyBpcyBhIGZpZWxkIG9mIENvc3RNYW5hZ2VtZW50TWV0cmljc0NvbmZpZyB0byByZXByZXNlbnQgdGhlIG1heGltdW0gbnVtYmVyIG9mIHJlcG9ydHMgdG8gc3RvcmUuIFRoZSBkZWZhdWx0IGlzIDMwIHJlcG9ydHMgd2hpY2ggY29ycmVzcG9uZHMgdG8gYXBwcm94aW1hdGVseSA3IGRheXMgd29ydGggb2YgZGF0YSBnaXZlbiB0aGUgb3RoZXIgZGVmYXVsdCB2YWx1ZXMuIiwiZm9ybWF0IjoiaW50NjQiLCJtaW5pbXVtIjoxLCJ0eXBlIjoiaW50ZWdlciJ9LCJtYXhfc2l6ZV9NQiI6eyJkZWZhdWx0IjoxMDAsImRlc2NyaXB0aW9uIjoiTWF4U2l6ZSBpcyBhIGZpZWxkIG9mIENvc3RNYW5hZ2VtZW50TWV0cmljc0NvbmZpZyB0byByZXByZXNlbnQgdGhlIG1heCBmaWxlIHNpemUgaW4gbWVnYWJ5dGVzIHRoYXQgd2lsbCBiZSBjb21wcmVzc2VkIGZvciB1cGxvYWQgdG8gSW5ncmVzcy4gVGhlIGRlZmF1bHQgaXMgMTAwLiIsImZvcm1hdCI6ImludDY0IiwibWF4aW11bSI6MTAwLCJtaW5pbXVtIjoxLCJ0eXBlIjoiaW50ZWdlciJ9fSwicmVxdWlyZWQiOlsibWF4X3JlcG9ydHNfdG9fc3RvcmUiLCJtYXhfc2l6ZV9NQiJdLCJ0eXBlIjoib2JqZWN0In0sInByb21ldGhldXNfY29uZmlnIjp7ImRlc2NyaXB0aW9uIjoiUHJvbWV0aGV1c0NvbmZpZyBpcyBhIGZpZWxkIG9mIENvc3RNYW5hZ2VtZW50TWV0cmljc0NvbmZpZyB0byByZXByZXNlbnQgdGhlIGNvbmZpZ3VyYXRpb24gb2YgUHJvbWV0aGV1cyBjb25uZWN0aW9uLiIsInByb3BlcnRpZXMiOnsiY29udGV4dF90aW1lb3V0Ijp7ImRlZmF1bHQiOjEyMCwiZGVzY3JpcHRpb24iOiJDb250ZXh0VGltZW91dCBpcyBhIGZpZWxkIG9mIENvc3RNYW5hZ2VtZW50TWV0cmljc0NvbmZpZyB0byByZXByZXNlbnQgaG93IGxvbmcgYSBxdWVyeSB0byBwcm9tZXRoZXVzIHNob3VsZCBydW4gaW4gc2Vjb25kcyBiZWZvcmUgdGltaW5nIG91dC4gVGhlIGRlZmF1bHQgaXMgMTIwIHNlY29uZHMuIiwiZm9ybWF0IjoiaW50NjQiLCJtYXhpbXVtIjoxODAsIm1pbmltdW0iOjEwLCJ0eXBlIjoiaW50ZWdlciJ9LCJzZXJ2aWNlX2FkZHJlc3MiOnsiZGVmYXVsdCI6Imh0dHBzOi8vdGhhbm9zLXF1ZXJpZXIub3BlbnNoaWZ0LW1vbml0b3Jpbmcuc3ZjOjkwOTEiLCJkZXNjcmlwdGlvbiI6IkZPUiBERVZFTE9QTUVOVCBPTkxZLiBTdmNBZGRyZXNzIGlzIGEgZmllbGQgb2YgQ29zdE1hbmFnZW1lbnRNZXRyaWNzQ29uZmlnIHRvIHJlcHJlc2VudCB0aGUgdGhhbm9zLXF1ZXJpZXIgYWRkcmVzcy4gVGhlIGRlZmF1bHQgaXMgYGh0dHBzOi8vdGhhbm9zLXF1ZXJpZXIub3BlbnNoaWZ0LW1vbml0b3Jpbmcuc3ZjOjkwOTFgLiIsInR5cGUiOiJzdHJpbmcifSwic2tpcF90bHNfdmVyaWZpY2F0aW9uIjp7ImRlZmF1bHQiOmZhbHNlLCJkZXNjcmlwdGlvbiI6IkZPUiBERVZFTE9QTUVOVCBPTkxZLiBTa2lwVExTVmVyaWZpY2F0aW9uIGlzIGEgZmllbGQgb2YgQ29zdE1hbmFnZW1lbnRNZXRyaWNzQ29uZmlnIHRvIHJlcHJlc2VudCBpZiB0aGUgdGhhbm9zLXF1ZXJpZXIgZW5kcG9pbnQgbXVzdCBiZSBjZXJ0aWZpY2F0ZSB2YWxpZGF0ZWQuIFRoZSBkZWZhdWx0IGlzIGZhbHNlLiIsInR5cGUiOiJib29sZWFuIn19LCJyZXF1aXJlZCI6WyJzZXJ2aWNlX2FkZHJlc3MiLCJza2lwX3Rsc192ZXJpZmljYXRpb24iXSwidHlwZSI6Im9iamVjdCJ9LCJzb3VyY2UiOnsiZGVzY3JpcHRpb24iOiJTb3VyY2UgaXMgYSBmaWVsZCBvZiBDb3N0TWFuYWdlbWVudE1ldHJpY3NDb25maWcgdG8gcmVwcmVzZW50IHRoZSBkZXNpcmVkIHNvdXJjZSBvbiBjbG91ZC5yZWRoYXQuY29tLiIsInByb3BlcnRpZXMiOnsiY2hlY2tfY3ljbGUiOnsiZGVmYXVsdCI6MTQ0MCwiZGVzY3JpcHRpb24iOiJDaGVja0N5Y2xlIGlzIGEgZmllbGQgb2YgQ29zdE1hbmFnZW1lbnRNZXRyaWNzQ29uZmlnIHRvIHJlcHJlc2VudCB0aGUgbnVtYmVyIG9mIG1pbnV0ZXMgYmV0d2VlbiBlYWNoIHNvdXJjZSBjaGVjayBzY2hlZHVsZSBUaGUgZGVmYXVsdCBpcyAxNDQwIG1pbiAoMjQgaG91cnMpLiIsImZvcm1hdCI6ImludDY0IiwibWluaW11bSI6MCwidHlwZSI6ImludGVnZXIifSwiY3JlYXRlX3NvdXJjZSI6eyJkZWZhdWx0IjpmYWxzZSwiZGVzY3JpcHRpb24iOiJDcmVhdGVTb3VyY2UgaXMgYSBmaWVsZCBvZiBDb3N0TWFuYWdlbWVudE1ldHJpY3NDb25maWdTcGVjIHRvIHJlcHJlc2VudCBpZiB0aGUgc291cmNlIHNob3VsZCBiZSBjcmVhdGVkIGlmIG5vdCBmb3VuZC4iLCJ0eXBlIjoiYm9vbGVhbiJ9LCJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiU291cmNlTmFtZSBpcyBhIGZpZWxkIG9mIENvc3RNYW5hZ2VtZW50TWV0cmljc0NvbmZpZ1NwZWMgdG8gcmVwcmVzZW50IHRoZSBzb3VyY2UgbmFtZSBvbiBjbG91ZC5yZWRoYXQuY29tLiIsInR5cGUiOiJzdHJpbmcifSwic291cmNlc19wYXRoIjp7ImRlZmF1bHQiOiIvYXBpL3NvdXJjZXMvdjEuMC8iLCJkZXNjcmlwdGlvbiI6IkZPUiBERVZFTE9QTUVOVCBPTkxZLiBTb3VyY2VzQVBJUGF0aCBpcyBhIGZpZWxkIG9mIENvc3RNYW5hZ2VtZW50TWV0cmljc0NvbmZpZyB0byByZXByZXNlbnQgdGhlIHBhdGggb2YgdGhlIFNvdXJjZXMgQVBJIHNlcnZpY2UuIFRoZSBkZWZhdWx0IGlzIGAvYXBpL3NvdXJjZXMvdjEuMC9gLiIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbImNoZWNrX2N5Y2xlIiwiY3JlYXRlX3NvdXJjZSIsInNvdXJjZXNfcGF0aCJdLCJ0eXBlIjoib2JqZWN0In0sInVwbG9hZCI6eyJkZXNjcmlwdGlvbiI6IlVwbG9hZCBpcyBhIGZpZWxkIG9mIENvc3RNYW5hZ2VtZW50TWV0cmljc0NvbmZpZyB0byByZXByZXNlbnQgdGhlIHVwbG9hZCBvYmplY3QuIiwicHJvcGVydGllcyI6eyJpbmdyZXNzX3BhdGgiOnsiZGVmYXVsdCI6Ii9hcGkvaW5ncmVzcy92MS91cGxvYWQiLCJkZXNjcmlwdGlvbiI6IkZPUiBERVZFTE9QTUVOVCBPTkxZLiBJbmdyZXNzQVBJUGF0aCBpcyBhIGZpZWxkIG9mIENvc3RNYW5hZ2VtZW50TWV0cmljc0NvbmZpZyB0byByZXByZXNlbnQgdGhlIHBhdGggb2YgdGhlIEluZ3Jlc3MgQVBJIHNlcnZpY2UuIFRoZSBkZWZhdWx0IGlzIGAvYXBpL2luZ3Jlc3MvdjEvdXBsb2FkYC4iLCJ0eXBlIjoic3RyaW5nIn0sInVwbG9hZF9jeWNsZSI6eyJkZWZhdWx0IjozNjAsImRlc2NyaXB0aW9uIjoiVXBsb2FkQ3ljbGUgaXMgYSBmaWVsZCBvZiBDb3N0TWFuYWdlbWVudE1ldHJpY3NDb25maWcgdG8gcmVwcmVzZW50IHRoZSBudW1iZXIgb2YgbWludXRlcyBiZXR3ZWVuIGVhY2ggdXBsb2FkIHNjaGVkdWxlLiBUaGUgZGVmYXVsdCBpcyAzNjAgbWluICg2IGhvdXJzKS4iLCJmb3JtYXQiOiJpbnQ2NCIsIm1pbmltdW0iOjAsInR5cGUiOiJpbnRlZ2VyIn0sInVwbG9hZF90b2dnbGUiOnsiZGVmYXVsdCI6dHJ1ZSwiZGVzY3JpcHRpb24iOiJVcGxvYWRUb2dnbGUgaXMgYSBmaWVsZCBvZiBDb3N0TWFuYWdlbWVudE1ldHJpY3NDb25maWcgdG8gcmVwcmVzZW50IGlmIHRoZSBvcGVyYXRvciBpcyBpbnN0YWxsZWQgaW4gYSByZXN0cmljdGVkLW5ldHdvcmsuIElmIGBmYWxzZWAsIHRoZSBvcGVyYXRvciB3aWxsIG5vdCB1cGxvYWQgdG8gY2xvdWQucmVkaGF0LmNvbSBvciBjaGVjay9jcmVhdGUgc291cmNlcy4gVGhlIGRlZmF1bHQgaXMgdHJ1ZS4iLCJ0eXBlIjoiYm9vbGVhbiJ9LCJ1cGxvYWRfd2FpdCI6eyJkZXNjcmlwdGlvbiI6IlVwbG9hZFdhaXQgaXMgYSBmaWVsZCBvZiBDb3N0TWFuYWdlbWVudE1ldHJpY3NDb25maWcgdG8gcmVwcmVzZW50IHRoZSB0aW1lIHRvIHdhaXQgYmVmb3JlIHNlbmRpbmcgYW4gdXBsb2FkLiIsImZvcm1hdCI6ImludDY0IiwibWluaW11bSI6MCwidHlwZSI6ImludGVnZXIifSwidmFsaWRhdGVfY2VydCI6eyJkZWZhdWx0Ijp0cnVlLCJkZXNjcmlwdGlvbiI6IlZhbGlkYXRlQ2VydCBpcyBhIGZpZWxkIG9mIENvc3RNYW5hZ2VtZW50TWV0cmljc0NvbmZpZyB0byByZXByZXNlbnQgaWYgdGhlIEluZ3Jlc3MgZW5kcG9pbnQgbXVzdCBiZSBjZXJ0aWZpY2F0ZSB2YWxpZGF0ZWQuIiwidHlwZSI6ImJvb2xlYW4ifX0sInJlcXVpcmVkIjpbImluZ3Jlc3NfcGF0aCIsInVwbG9hZF9jeWNsZSIsInVwbG9hZF90b2dnbGUiLCJ2YWxpZGF0ZV9jZXJ0Il0sInR5cGUiOiJvYmplY3QifSwidm9sdW1lX2NsYWltX3RlbXBsYXRlIjp7ImRlc2NyaXB0aW9uIjoiVm9sdW1lQ2xhaW1UZW1wbGF0ZSBpcyBhIGZpZWxkIG9mIENvc3RNYW5hZ2VtZW50TWV0cmljc0NvbmZpZyB0byByZXByZXNlbnQgYSBQVkMgdGVtcGxhdGUuIiwicHJvcGVydGllcyI6eyJhcGlWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQVBJVmVyc2lvbiBkZWZpbmVzIHRoZSB2ZXJzaW9uZWQgc2NoZW1hIG9mIHRoaXMgcmVwcmVzZW50YXRpb24gb2YgYW4gb2JqZWN0LiBTZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmQgbWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3Jlc291cmNlcyIsInR5cGUiOiJzdHJpbmcifSwia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgaXMgYSBzdHJpbmcgdmFsdWUgcmVwcmVzZW50aW5nIHRoZSBSRVNUIHJlc291cmNlIHRoaXMgb2JqZWN0IHJlcHJlc2VudHMuIFNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLiBDYW5ub3QgYmUgdXBkYXRlZC4gSW4gQ2FtZWxDYXNlLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJkZXNjcmlwdGlvbiI6IkVtYmVkZGVkTWV0YWRhdGEgY29udGFpbnMgbWV0YWRhdGEgcmVsZXZhbnQgdG8gYW4gRW1iZWRkZWRSZXNvdXJjZS4iLCJwcm9wZXJ0aWVzIjp7ImFubm90YXRpb25zIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7InR5cGUiOiJzdHJpbmcifSwiZGVzY3JpcHRpb24iOiJBbm5vdGF0aW9ucyBpcyBhbiB1bnN0cnVjdHVyZWQga2V5IHZhbHVlIG1hcCBzdG9yZWQgd2l0aCBhIHJlc291cmNlIHRoYXQgbWF5IGJlIHNldCBieSBleHRlcm5hbCB0b29scyB0byBzdG9yZSBhbmQgcmV0cmlldmUgYXJiaXRyYXJ5IG1ldGFkYXRhLiBUaGV5IGFyZSBub3QgcXVlcnlhYmxlIGFuZCBzaG91bGQgYmUgcHJlc2VydmVkIHdoZW4gbW9kaWZ5aW5nIG9iamVjdHMuIE1vcmUgaW5mbzogaHR0cDovL2t1YmVybmV0ZXMuaW8vZG9jcy91c2VyLWd1aWRlL2Fubm90YXRpb25zIiwidHlwZSI6Im9iamVjdCJ9LCJsYWJlbHMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsidHlwZSI6InN0cmluZyJ9LCJkZXNjcmlwdGlvbiI6Ik1hcCBvZiBzdHJpbmcga2V5cyBhbmQgdmFsdWVzIHRoYXQgY2FuIGJlIHVzZWQgdG8gb3JnYW5pemUgYW5kIGNhdGVnb3JpemUgKHNjb3BlIGFuZCBzZWxlY3QpIG9iamVjdHMuIE1heSBtYXRjaCBzZWxlY3RvcnMgb2YgcmVwbGljYXRpb24gY29udHJvbGxlcnMgYW5kIHNlcnZpY2VzLiBNb3JlIGluZm86IGh0dHA6Ly9rdWJlcm5ldGVzLmlvL2RvY3MvdXNlci1ndWlkZS9sYWJlbHMiLCJ0eXBlIjoib2JqZWN0In0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG11c3QgYmUgdW5pcXVlIHdpdGhpbiBhIG5hbWVzcGFjZS4gSXMgcmVxdWlyZWQgd2hlbiBjcmVhdGluZyByZXNvdXJjZXMsIGFsdGhvdWdoIHNvbWUgcmVzb3VyY2VzIG1heSBhbGxvdyBhIGNsaWVudCB0byByZXF1ZXN0IHRoZSBnZW5lcmF0aW9uIG9mIGFuIGFwcHJvcHJpYXRlIG5hbWUgYXV0b21hdGljYWxseS4gTmFtZSBpcyBwcmltYXJpbHkgaW50ZW5kZWQgZm9yIGNyZWF0aW9uIGlkZW1wb3RlbmNlIGFuZCBjb25maWd1cmF0aW9uIGRlZmluaXRpb24uIENhbm5vdCBiZSB1cGRhdGVkLiBNb3JlIGluZm86IGh0dHA6Ly9rdWJlcm5ldGVzLmlvL2RvY3MvdXNlci1ndWlkZS9pZGVudGlmaWVycyNuYW1lcyIsInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwic3BlYyI6eyJkZXNjcmlwdGlvbiI6IlNwZWMgZGVmaW5lcyB0aGUgZGVzaXJlZCBjaGFyYWN0ZXJpc3RpY3Mgb2YgYSB2b2x1bWUgcmVxdWVzdGVkIGJ5IGEgcG9kIGF1dGhvci4gTW9yZSBpbmZvOiBodHRwczovL2t1YmVybmV0ZXMuaW8vZG9jcy9jb25jZXB0cy9zdG9yYWdlL3BlcnNpc3RlbnQtdm9sdW1lcyNwZXJzaXN0ZW50dm9sdW1lY2xhaW1zIiwicHJvcGVydGllcyI6eyJhY2Nlc3NNb2RlcyI6eyJkZXNjcmlwdGlvbiI6IkFjY2Vzc01vZGVzIGNvbnRhaW5zIHRoZSBkZXNpcmVkIGFjY2VzcyBtb2RlcyB0aGUgdm9sdW1lIHNob3VsZCBoYXZlLiBNb3JlIGluZm86IGh0dHBzOi8va3ViZXJuZXRlcy5pby9kb2NzL2NvbmNlcHRzL3N0b3JhZ2UvcGVyc2lzdGVudC12b2x1bWVzI2FjY2Vzcy1tb2Rlcy0xIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkifSwiZGF0YVNvdXJjZSI6eyJkZXNjcmlwdGlvbiI6IlRoaXMgZmllbGQgY2FuIGJlIHVzZWQgdG8gc3BlY2lmeSBlaXRoZXI6ICogQW4gZXhpc3RpbmcgVm9sdW1lU25hcHNob3Qgb2JqZWN0IChzbmFwc2hvdC5zdG9yYWdlLms4cy5pby9Wb2x1bWVTbmFwc2hvdCkgKiBBbiBleGlzdGluZyBQVkMgKFBlcnNpc3RlbnRWb2x1bWVDbGFpbSkgKiBBbiBleGlzdGluZyBjdXN0b20gcmVzb3VyY2UgdGhhdCBpbXBsZW1lbnRzIGRhdGEgcG9wdWxhdGlvbiAoQWxwaGEpIEluIG9yZGVyIHRvIHVzZSBjdXN0b20gcmVzb3VyY2UgdHlwZXMgdGhhdCBpbXBsZW1lbnQgZGF0YSBwb3B1bGF0aW9uLCB0aGUgQW55Vm9sdW1lRGF0YVNvdXJjZSBmZWF0dXJlIGdhdGUgbXVzdCBiZSBlbmFibGVkLiBJZiB0aGUgcHJvdmlzaW9uZXIgb3IgYW4gZXh0ZXJuYWwgY29udHJvbGxlciBjYW4gc3VwcG9ydCB0aGUgc3BlY2lmaWVkIGRhdGEgc291cmNlLCBpdCB3aWxsIGNyZWF0ZSBhIG5ldyB2b2x1bWUgYmFzZWQgb24gdGhlIGNvbnRlbnRzIG9mIHRoZSBzcGVjaWZpZWQgZGF0YSBzb3VyY2UuIiwicHJvcGVydGllcyI6eyJhcGlHcm91cCI6eyJkZXNjcmlwdGlvbiI6IkFQSUdyb3VwIGlzIHRoZSBncm91cCBmb3IgdGhlIHJlc291cmNlIGJlaW5nIHJlZmVyZW5jZWQuIElmIEFQSUdyb3VwIGlzIG5vdCBzcGVjaWZpZWQsIHRoZSBzcGVjaWZpZWQgS2luZCBtdXN0IGJlIGluIHRoZSBjb3JlIEFQSSBncm91cC4gRm9yIGFueSBvdGhlciB0aGlyZC1wYXJ0eSB0eXBlcywgQVBJR3JvdXAgaXMgcmVxdWlyZWQuIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyB0aGUgdHlwZSBvZiByZXNvdXJjZSBiZWluZyByZWZlcmVuY2VkIiwidHlwZSI6InN0cmluZyJ9LCJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBpcyB0aGUgbmFtZSBvZiByZXNvdXJjZSBiZWluZyByZWZlcmVuY2VkIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsia2luZCIsIm5hbWUiXSwidHlwZSI6Im9iamVjdCJ9LCJyZXNvdXJjZXMiOnsiZGVzY3JpcHRpb24iOiJSZXNvdXJjZXMgcmVwcmVzZW50cyB0aGUgbWluaW11bSByZXNvdXJjZXMgdGhlIHZvbHVtZSBzaG91bGQgaGF2ZS4gTW9yZSBpbmZvOiBodHRwczovL2t1YmVybmV0ZXMuaW8vZG9jcy9jb25jZXB0cy9zdG9yYWdlL3BlcnNpc3RlbnQtdm9sdW1lcyNyZXNvdXJjZXMiLCJwcm9wZXJ0aWVzIjp7ImxpbWl0cyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJhbnlPZiI6W3sidHlwZSI6ImludGVnZXIifSx7InR5cGUiOiJzdHJpbmcifV0sInBhdHRlcm4iOiJeKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKChbS01HVFBFXWkpfFtudW1rTUdUUEVdfChbZUVdKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKSk/JCIsIngta3ViZXJuZXRlcy1pbnQtb3Itc3RyaW5nIjp0cnVlfSwiZGVzY3JpcHRpb24iOiJMaW1pdHMgZGVzY3JpYmVzIHRoZSBtYXhpbXVtIGFtb3VudCBvZiBjb21wdXRlIHJlc291cmNlcyBhbGxvd2VkLiBNb3JlIGluZm86IGh0dHBzOi8va3ViZXJuZXRlcy5pby9kb2NzL2NvbmNlcHRzL2NvbmZpZ3VyYXRpb24vbWFuYWdlLWNvbXB1dGUtcmVzb3VyY2VzLWNvbnRhaW5lci8iLCJ0eXBlIjoib2JqZWN0In0sInJlcXVlc3RzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7ImFueU9mIjpbeyJ0eXBlIjoiaW50ZWdlciJ9LHsidHlwZSI6InN0cmluZyJ9XSwicGF0dGVybiI6Il4oXFwrfC0pPygoWzAtOV0rKFxcLlswLTldKik/KXwoXFwuWzAtOV0rKSkoKFtLTUdUUEVdaSl8W251bWtNR1RQRV18KFtlRV0oXFwrfC0pPygoWzAtOV0rKFxcLlswLTldKik/KXwoXFwuWzAtOV0rKSkpKT8kIiwieC1rdWJlcm5ldGVzLWludC1vci1zdHJpbmciOnRydWV9LCJkZXNjcmlwdGlvbiI6IlJlcXVlc3RzIGRlc2NyaWJlcyB0aGUgbWluaW11bSBhbW91bnQgb2YgY29tcHV0ZSByZXNvdXJjZXMgcmVxdWlyZWQuIElmIFJlcXVlc3RzIGlzIG9taXR0ZWQgZm9yIGEgY29udGFpbmVyLCBpdCBkZWZhdWx0cyB0byBMaW1pdHMgaWYgdGhhdCBpcyBleHBsaWNpdGx5IHNwZWNpZmllZCwgb3RoZXJ3aXNlIHRvIGFuIGltcGxlbWVudGF0aW9uLWRlZmluZWQgdmFsdWUuIE1vcmUgaW5mbzogaHR0cHM6Ly9rdWJlcm5ldGVzLmlvL2RvY3MvY29uY2VwdHMvY29uZmlndXJhdGlvbi9tYW5hZ2UtY29tcHV0ZS1yZXNvdXJjZXMtY29udGFpbmVyLyIsInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifSwic2VsZWN0b3IiOnsiZGVzY3JpcHRpb24iOiJBIGxhYmVsIHF1ZXJ5IG92ZXIgdm9sdW1lcyB0byBjb25zaWRlciBmb3IgYmluZGluZy4iLCJwcm9wZXJ0aWVzIjp7Im1hdGNoRXhwcmVzc2lvbnMiOnsiZGVzY3JpcHRpb24iOiJtYXRjaEV4cHJlc3Npb25zIGlzIGEgbGlzdCBvZiBsYWJlbCBzZWxlY3RvciByZXF1aXJlbWVudHMuIFRoZSByZXF1aXJlbWVudHMgYXJlIEFORGVkLiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiQSBsYWJlbCBzZWxlY3RvciByZXF1aXJlbWVudCBpcyBhIHNlbGVjdG9yIHRoYXQgY29udGFpbnMgdmFsdWVzLCBhIGtleSwgYW5kIGFuIG9wZXJhdG9yIHRoYXQgcmVsYXRlcyB0aGUga2V5IGFuZCB2YWx1ZXMuIiwicHJvcGVydGllcyI6eyJrZXkiOnsiZGVzY3JpcHRpb24iOiJrZXkgaXMgdGhlIGxhYmVsIGtleSB0aGF0IHRoZSBzZWxlY3RvciBhcHBsaWVzIHRvLiIsInR5cGUiOiJzdHJpbmcifSwib3BlcmF0b3IiOnsiZGVzY3JpcHRpb24iOiJvcGVyYXRvciByZXByZXNlbnRzIGEga2V5J3MgcmVsYXRpb25zaGlwIHRvIGEgc2V0IG9mIHZhbHVlcy4gVmFsaWQgb3BlcmF0b3JzIGFyZSBJbiwgTm90SW4sIEV4aXN0cyBhbmQgRG9lc05vdEV4aXN0LiIsInR5cGUiOiJzdHJpbmcifSwidmFsdWVzIjp7ImRlc2NyaXB0aW9uIjoidmFsdWVzIGlzIGFuIGFycmF5IG9mIHN0cmluZyB2YWx1ZXMuIElmIHRoZSBvcGVyYXRvciBpcyBJbiBvciBOb3RJbiwgdGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIG5vbi1lbXB0eS4gSWYgdGhlIG9wZXJhdG9yIGlzIEV4aXN0cyBvciBEb2VzTm90RXhpc3QsIHRoZSB2YWx1ZXMgYXJyYXkgbXVzdCBiZSBlbXB0eS4gVGhpcyBhcnJheSBpcyByZXBsYWNlZCBkdXJpbmcgYSBzdHJhdGVnaWMgbWVyZ2UgcGF0Y2guIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkifX0sInJlcXVpcmVkIjpbImtleSIsIm9wZXJhdG9yIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In0sIm1hdGNoTGFiZWxzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7InR5cGUiOiJzdHJpbmcifSwiZGVzY3JpcHRpb24iOiJtYXRjaExhYmVscyBpcyBhIG1hcCBvZiB7a2V5LHZhbHVlfSBwYWlycy4gQSBzaW5nbGUge2tleSx2YWx1ZX0gaW4gdGhlIG1hdGNoTGFiZWxzIG1hcCBpcyBlcXVpdmFsZW50IHRvIGFuIGVsZW1lbnQgb2YgbWF0Y2hFeHByZXNzaW9ucywgd2hvc2Uga2V5IGZpZWxkIGlzIFwia2V5XCIsIHRoZSBvcGVyYXRvciBpcyBcIkluXCIsIGFuZCB0aGUgdmFsdWVzIGFycmF5IGNvbnRhaW5zIG9ubHkgXCJ2YWx1ZVwiLiBUaGUgcmVxdWlyZW1lbnRzIGFyZSBBTkRlZC4iLCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In0sInN0b3JhZ2VDbGFzc05hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSBTdG9yYWdlQ2xhc3MgcmVxdWlyZWQgYnkgdGhlIGNsYWltLiBNb3JlIGluZm86IGh0dHBzOi8va3ViZXJuZXRlcy5pby9kb2NzL2NvbmNlcHRzL3N0b3JhZ2UvcGVyc2lzdGVudC12b2x1bWVzI2NsYXNzLTEiLCJ0eXBlIjoic3RyaW5nIn0sInZvbHVtZU1vZGUiOnsiZGVzY3JpcHRpb24iOiJ2b2x1bWVNb2RlIGRlZmluZXMgd2hhdCB0eXBlIG9mIHZvbHVtZSBpcyByZXF1aXJlZCBieSB0aGUgY2xhaW0uIFZhbHVlIG9mIEZpbGVzeXN0ZW0gaXMgaW1wbGllZCB3aGVuIG5vdCBpbmNsdWRlZCBpbiBjbGFpbSBzcGVjLiIsInR5cGUiOiJzdHJpbmcifSwidm9sdW1lTmFtZSI6eyJkZXNjcmlwdGlvbiI6IlZvbHVtZU5hbWUgaXMgdGhlIGJpbmRpbmcgcmVmZXJlbmNlIHRvIHRoZSBQZXJzaXN0ZW50Vm9sdW1lIGJhY2tpbmcgdGhpcyBjbGFpbS4iLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In19LCJyZXF1aXJlZCI6WyJhdXRoZW50aWNhdGlvbiIsInBhY2thZ2luZyIsInByb21ldGhldXNfY29uZmlnIiwic291cmNlIiwidXBsb2FkIl0sInR5cGUiOiJvYmplY3QifSwic3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoiQ29zdE1hbmFnZW1lbnRNZXRyaWNzQ29uZmlnU3RhdHVzIGRlZmluZXMgdGhlIG9ic2VydmVkIHN0YXRlIG9mIENvc3RNYW5hZ2VtZW50TWV0cmljc0NvbmZpZy4iLCJwcm9wZXJ0aWVzIjp7ImFwaV91cmwiOnsiZGVzY3JpcHRpb24iOiJBUElVUkwgaXMgYSBmaWVsZCBvZiBDb3N0TWFuYWdlbWVudE1ldHJpY3NDb25maWcgdG8gcmVwcmVzZW50IHRoZSB1cmwgb2YgdGhlIEFQSSBlbmRwb2ludCBmb3Igc2VydmljZSBpbnRlcmFjdGlvbi4iLCJ0eXBlIjoic3RyaW5nIn0sImF1dGhlbnRpY2F0aW9uIjp7ImRlc2NyaXB0aW9uIjoiQXV0aGVudGljYXRpb24gaXMgYSBmaWVsZCBvZiBDb3N0TWFuYWdlbWVudE1ldHJpY3NDb25maWcgdG8gcmVwcmVzZW50IHRoZSBhdXRoZW50aWNhdGlvbiBzdGF0dXMuIiwicHJvcGVydGllcyI6eyJjcmVkZW50aWFsc19mb3VuZCI6eyJkZXNjcmlwdGlvbiI6IkF1dGhlbnRpY2F0aW9uQ3JlZGVudGlhbHNGb3VuZCBpcyBhIGZpZWxkIG9mIENvc3RNYW5hZ2VtZW50TWV0cmljc0NvbmZpZyB0byByZXByZXNlbnQgaWYgdXNlZCBmb3IgdXBsb2FkcyB3ZXJlIGZvdW5kLiIsInR5cGUiOiJib29sZWFuIn0sImVycm9yIjp7ImRlc2NyaXB0aW9uIjoiQXV0aEVycm9yTWVzc2FnZSBpcyBhIGZpZWxkIG9mIENvc3RNYW5hZ2VtZW50TWV0cmljc0NvbmZpZyB0byByZXByZXNlbnQgYW4gYGludmFsaWQgY3JlZGVudGlhbHNgIGVycm9yIG1lc3NhZ2UuIiwidHlwZSI6InN0cmluZyJ9LCJsYXN0X2NyZWRlbnRpYWxfdmVyaWZpY2F0aW9uX3RpbWUiOnsiZGVzY3JpcHRpb24iOiJMYXN0VmVyaWZpY2F0aW9uVGltZSBpcyBhIGZpZWxkIG9mIENvc3RNYW5hZ2VtZW50TWV0cmljc0NvbmZpZyB0byByZXByZXNlbnQgdGhlIGxhc3QgdGltZSBjcmVkZW50aWFscyB3ZXJlIHZlcmlmaWVkLiIsImZvcm1hdCI6ImRhdGUtdGltZSIsIm51bGxhYmxlIjp0cnVlLCJ0eXBlIjoic3RyaW5nIn0sInNlY3JldF9uYW1lIjp7ImRlc2NyaXB0aW9uIjoiQXV0aGVudGljYXRpb25TZWNyZXROYW1lIGlzIGEgZmllbGQgb2YgQ29zdE1hbmFnZW1lbnRNZXRyaWNzQ29uZmlnIHRvIHJlcHJlc2VudCB0aGUgc2VjcmV0IHdpdGggdGhlIHVzZXIgYW5kIHBhc3N3b3JkIHVzZWQgZm9yIHVwbG9hZHMuIiwidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjp7ImRlc2NyaXB0aW9uIjoiQXV0aFR5cGUgaXMgYSBmaWVsZCBvZiBDb3N0TWFuYWdlbWVudE1ldHJpY3NDb25maWcgdG8gcmVwcmVzZW50IHRoZSBhdXRoZW50aWNhdGlvbiB0eXBlIHRvIGJlIHVzZWQgYmFzaWMgb3IgdG9rZW4uIiwiZW51bSI6WyJ0b2tlbiIsImJhc2ljIl0sInR5cGUiOiJzdHJpbmcifSwidmFsaWRfYmFzaWNfYXV0aCI6eyJkZXNjcmlwdGlvbiI6IlZhbGlkQmFzaWNBdXRoIGlzIGEgZmllbGQgb2YgQ29zdE1hbmFnZW1lbnRNZXRyaWNzQ29uZmlnIHRvIHJlcHJlc2VudCBpZiB0aGUgZ2l2ZW4gYmFzaWMgYXV0aCBjcmVkZW50aWFscyBhcmUgdmFsaWQuIiwidHlwZSI6ImJvb2xlYW4ifX0sInR5cGUiOiJvYmplY3QifSwiY2x1c3RlcklEIjp7ImRlc2NyaXB0aW9uIjoiQ2x1c3RlcklEIGlzIGEgZmllbGQgb2YgQ29zdE1hbmFnZW1lbnRNZXRyaWNzQ29uZmlnIHRvIHJlcHJlc2VudCB0aGUgY2x1c3RlciBVVUlELiIsInR5cGUiOiJzdHJpbmcifSwiY2x1c3RlclZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJDbHVzdGVyVmVyc2lvbiBpcyBhIGZpZWxkIG9mIENvc3RNYW5hZ2VtZW50TWV0cmljc0NvbmZpZyB0byByZXByZXNlbnQgdGhlIGNsdXN0ZXIgdmVyc2lvbi4iLCJ0eXBlIjoic3RyaW5nIn0sIm9wZXJhdG9yX2NvbW1pdCI6eyJkZXNjcmlwdGlvbiI6Ik9wZXJhdG9yQ29tbWl0IGlzIGEgZmllbGQgb2YgQ29zdE1hbmFnZW1lbnRNZXRyaWNzQ29uZmlnIHRoYXQgc2hvd3MgdGhlIGNvbW1pdCBoYXNoIG9mIHRoZSBvcGVyYXRvci4iLCJ0eXBlIjoic3RyaW5nIn0sInBhY2thZ2luZyI6eyJkZXNjcmlwdGlvbiI6IlBhY2thZ2luZyBpcyBhIGZpZWxkIG9mIENvc3RNYW5hZ2VtZW50TWV0cmljc0NvbmZpZyB0byByZXByZXNlbnQgdGhlIHBhY2thZ2luZyBzdGF0dXMiLCJwcm9wZXJ0aWVzIjp7ImVycm9yIjp7ImRlc2NyaXB0aW9uIjoiUGFja2FnaW5nRXJyb3IgaXMgYSBmaWVsZCBvZiBDb3N0TWFuYWdlbWVudE1ldHJpY3NDb25maWcgdG8gcmVwcmVzZW50IHRoZSBlcnJvciBlbmNvdW50ZXJlZCBwYWNrYWdpbmcgdGhlIHJlcG9ydHMuIiwidHlwZSI6InN0cmluZyJ9LCJsYXN0X3N1Y2Nlc3NmdWxfcGFja2FnaW5nX3RpbWUiOnsiZGVzY3JpcHRpb24iOiJMYXN0U3VjY2Vzc2Z1bFBhY2thZ2luZ1RpbWUgaXMgYSBmaWVsZCBvZiBDb3N0TWFuYWdlbWVudE1ldHJpY3NDb25maWcgdGhhdCBzaG93cyB0aGUgdGltZSBvZiB0aGUgbGFzdCBzdWNjZXNzZnVsIGZpbGUgcGFja2FnaW5nLiIsImZvcm1hdCI6ImRhdGUtdGltZSIsIm51bGxhYmxlIjp0cnVlLCJ0eXBlIjoic3RyaW5nIn0sIm1heF9yZXBvcnRzX3RvX3N0b3JlIjp7ImRlc2NyaXB0aW9uIjoiTWF4UmVwb3J0cyBpcyBhIGZpZWxkIG9mIENvc3RNYW5hZ2VtZW50TWV0cmljc0NvbmZpZyB0byByZXByZXNlbnQgdGhlIG1heGltdW0gbnVtYmVyIG9mIHJlcG9ydHMgdG8gc3RvcmUuIiwiZm9ybWF0IjoiaW50NjQiLCJ0eXBlIjoiaW50ZWdlciJ9LCJtYXhfc2l6ZV9NQiI6eyJkZXNjcmlwdGlvbiI6Ik1heFNpemUgaXMgYSBmaWVsZCBvZiBDb3N0TWFuYWdlbWVudE1ldHJpY3NDb25maWcgdG8gcmVwcmVzZW50IHRoZSBtYXggZmlsZSBzaXplIGluIG1lZ2FieXRlcyB0aGF0IHdpbGwgYmUgY29tcHJlc3NlZCBmb3IgdXBsb2FkIHRvIEluZ3Jlc3MuIiwiZm9ybWF0IjoiaW50NjQiLCJ0eXBlIjoiaW50ZWdlciJ9LCJudW1iZXJfcmVwb3J0c19zdG9yZWQiOnsiZGVzY3JpcHRpb24iOiJSZXBvcnRDb3VudCBpcyBhIGZpZWxkIG9mIENvc3RNYW5hZ2VtZW50TWV0cmljc0NvbmZpZyB0byByZXByZXNlbnQgdGhlIG51bWJlciBvZiByZXBvcnRzIGluIHN0b3JhZ2UuIiwiZm9ybWF0IjoiaW50NjQiLCJ0eXBlIjoiaW50ZWdlciJ9LCJwYWNrYWdlZF9maWxlcyI6eyJkZXNjcmlwdGlvbiI6IlBhY2thZ2VkRmlsZXMgaXMgYSBmaWVsZCBvZiBDb3N0TWFuYWdlbWVudE1ldHJpY3NDb25maWcgdG8gcmVwcmVzZW50IHRoZSBsaXN0IG9mIGZpbGUgcGFja2FnZXMgaW4gc3RvcmFnZS4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9fSwidHlwZSI6Im9iamVjdCJ9LCJwZXJzaXN0ZW50X3ZvbHVtZV9jbGFpbSI6eyJkZXNjcmlwdGlvbiI6IlBlcnNpc3RlbnRWb2x1bWVDbGFpbSBpcyBhIGZpZWxkIG9mIENvc3RNYW5hZ2VtZW50TWV0cmljc0NvbmZpZyB0byByZXByZXNlbnQgYSBQVkMuIiwicHJvcGVydGllcyI6eyJhcGlWZXJzaW9uIjp7ImRlc2NyaXB0aW9uIjoiQVBJVmVyc2lvbiBkZWZpbmVzIHRoZSB2ZXJzaW9uZWQgc2NoZW1hIG9mIHRoaXMgcmVwcmVzZW50YXRpb24gb2YgYW4gb2JqZWN0LiBTZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmQgbWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3Jlc291cmNlcyIsInR5cGUiOiJzdHJpbmcifSwia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgaXMgYSBzdHJpbmcgdmFsdWUgcmVwcmVzZW50aW5nIHRoZSBSRVNUIHJlc291cmNlIHRoaXMgb2JqZWN0IHJlcHJlc2VudHMuIFNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLiBDYW5ub3QgYmUgdXBkYXRlZC4gSW4gQ2FtZWxDYXNlLiBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJkZXNjcmlwdGlvbiI6IkVtYmVkZGVkTWV0YWRhdGEgY29udGFpbnMgbWV0YWRhdGEgcmVsZXZhbnQgdG8gYW4gRW1iZWRkZWRSZXNvdXJjZS4iLCJwcm9wZXJ0aWVzIjp7ImFubm90YXRpb25zIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7InR5cGUiOiJzdHJpbmcifSwiZGVzY3JpcHRpb24iOiJBbm5vdGF0aW9ucyBpcyBhbiB1bnN0cnVjdHVyZWQga2V5IHZhbHVlIG1hcCBzdG9yZWQgd2l0aCBhIHJlc291cmNlIHRoYXQgbWF5IGJlIHNldCBieSBleHRlcm5hbCB0b29scyB0byBzdG9yZSBhbmQgcmV0cmlldmUgYXJiaXRyYXJ5IG1ldGFkYXRhLiBUaGV5IGFyZSBub3QgcXVlcnlhYmxlIGFuZCBzaG91bGQgYmUgcHJlc2VydmVkIHdoZW4gbW9kaWZ5aW5nIG9iamVjdHMuIE1vcmUgaW5mbzogaHR0cDovL2t1YmVybmV0ZXMuaW8vZG9jcy91c2VyLWd1aWRlL2Fubm90YXRpb25zIiwidHlwZSI6Im9iamVjdCJ9LCJsYWJlbHMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsidHlwZSI6InN0cmluZyJ9LCJkZXNjcmlwdGlvbiI6Ik1hcCBvZiBzdHJpbmcga2V5cyBhbmQgdmFsdWVzIHRoYXQgY2FuIGJlIHVzZWQgdG8gb3JnYW5pemUgYW5kIGNhdGVnb3JpemUgKHNjb3BlIGFuZCBzZWxlY3QpIG9iamVjdHMuIE1heSBtYXRjaCBzZWxlY3RvcnMgb2YgcmVwbGljYXRpb24gY29udHJvbGxlcnMgYW5kIHNlcnZpY2VzLiBNb3JlIGluZm86IGh0dHA6Ly9rdWJlcm5ldGVzLmlvL2RvY3MvdXNlci1ndWlkZS9sYWJlbHMiLCJ0eXBlIjoib2JqZWN0In0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG11c3QgYmUgdW5pcXVlIHdpdGhpbiBhIG5hbWVzcGFjZS4gSXMgcmVxdWlyZWQgd2hlbiBjcmVhdGluZyByZXNvdXJjZXMsIGFsdGhvdWdoIHNvbWUgcmVzb3VyY2VzIG1heSBhbGxvdyBhIGNsaWVudCB0byByZXF1ZXN0IHRoZSBnZW5lcmF0aW9uIG9mIGFuIGFwcHJvcHJpYXRlIG5hbWUgYXV0b21hdGljYWxseS4gTmFtZSBpcyBwcmltYXJpbHkgaW50ZW5kZWQgZm9yIGNyZWF0aW9uIGlkZW1wb3RlbmNlIGFuZCBjb25maWd1cmF0aW9uIGRlZmluaXRpb24uIENhbm5vdCBiZSB1cGRhdGVkLiBNb3JlIGluZm86IGh0dHA6Ly9rdWJlcm5ldGVzLmlvL2RvY3MvdXNlci1ndWlkZS9pZGVudGlmaWVycyNuYW1lcyIsInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwic3BlYyI6eyJkZXNjcmlwdGlvbiI6IlNwZWMgZGVmaW5lcyB0aGUgZGVzaXJlZCBjaGFyYWN0ZXJpc3RpY3Mgb2YgYSB2b2x1bWUgcmVxdWVzdGVkIGJ5IGEgcG9kIGF1dGhvci4gTW9yZSBpbmZvOiBodHRwczovL2t1YmVybmV0ZXMuaW8vZG9jcy9jb25jZXB0cy9zdG9yYWdlL3BlcnNpc3RlbnQtdm9sdW1lcyNwZXJzaXN0ZW50dm9sdW1lY2xhaW1zIiwicHJvcGVydGllcyI6eyJhY2Nlc3NNb2RlcyI6eyJkZXNjcmlwdGlvbiI6IkFjY2Vzc01vZGVzIGNvbnRhaW5zIHRoZSBkZXNpcmVkIGFjY2VzcyBtb2RlcyB0aGUgdm9sdW1lIHNob3VsZCBoYXZlLiBNb3JlIGluZm86IGh0dHBzOi8va3ViZXJuZXRlcy5pby9kb2NzL2NvbmNlcHRzL3N0b3JhZ2UvcGVyc2lzdGVudC12b2x1bWVzI2FjY2Vzcy1tb2Rlcy0xIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkifSwiZGF0YVNvdXJjZSI6eyJkZXNjcmlwdGlvbiI6IlRoaXMgZmllbGQgY2FuIGJlIHVzZWQgdG8gc3BlY2lmeSBlaXRoZXI6ICogQW4gZXhpc3RpbmcgVm9sdW1lU25hcHNob3Qgb2JqZWN0IChzbmFwc2hvdC5zdG9yYWdlLms4cy5pby9Wb2x1bWVTbmFwc2hvdCkgKiBBbiBleGlzdGluZyBQVkMgKFBlcnNpc3RlbnRWb2x1bWVDbGFpbSkgKiBBbiBleGlzdGluZyBjdXN0b20gcmVzb3VyY2UgdGhhdCBpbXBsZW1lbnRzIGRhdGEgcG9wdWxhdGlvbiAoQWxwaGEpIEluIG9yZGVyIHRvIHVzZSBjdXN0b20gcmVzb3VyY2UgdHlwZXMgdGhhdCBpbXBsZW1lbnQgZGF0YSBwb3B1bGF0aW9uLCB0aGUgQW55Vm9sdW1lRGF0YVNvdXJjZSBmZWF0dXJlIGdhdGUgbXVzdCBiZSBlbmFibGVkLiBJZiB0aGUgcHJvdmlzaW9uZXIgb3IgYW4gZXh0ZXJuYWwgY29udHJvbGxlciBjYW4gc3VwcG9ydCB0aGUgc3BlY2lmaWVkIGRhdGEgc291cmNlLCBpdCB3aWxsIGNyZWF0ZSBhIG5ldyB2b2x1bWUgYmFzZWQgb24gdGhlIGNvbnRlbnRzIG9mIHRoZSBzcGVjaWZpZWQgZGF0YSBzb3VyY2UuIiwicHJvcGVydGllcyI6eyJhcGlHcm91cCI6eyJkZXNjcmlwdGlvbiI6IkFQSUdyb3VwIGlzIHRoZSBncm91cCBmb3IgdGhlIHJlc291cmNlIGJlaW5nIHJlZmVyZW5jZWQuIElmIEFQSUdyb3VwIGlzIG5vdCBzcGVjaWZpZWQsIHRoZSBzcGVjaWZpZWQgS2luZCBtdXN0IGJlIGluIHRoZSBjb3JlIEFQSSBncm91cC4gRm9yIGFueSBvdGhlciB0aGlyZC1wYXJ0eSB0eXBlcywgQVBJR3JvdXAgaXMgcmVxdWlyZWQuIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyB0aGUgdHlwZSBvZiByZXNvdXJjZSBiZWluZyByZWZlcmVuY2VkIiwidHlwZSI6InN0cmluZyJ9LCJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBpcyB0aGUgbmFtZSBvZiByZXNvdXJjZSBiZWluZyByZWZlcmVuY2VkIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsia2luZCIsIm5hbWUiXSwidHlwZSI6Im9iamVjdCJ9LCJyZXNvdXJjZXMiOnsiZGVzY3JpcHRpb24iOiJSZXNvdXJjZXMgcmVwcmVzZW50cyB0aGUgbWluaW11bSByZXNvdXJjZXMgdGhlIHZvbHVtZSBzaG91bGQgaGF2ZS4gTW9yZSBpbmZvOiBodHRwczovL2t1YmVybmV0ZXMuaW8vZG9jcy9jb25jZXB0cy9zdG9yYWdlL3BlcnNpc3RlbnQtdm9sdW1lcyNyZXNvdXJjZXMiLCJwcm9wZXJ0aWVzIjp7ImxpbWl0cyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJhbnlPZiI6W3sidHlwZSI6ImludGVnZXIifSx7InR5cGUiOiJzdHJpbmcifV0sInBhdHRlcm4iOiJeKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKChbS01HVFBFXWkpfFtudW1rTUdUUEVdfChbZUVdKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKSk/JCIsIngta3ViZXJuZXRlcy1pbnQtb3Itc3RyaW5nIjp0cnVlfSwiZGVzY3JpcHRpb24iOiJMaW1pdHMgZGVzY3JpYmVzIHRoZSBtYXhpbXVtIGFtb3VudCBvZiBjb21wdXRlIHJlc291cmNlcyBhbGxvd2VkLiBNb3JlIGluZm86IGh0dHBzOi8va3ViZXJuZXRlcy5pby9kb2NzL2NvbmNlcHRzL2NvbmZpZ3VyYXRpb24vbWFuYWdlLWNvbXB1dGUtcmVzb3VyY2VzLWNvbnRhaW5lci8iLCJ0eXBlIjoib2JqZWN0In0sInJlcXVlc3RzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7ImFueU9mIjpbeyJ0eXBlIjoiaW50ZWdlciJ9LHsidHlwZSI6InN0cmluZyJ9XSwicGF0dGVybiI6Il4oXFwrfC0pPygoWzAtOV0rKFxcLlswLTldKik/KXwoXFwuWzAtOV0rKSkoKFtLTUdUUEVdaSl8W251bWtNR1RQRV18KFtlRV0oXFwrfC0pPygoWzAtOV0rKFxcLlswLTldKik/KXwoXFwuWzAtOV0rKSkpKT8kIiwieC1rdWJlcm5ldGVzLWludC1vci1zdHJpbmciOnRydWV9LCJkZXNjcmlwdGlvbiI6IlJlcXVlc3RzIGRlc2NyaWJlcyB0aGUgbWluaW11bSBhbW91bnQgb2YgY29tcHV0ZSByZXNvdXJjZXMgcmVxdWlyZWQuIElmIFJlcXVlc3RzIGlzIG9taXR0ZWQgZm9yIGEgY29udGFpbmVyLCBpdCBkZWZhdWx0cyB0byBMaW1pdHMgaWYgdGhhdCBpcyBleHBsaWNpdGx5IHNwZWNpZmllZCwgb3RoZXJ3aXNlIHRvIGFuIGltcGxlbWVudGF0aW9uLWRlZmluZWQgdmFsdWUuIE1vcmUgaW5mbzogaHR0cHM6Ly9rdWJlcm5ldGVzLmlvL2RvY3MvY29uY2VwdHMvY29uZmlndXJhdGlvbi9tYW5hZ2UtY29tcHV0ZS1yZXNvdXJjZXMtY29udGFpbmVyLyIsInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifSwic2VsZWN0b3IiOnsiZGVzY3JpcHRpb24iOiJBIGxhYmVsIHF1ZXJ5IG92ZXIgdm9sdW1lcyB0byBjb25zaWRlciBmb3IgYmluZGluZy4iLCJwcm9wZXJ0aWVzIjp7Im1hdGNoRXhwcmVzc2lvbnMiOnsiZGVzY3JpcHRpb24iOiJtYXRjaEV4cHJlc3Npb25zIGlzIGEgbGlzdCBvZiBsYWJlbCBzZWxlY3RvciByZXF1aXJlbWVudHMuIFRoZSByZXF1aXJlbWVudHMgYXJlIEFORGVkLiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiQSBsYWJlbCBzZWxlY3RvciByZXF1aXJlbWVudCBpcyBhIHNlbGVjdG9yIHRoYXQgY29udGFpbnMgdmFsdWVzLCBhIGtleSwgYW5kIGFuIG9wZXJhdG9yIHRoYXQgcmVsYXRlcyB0aGUga2V5IGFuZCB2YWx1ZXMuIiwicHJvcGVydGllcyI6eyJrZXkiOnsiZGVzY3JpcHRpb24iOiJrZXkgaXMgdGhlIGxhYmVsIGtleSB0aGF0IHRoZSBzZWxlY3RvciBhcHBsaWVzIHRvLiIsInR5cGUiOiJzdHJpbmcifSwib3BlcmF0b3IiOnsiZGVzY3JpcHRpb24iOiJvcGVyYXRvciByZXByZXNlbnRzIGEga2V5J3MgcmVsYXRpb25zaGlwIHRvIGEgc2V0IG9mIHZhbHVlcy4gVmFsaWQgb3BlcmF0b3JzIGFyZSBJbiwgTm90SW4sIEV4aXN0cyBhbmQgRG9lc05vdEV4aXN0LiIsInR5cGUiOiJzdHJpbmcifSwidmFsdWVzIjp7ImRlc2NyaXB0aW9uIjoidmFsdWVzIGlzIGFuIGFycmF5IG9mIHN0cmluZyB2YWx1ZXMuIElmIHRoZSBvcGVyYXRvciBpcyBJbiBvciBOb3RJbiwgdGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIG5vbi1lbXB0eS4gSWYgdGhlIG9wZXJhdG9yIGlzIEV4aXN0cyBvciBEb2VzTm90RXhpc3QsIHRoZSB2YWx1ZXMgYXJyYXkgbXVzdCBiZSBlbXB0eS4gVGhpcyBhcnJheSBpcyByZXBsYWNlZCBkdXJpbmcgYSBzdHJhdGVnaWMgbWVyZ2UgcGF0Y2guIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkifX0sInJlcXVpcmVkIjpbImtleSIsIm9wZXJhdG9yIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In0sIm1hdGNoTGFiZWxzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7InR5cGUiOiJzdHJpbmcifSwiZGVzY3JpcHRpb24iOiJtYXRjaExhYmVscyBpcyBhIG1hcCBvZiB7a2V5LHZhbHVlfSBwYWlycy4gQSBzaW5nbGUge2tleSx2YWx1ZX0gaW4gdGhlIG1hdGNoTGFiZWxzIG1hcCBpcyBlcXVpdmFsZW50IHRvIGFuIGVsZW1lbnQgb2YgbWF0Y2hFeHByZXNzaW9ucywgd2hvc2Uga2V5IGZpZWxkIGlzIFwia2V5XCIsIHRoZSBvcGVyYXRvciBpcyBcIkluXCIsIGFuZCB0aGUgdmFsdWVzIGFycmF5IGNvbnRhaW5zIG9ubHkgXCJ2YWx1ZVwiLiBUaGUgcmVxdWlyZW1lbnRzIGFyZSBBTkRlZC4iLCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In0sInN0b3JhZ2VDbGFzc05hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSBTdG9yYWdlQ2xhc3MgcmVxdWlyZWQgYnkgdGhlIGNsYWltLiBNb3JlIGluZm86IGh0dHBzOi8va3ViZXJuZXRlcy5pby9kb2NzL2NvbmNlcHRzL3N0b3JhZ2UvcGVyc2lzdGVudC12b2x1bWVzI2NsYXNzLTEiLCJ0eXBlIjoic3RyaW5nIn0sInZvbHVtZU1vZGUiOnsiZGVzY3JpcHRpb24iOiJ2b2x1bWVNb2RlIGRlZmluZXMgd2hhdCB0eXBlIG9mIHZvbHVtZSBpcyByZXF1aXJlZCBieSB0aGUgY2xhaW0uIFZhbHVlIG9mIEZpbGVzeXN0ZW0gaXMgaW1wbGllZCB3aGVuIG5vdCBpbmNsdWRlZCBpbiBjbGFpbSBzcGVjLiIsInR5cGUiOiJzdHJpbmcifSwidm9sdW1lTmFtZSI6eyJkZXNjcmlwdGlvbiI6IlZvbHVtZU5hbWUgaXMgdGhlIGJpbmRpbmcgcmVmZXJlbmNlIHRvIHRoZSBQZXJzaXN0ZW50Vm9sdW1lIGJhY2tpbmcgdGhpcyBjbGFpbS4iLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In0sInByb21ldGhldXMiOnsiZGVzY3JpcHRpb24iOiJQcm9tZXRoZXVzIHJlcHJlc2VudHMgdGhlIHN0YXR1cyBvZiBwcmVtZXRoZXVzIHF1ZXJpZXMuIiwicHJvcGVydGllcyI6eyJjb25maWd1cmF0aW9uX2Vycm9yIjp7ImRlc2NyaXB0aW9uIjoiQ29uZmlnRXJyb3IgaXMgYSBmaWVsZCBvZiBDb3N0TWFuYWdlbWVudE1ldHJpY3NDb25maWdTdGF0dXMgdG8gcmVwcmVzZW50IGVycm9ycyBkdXJpbmcgcHJvbWV0aGV1cyBjb25maWd1cmF0aW9uLiIsInR5cGUiOiJzdHJpbmcifSwiY29udGV4dF90aW1lb3V0Ijp7ImRlc2NyaXB0aW9uIjoiQ29udGV4dFRpbWVvdXQgaXMgYSBmaWVsZCBvZiBDb3N0TWFuYWdlbWVudE1ldHJpY3NDb25maWdTdGF0ZSB0byByZXByZXNlbnQgaG93IGxvbmcgYSBxdWVyeSB0byBwcm9tZXRoZXVzIHNob3VsZCBydW4gaW4gc2Vjb25kcyBiZWZvcmUgdGltaW5nIG91dC4iLCJmb3JtYXQiOiJpbnQ2NCIsInR5cGUiOiJpbnRlZ2VyIn0sImxhc3RfcXVlcnlfc3RhcnRfdGltZSI6eyJkZXNjcmlwdGlvbiI6Ikxhc3RRdWVyeVN0YXJ0VGltZSBpcyBhIGZpZWxkIG9mIENvc3RNYW5hZ2VtZW50TWV0cmljc0NvbmZpZ1N0YXR1cyB0byByZXByZXNlbnQgdGhlIGxhc3QgdGltZSBxdWVyaWVzIHdlcmUgc3RhcnRlZC4iLCJmb3JtYXQiOiJkYXRlLXRpbWUiLCJudWxsYWJsZSI6dHJ1ZSwidHlwZSI6InN0cmluZyJ9LCJsYXN0X3F1ZXJ5X3N1Y2Nlc3NfdGltZSI6eyJkZXNjcmlwdGlvbiI6Ikxhc3RRdWVyeVN1Y2Nlc3NUaW1lIGlzIGEgZmllbGQgb2YgQ29zdE1hbmFnZW1lbnRNZXRyaWNzQ29uZmlnU3RhdHVzIHRvIHJlcHJlc2VudCB0aGUgbGFzdCB0aW1lIHF1ZXJpZXMgd2VyZSBzdWNjZXNzZnVsLiIsImZvcm1hdCI6ImRhdGUtdGltZSIsIm51bGxhYmxlIjp0cnVlLCJ0eXBlIjoic3RyaW5nIn0sInByb21ldGhldXNfY29uZmlndXJlZCI6eyJkZXNjcmlwdGlvbiI6IlByb21ldGhldXNDb25maWd1cmVkIGlzIGEgZmllbGQgb2YgQ29zdE1hbmFnZW1lbnRNZXRyaWNzQ29uZmlnU3RhdHVzIHRvIHJlcHJlc2VudCBpZiB0aGUgb3BlcmF0b3IgaXMgY29uZmlndXJlZCB0byBjb25uZWN0IHRvIHByb21ldGhldXMuIiwidHlwZSI6ImJvb2xlYW4ifSwicHJvbWV0aGV1c19jb25uZWN0ZWQiOnsiZGVzY3JpcHRpb24iOiJQcm9tZXRoZXVzQ29ubmVjdGVkIGlzIGEgZmllbGQgb2YgQ29zdE1hbmFnZW1lbnRNZXRyaWNzQ29uZmlnU3RhdHVzIHRvIHJlcHJlc2VudCBpZiBwcm9tZXRoZXVzIGNhbiBiZSBxdWVyaWVkLiIsInR5cGUiOiJib29sZWFuIn0sInByb21ldGhldXNfY29ubmVjdGlvbl9lcnJvciI6eyJkZXNjcmlwdGlvbiI6IkNvbm5lY3Rpb25FcnJvciBpcyBhIGZpZWxkIG9mIENvc3RNYW5hZ2VtZW50TWV0cmljc0NvbmZpZ1N0YXR1cyB0byByZXByZXNlbnQgZXJyb3JzIGR1cmluZyBwcm9tZXRoZXVzIHRlc3QgcXVlcnkuIiwidHlwZSI6InN0cmluZyJ9LCJzZXJ2aWNlX2FkZHJlc3MiOnsiZGVzY3JpcHRpb24iOiJTdmNBZGRyZXNzIGlzIHRoZSBpbnRlcm5hbCB0aGFub3MtcXVlcmllciBhZGRyZXNzLiIsInR5cGUiOiJzdHJpbmcifSwic2tpcF90bHNfdmVyaWZpY2F0aW9uIjp7ImRlc2NyaXB0aW9uIjoiU2tpcFRMU1ZlcmlmaWNhdGlvbiBpcyBhIGZpZWxkIG9mIENvc3RNYW5hZ2VtZW50TWV0cmljc0NvbmZpZ1N0YXR1cyB0byByZXByZXNlbnQgaWYgdGhlIHRoYW5vcy1xdWVyaWVyIGVuZHBvaW50IG11c3QgYmUgY2VydGlmaWNhdGUgdmFsaWRhdGVkLiIsInR5cGUiOiJib29sZWFuIn19LCJyZXF1aXJlZCI6WyJwcm9tZXRoZXVzX2NvbmZpZ3VyZWQiLCJwcm9tZXRoZXVzX2Nvbm5lY3RlZCJdLCJ0eXBlIjoib2JqZWN0In0sInJlcG9ydHMiOnsiZGVzY3JpcHRpb24iOiJSZXBvcnRzIHJlcHJlc2VudHMgdGhlIHN0YXR1cyBvZiByZXBvcnQgZ2VuZXJhdGlvbi4iLCJwcm9wZXJ0aWVzIjp7ImRhdGFfY29sbGVjdGVkIjp7ImRlc2NyaXB0aW9uIjoiRGF0YUNvbGxlY3RlZCBpcyBhIGZpZWxkIG9mIENvc3RNYW5hZ2VtZW50TWV0cmljc0NvbmZpZ1N0YXR1cyB0byByZXByZXNlbnQgd2hldGhlciBvciBub3QgZGF0YSB3YXMgY29sbGVjdGVkIGZvciB0aGUgbGFzdCBxdWVyeS4iLCJ0eXBlIjoiYm9vbGVhbiJ9LCJkYXRhX2NvbGxlY3Rpb25fbWVzc2FnZSI6eyJkZXNjcmlwdGlvbiI6IkRhdGFDb2xsZWN0aW9uTWVzc2FnZSBpcyBhIGZpZWxkIG9mIENvc3RNYW5hZ2VtZW50TWV0cmljc0NvbmZpZ1N0YXR1cyB0byByZXByZXNlbnQgYSBtZXNzYWdlIGFzc29jaWF0ZWQgd2l0aCB0aGUgZGF0YV9jb2xsZWN0ZWQgc3RhdHVzLiIsInR5cGUiOiJzdHJpbmcifSwibGFzdF9ob3VyX3F1ZXJpZWQiOnsiZGVzY3JpcHRpb24iOiJMYXN0SG91clF1ZXJpZWQgaXMgYSBmaWVsZCBvZiBDb3N0TWFuYWdlbWVudE1ldHJpY3NDb25maWdTdGF0dXMgdG8gcmVwcmVzZW50IHRoZSB0aW1lIHJhbmdlIGZvciB3aGljaCBtZXRyaWNzIHdlcmUgbGFzdCBxdWVyaWVkLiIsInR5cGUiOiJzdHJpbmcifSwicmVwb3J0X21vbnRoIjp7ImRlc2NyaXB0aW9uIjoiUmVwb3J0TW9udGggaXMgYSBmaWVsZCBvZiBDb3N0TWFuYWdlbWVudE1ldHJpY3NDb25maWdTdGF0dXMgdG8gcmVwcmVzZW50IHRoZSBtb250aCBmb3Igd2hpY2ggcmVwb3J0cyBhcmUgYmVpbmcgZ2VuZXJhdGVkLiIsInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwic291cmNlIjp7ImRlc2NyaXB0aW9uIjoiU291cmNlIGlzIGEgZmllbGQgb2YgQ29zdE1hbmFnZW1lbnRNZXRyaWNzQ29uZmlnIHRvIHJlcHJlc2VudCB0aGUgb2JzZXJ2ZWQgc3RhdGUgb2YgdGhlIHNvdXJjZSBvbiBjbG91ZC5yZWRoYXQuY29tLiIsInByb3BlcnRpZXMiOnsiY2hlY2tfY3ljbGUiOnsiZGVzY3JpcHRpb24iOiJDaGVja0N5Y2xlIGlzIGEgZmllbGQgb2YgQ29zdE1hbmFnZW1lbnRNZXRyaWNzQ29uZmlnIHRvIHJlcHJlc2VudCB0aGUgbnVtYmVyIG9mIG1pbnV0ZXMgYmV0d2VlbiBlYWNoIHNvdXJjZSBjaGVjayBzY2hlZHVsZS4gVGhlIGRlZmF1bHQgaXMgMTQ0MCBtaW4gKDI0IGhvdXJzKS4iLCJmb3JtYXQiOiJpbnQ2NCIsInR5cGUiOiJpbnRlZ2VyIn0sImNyZWF0ZV9zb3VyY2UiOnsiZGVzY3JpcHRpb24iOiJDcmVhdGVTb3VyY2UgaXMgYSBmaWVsZCBvZiBDb3N0TWFuYWdlbWVudE1ldHJpY3NDb25maWdTdGF0dXMgdG8gcmVwcmVzZW50IGlmIHRoZSBzb3VyY2Ugc2hvdWxkIGJlIGNyZWF0ZWQgaWYgbm90IGZvdW5kLiBBIHNvdXJjZSB3aWxsIG5vdCBiZSBjcmVhdGVkIGlmIHVwbG9hZF90b2dnbGUgaXMgYGZhbHNlYC4iLCJ0eXBlIjoiYm9vbGVhbiJ9LCJlcnJvciI6eyJkZXNjcmlwdGlvbiI6IlNvdXJjZUVycm9yIGlzIGEgZmllbGQgb2YgQ29zdE1hbmFnZW1lbnRNZXRyaWNzQ29uZmlnU3RhdHVzIHRvIHJlcHJlc2VudCB0aGUgZXJyb3IgZW5jb3VudGVyZWQgY3JlYXRpbmcgdGhlIHNvdXJjZS4iLCJ0eXBlIjoic3RyaW5nIn0sImxhc3RfY2hlY2tfdGltZSI6eyJkZXNjcmlwdGlvbiI6Ikxhc3RTb3VyY2VDaGVja1RpbWUgaXMgYSBmaWVsZCBvZiBDb3N0TWFuYWdlbWVudE1ldHJpY3NDb25maWcgdGhhdCBzaG93cyB0aGUgdGltZSB0aGF0IHRoZSBsYXN0IGNoZWNrIHdhcyBhdHRlbXB0ZWQuIiwiZm9ybWF0IjoiZGF0ZS10aW1lIiwibnVsbGFibGUiOnRydWUsInR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6IlNvdXJjZU5hbWUgaXMgYSBmaWVsZCBvZiBDb3N0TWFuYWdlbWVudE1ldHJpY3NDb25maWdTdGF0dXMgdG8gcmVwcmVzZW50IHRoZSBzb3VyY2UgbmFtZSBvbiBjbG91ZC5yZWRoYXQuY29tLiIsInR5cGUiOiJzdHJpbmcifSwic291cmNlX2RlZmluZWQiOnsiZGVzY3JpcHRpb24iOiJTb3VyY2VEZWZpbmVkIGlzIGEgZmllbGQgb2YgQ29zdE1hbmFnZW1lbnRNZXRyaWNzQ29uZmlnU3RhdHVzIHRvIHJlcHJlc2VudCBpZiB0aGUgc291cmNlIGV4aXN0cyBhcyBkZWZpbmVkIG9uIGNsb3VkLnJlZGhhdC5jb20uIiwidHlwZSI6ImJvb2xlYW4ifSwic291cmNlc19wYXRoIjp7ImRlc2NyaXB0aW9uIjoiU291cmNlc0FQSVBhdGggaXMgYSBmaWVsZCBvZiBDb3N0TWFuYWdlbWVudE1ldHJpY3NDb25maWcgdG8gcmVwcmVzZW50IHRoZSBwYXRoIG9mIHRoZSBTb3VyY2VzIEFQSSBzZXJ2aWNlLiIsInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwic3RvcmFnZSI6eyJkZXNjcmlwdGlvbiI6IlN0b3JhZ2UgaXMgYSBmaWVsZCIsInByb3BlcnRpZXMiOnsidm9sdW1lX21vdW50ZWQiOnsiZGVzY3JpcHRpb24iOiJWb2x1bWVNb3VudGVkIGlzIGEgYm9vbCB0byBpbmRpY2F0ZSBpZiBzdG9yYWdlIHZvbHVtZSB3YXMgbW91bnRlZC4iLCJ0eXBlIjoiYm9vbGVhbiJ9LCJ2b2x1bWVfdHlwZSI6eyJkZXNjcmlwdGlvbiI6IlZvbHVtZVR5cGUgaXMgdGhlIHN0cmluZyByZXByZXNlbnRhdGlvbiBvZiB0aGUgdm9sdW1lIHR5cGUuIiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJ1cGxvYWQiOnsiZGVzY3JpcHRpb24iOiJVcGxvYWQgaXMgYSBmaWVsZCBvZiBDb3N0TWFuYWdlbWVudE1ldHJpY3NDb25maWcgdG8gcmVwcmVzZW50IHRoZSB1cGxvYWQgb2JqZWN0LiIsInByb3BlcnRpZXMiOnsiZXJyb3IiOnsiZGVzY3JpcHRpb24iOiJVcGxvYWRFcnJvciBpcyBhIGZpZWxkIG9mIENvc3RNYW5hZ2VtZW50TWV0cmljc0NvbmZpZ1N0YXR1cyB0byByZXByZXNlbnQgdGhlIGVycm9yIGVuY291bnRlcmVkIHVwbG9hZGluZyByZXBvcnRzLiIsInR5cGUiOiJzdHJpbmcifSwiaW5ncmVzc19wYXRoIjp7ImRlc2NyaXB0aW9uIjoiSW5ncmVzc0FQSVBhdGggaXMgYSBmaWVsZCBvZiBDb3N0TWFuYWdlbWVudE1ldHJpY3NDb25maWcgdG8gcmVwcmVzZW50IHRoZSBwYXRoIG9mIHRoZSBJbmdyZXNzIEFQSSBzZXJ2aWNlLiIsInR5cGUiOiJzdHJpbmcifSwibGFzdF9wYXlsb2FkX2ZpbGVzIjp7ImRlc2NyaXB0aW9uIjoiTGFzdFBheWxvYWRGaWxlcyBpcyBhIGZpZWxkIG9mIENvc3RNYW5hZ2VtZW50TWV0cmljc0NvbmZpZyB0byByZXByZXNlbnQgdGhlIGxpc3Qgb2YgZmlsZXMgaW4gdGhlIGxhc3QgcGF5bG9hZCB0aGF0IHdhcyBzZW50LiIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5In0sImxhc3RfcGF5bG9hZF9tYW5pZmVzdF9pZCI6eyJkZXNjcmlwdGlvbiI6Ikxhc3RQYXlsb2FkTWFuaWZlc3QgaXMgYSBmaWVsZCBvZiBDb3N0TWFuYWdlbWVudE1ldHJpY3NDb25maWcgdGhhdCBzaG93cyB0aGUgbWFuaWZlc3RJRCBvZiB0aGUgbGFzdCBwYXlsb2FkLiIsInR5cGUiOiJzdHJpbmcifSwibGFzdF9wYXlsb2FkX25hbWUiOnsiZGVzY3JpcHRpb24iOiJMYXN0UGF5bG9hZE5hbWUgaXMgYSBmaWVsZCBvZiBDb3N0TWFuYWdlbWVudE1ldHJpY3NDb25maWcgdGhhdCBzaG93cyB0aGUgbmFtZSBvZiB0aGUgbGFzdCBwYXlsb2FkIGZpbGUuIiwidHlwZSI6InN0cmluZyJ9LCJsYXN0X3BheWxvYWRfcmVxdWVzdF9pZCI6eyJkZXNjcmlwdGlvbiI6Ikxhc3RQYXlsb2FkUmVxdWVzdElEIGlzIGEgZmllbGQgb2YgQ29zdE1hbmFnZW1lbnRNZXRyaWNzQ29uZmlnIHRoYXQgc2hvd3MgdGhlIGluc2lnaHRzIHJlcXVlc3QgaWQgb2YgdGhlIGxhc3QgcGF5bG9hZC4iLCJ0eXBlIjoic3RyaW5nIn0sImxhc3Rfc3VjY2Vzc2Z1bF91cGxvYWRfdGltZSI6eyJkZXNjcmlwdGlvbiI6Ikxhc3RTdWNjZXNzZnVsVXBsb2FkVGltZSBpcyBhIGZpZWxkIG9mIENvc3RNYW5hZ2VtZW50TWV0cmljc0NvbmZpZyB0aGF0IHNob3dzIHRoZSB0aW1lIG9mIHRoZSBsYXN0IHN1Y2Nlc3NmdWwgdXBsb2FkLiIsImZvcm1hdCI6ImRhdGUtdGltZSIsIm51bGxhYmxlIjp0cnVlLCJ0eXBlIjoic3RyaW5nIn0sImxhc3RfdXBsb2FkX3N0YXR1cyI6eyJkZXNjcmlwdGlvbiI6Ikxhc3RVcGxvYWRTdGF0dXMgaXMgYSBmaWVsZCBvZiBDb3N0TWFuYWdlbWVudE1ldHJpY3NDb25maWcgdGhhdCBzaG93cyB0aGUgaHR0cCBzdGF0dXMgb2YgdGhlIGxhc3QgdXBsb2FkLiIsInR5cGUiOiJzdHJpbmcifSwidXBsb2FkIjp7ImRlc2NyaXB0aW9uIjoiVXBsb2FkVG9nZ2xlIGlzIGEgZmllbGQgb2YgQ29zdE1hbmFnZW1lbnRNZXRyaWNzQ29uZmlnIHRvIHJlcHJlc2VudCBpZiB0aGUgb3BlcmF0b3Igc2hvdWxkIHVwbG9hZCB0byBjbG91ZC5yZWRoYXQuY29tLiBUaGUgZGVmYXVsdCBpcyB0cnVlIiwidHlwZSI6ImJvb2xlYW4ifSwidXBsb2FkX2N5Y2xlIjp7ImRlc2NyaXB0aW9uIjoiVXBsb2FkQ3ljbGUgaXMgYSBmaWVsZCBvZiBDb3N0TWFuYWdlbWVudE1ldHJpY3NDb25maWcgdG8gcmVwcmVzZW50IHRoZSBudW1iZXIgb2YgbWludXRlcyBiZXR3ZWVuIGVhY2ggdXBsb2FkIHNjaGVkdWxlLiBUaGUgZGVmYXVsdCBpcyAzNjAgbWluICg2IGhvdXJzKS4iLCJmb3JtYXQiOiJpbnQ2NCIsInR5cGUiOiJpbnRlZ2VyIn0sInVwbG9hZF93YWl0Ijp7ImRlc2NyaXB0aW9uIjoiVXBsb2FkV2FpdCBpcyBhIGZpZWxkIG9mIENvc3RNYW5hZ2VtZW50TWV0cmljc0NvbmZpZyB0byByZXByZXNlbnQgdGhlIHRpbWUgdG8gd2FpdCBiZWZvcmUgc2VuZGluZyBhbiB1cGxvYWQuIiwiZm9ybWF0IjoiaW50NjQiLCJ0eXBlIjoiaW50ZWdlciJ9LCJ2YWxpZGF0ZV9jZXJ0Ijp7ImRlc2NyaXB0aW9uIjoiVmFsaWRhdGVDZXJ0IGlzIGEgZmllbGQgb2YgQ29zdE1hbmFnZW1lbnRNZXRyaWNzQ29uZmlnIHRvIHJlcHJlc2VudCBpZiB0aGUgSW5ncmVzcyBlbmRwb2ludCBtdXN0IGJlIGNlcnRpZmljYXRlIHZhbGlkYXRlZC4iLCJ0eXBlIjoiYm9vbGVhbiJ9fSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9fSwicmVxdWlyZWQiOlsic3BlYyJdLCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOnRydWUsInN1YnJlc291cmNlcyI6eyJzdGF0dXMiOnt9fX1dfSwic3RhdHVzIjp7ImFjY2VwdGVkTmFtZXMiOnsia2luZCI6IiIsInBsdXJhbCI6IiJ9LCJjb25kaXRpb25zIjpbXSwic3RvcmVkVmVyc2lvbnMiOltdfX0=
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: registry.redhat.io/costmanagement/costmanagement-metrics-operator-bundle@sha256:e2a0375e814938a2e2e4bdf5d7ffa767d19bb80c7bb491c79c4d80254c5fb65e
  name: ""
- image: registry.redhat.io/costmanagement/costmanagement-metrics-rhel8-operator@sha256:6bc22b6627b067c91f55a234a5cd0233ab4d7adfc4f023b29ad65ce6ddb4fba2
  name: costmanagement-metrics-rhel8-operator-6bc22b6627b067c91f55a234a5cd0233ab4d7adfc4f023b29ad65ce6ddb4fba2-annotation
- image: registry.redhat.io/costmanagement/costmanagement-metrics-rhel8-operator@sha256:6bc22b6627b067c91f55a234a5cd0233ab4d7adfc4f023b29ad65ce6ddb4fba2
  name: manager
schema: olm.bundle
---
image: registry.redhat.io/costmanagement/costmanagement-metrics-operator-bundle@sha256:1fc8b1b5496df4a2f9ef9d9307b85ad14a89a4e567933d67fea50cddf662cd1c
name: costmanagement-metrics-operator.1.2.0
package: costmanagement-metrics-operator
properties:
- type: olm.gvk
  value:
    group: costmanagement-metrics-cfg.openshift.io
    kind: CostManagementMetricsConfig
    version: v1beta1
- type: olm.package
  value:
    packageName: costmanagement-metrics-operator
    version: 1.2.0
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: registry.redhat.io/costmanagement/costmanagement-metrics-operator-bundle@sha256:1fc8b1b5496df4a2f9ef9d9307b85ad14a89a4e567933d67fea50cddf662cd1c
  name: ""
- image: registry.redhat.io/costmanagement/costmanagement-metrics-rhel8-operator@sha256:2ba8cbaa8232a3506c6f7d79360102a678091275a0138882df14c7da820ebb1b
  name: costmanagement-metrics-rhel8-operator-2ba8cbaa8232a3506c6f7d79360102a678091275a0138882df14c7da820ebb1b-annotation
- image: registry.redhat.io/costmanagement/costmanagement-metrics-rhel8-operator@sha256:2ba8cbaa8232a3506c6f7d79360102a678091275a0138882df14c7da820ebb1b
  name: manager
schema: olm.bundle
---
image: registry.redhat.io/costmanagement/costmanagement-metrics-operator-bundle@sha256:12338c0a58b7a2e8f1f201512a43675e1df1f3eae0feec0ffd8df4295b499a92
name: costmanagement-metrics-operator.2.0.0
package: costmanagement-metrics-operator
properties:
- type: olm.gvk
  value:
    group: costmanagement-metrics-cfg.openshift.io
    kind: CostManagementMetricsConfig
    version: v1beta1
- type: olm.package
  value:
    packageName: costmanagement-metrics-operator
    version: 2.0.0
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: registry.redhat.io/costmanagement/costmanagement-metrics-operator-bundle@sha256:12338c0a58b7a2e8f1f201512a43675e1df1f3eae0feec0ffd8df4295b499a92
  name: ""
- image: registry.redhat.io/costmanagement/costmanagement-metrics-rhel8-operator@sha256:6f320a64ab1212509647b8b259445349b31935f3968748ba53886076fc4c8606
  name: costmanagement-metrics-rhel8-operator-6f320a64ab1212509647b8b259445349b31935f3968748ba53886076fc4c8606-annotation
- image: registry.redhat.io/costmanagement/costmanagement-metrics-rhel8-operator@sha256:6f320a64ab1212509647b8b259445349b31935f3968748ba53886076fc4c8606
  name: manager
schema: olm.bundle
---
image: registry.redhat.io/costmanagement/costmanagement-metrics-operator-bundle@sha256:e43e49bc3c6b361f8ece42f438748dbe1e8af0c32c1ec4786fccc0e9ff1b63f1
name: costmanagement-metrics-operator.3.0.0
package: costmanagement-metrics-operator
properties:
- type: olm.gvk
  value:
    group: costmanagement-metrics-cfg.openshift.io
    kind: CostManagementMetricsConfig
    version: v1beta1
- type: olm.package
  value:
    packageName: costmanagement-metrics-operator
    version: 3.0.0
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: registry.redhat.io/costmanagement/costmanagement-metrics-operator-bundle@sha256:e43e49bc3c6b361f8ece42f438748dbe1e8af0c32c1ec4786fccc0e9ff1b63f1
  name: ""
- image: registry.redhat.io/costmanagement/costmanagement-metrics-rhel8-operator@sha256:495c0fd649f1046eb3c3a91628b8a8df699288d6f004ddca41bb3a461dbd0d0b
  name: costmanagement-metrics-rhel8-operator-495c0fd649f1046eb3c3a91628b8a8df699288d6f004ddca41bb3a461dbd0d0b-annotation
- image: registry.redhat.io/costmanagement/costmanagement-metrics-rhel8-operator@sha256:495c0fd649f1046eb3c3a91628b8a8df699288d6f004ddca41bb3a461dbd0d0b
  name: manager
schema: olm.bundle
---
image: registry.redhat.io/costmanagement/costmanagement-metrics-operator-bundle@sha256:afcee273a058fa1ac7643271ee775bdc1ca5d765f0ea36af3b3a6633d9fcbd73
name: costmanagement-metrics-operator.3.0.1
package: costmanagement-metrics-operator
properties:
- type: olm.gvk
  value:
    group: costmanagement-metrics-cfg.openshift.io
    kind: CostManagementMetricsConfig
    version: v1beta1
- type: olm.package
  value:
    packageName: costmanagement-metrics-operator
    version: 3.0.1
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoib3BlcmF0b3JzLmNvcmVvcy5jb20vdjFhbHBoYTEiLCJraW5kIjoiQ2x1c3RlclNlcnZpY2VWZXJzaW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiYWxtLWV4YW1wbGVzIjoiW1xuICB7XG4gICAgXCJhcGlWZXJzaW9uXCI6IFwiY29zdG1hbmFnZW1lbnQtbWV0cmljcy1jZmcub3BlbnNoaWZ0LmlvL3YxYmV0YTFcIixcbiAgICBcImtpbmRcIjogXCJDb3N0TWFuYWdlbWVudE1ldHJpY3NDb25maWdcIixcbiAgICBcIm1ldGFkYXRhXCI6IHtcbiAgICAgIFwibmFtZVwiOiBcImNvc3RtYW5hZ2VtZW50bWV0cmljc2NmZy1zYW1wbGUtdjFiZXRhMVwiXG4gICAgfSxcbiAgICBcInNwZWNcIjoge1xuICAgICAgXCJhdXRoZW50aWNhdGlvblwiOiB7XG4gICAgICAgIFwidHlwZVwiOiBcInRva2VuXCJcbiAgICAgIH0sXG4gICAgICBcInBhY2thZ2luZ1wiOiB7XG4gICAgICAgIFwibWF4X3JlcG9ydHNfdG9fc3RvcmVcIjogMzAsXG4gICAgICAgIFwibWF4X3NpemVfTUJcIjogMTAwXG4gICAgICB9LFxuICAgICAgXCJwcm9tZXRoZXVzX2NvbmZpZ1wiOiB7XG4gICAgICAgIFwiY29sbGVjdF9wcmV2aW91c19kYXRhXCI6IHRydWUsXG4gICAgICAgIFwiY29udGV4dF90aW1lb3V0XCI6IDEyMCxcbiAgICAgICAgXCJkaXNhYmxlX21ldHJpY3NfY29sbGVjdGlvbl9jb3N0X21hbmFnZW1lbnRcIjogZmFsc2UsXG4gICAgICAgIFwiZGlzYWJsZV9tZXRyaWNzX2NvbGxlY3Rpb25fcmVzb3VyY2Vfb3B0aW1pemF0aW9uXCI6IGZhbHNlXG4gICAgICB9LFxuICAgICAgXCJzb3VyY2VcIjoge1xuICAgICAgICBcImNoZWNrX2N5Y2xlXCI6IDE0NDAsXG4gICAgICAgIFwiY3JlYXRlX3NvdXJjZVwiOiBmYWxzZSxcbiAgICAgICAgXCJuYW1lXCI6IFwiXCJcbiAgICAgIH0sXG4gICAgICBcInVwbG9hZFwiOiB7XG4gICAgICAgIFwidXBsb2FkX2N5Y2xlXCI6IDM2MCxcbiAgICAgICAgXCJ1cGxvYWRfdG9nZ2xlXCI6IHRydWVcbiAgICAgIH1cbiAgICB9XG4gIH1cbl0iLCJjYXBhYmlsaXRpZXMiOiJTZWFtbGVzcyBVcGdyYWRlcyIsImNhdGVnb3JpZXMiOiJNb25pdG9yaW5nIiwiY2VydGlmaWVkIjoidHJ1ZSIsImNvbnRhaW5lckltYWdlIjoicmVnaXN0cnkucmVkaGF0LmlvL2Nvc3RtYW5hZ2VtZW50L2Nvc3RtYW5hZ2VtZW50LW1ldHJpY3MtcmhlbDgtb3BlcmF0b3JAc2hhMjU2OjI5NzVhZDc3MmZhNzlhZGE1OThhYjVmMDU0ZTJjYmQ4MjFkY2I3MzRiZDdiMTFkMGNiYzdiMzhkN2IyOWJlNTQiLCJjcmVhdGVkQXQiOiIyMDIzLTEwLTE4VDEzOjEwOjU0WiIsImRlc2NyaXB0aW9uIjoiQSBHb2xhbmctYmFzZWQgT3BlblNoaWZ0IE9wZXJhdG9yIHRoYXQgZ2VuZXJhdGVzIGFuZCB1cGxvYWRzIE9wZW5TaGlmdCB1c2FnZSBtZXRyaWNzIHRvIGNvc3QgbWFuYWdlbWVudC4iLCJvcGVyYXRvcmZyYW1ld29yay5pby9zdWdnZXN0ZWQtbmFtZXNwYWNlIjoiY29zdG1hbmFnZW1lbnQtbWV0cmljcy1vcGVyYXRvciIsIm9wZXJhdG9ycy5vcGVuc2hpZnQuaW8vaW5mcmFzdHJ1Y3R1cmUtZmVhdHVyZXMiOiJbXCJEaXNjb25uZWN0ZWRcIl0iLCJvcGVyYXRvcnMub3BlbnNoaWZ0LmlvL3ZhbGlkLXN1YnNjcmlwdGlvbiI6IltcIk9wZW5TaGlmdCBLdWJlcm5ldGVzIEVuZ2luZVwiLCBcIk9wZW5TaGlmdCBDb250YWluZXIgUGxhdGZvcm1cIiwgXCJPcGVuU2hpZnQgUGxhdGZvcm0gUGx1c1wiXSIsIm9wZXJhdG9ycy5vcGVyYXRvcmZyYW1ld29yay5pby9idWlsZGVyIjoib3BlcmF0b3Itc2RrLXYxLjMyLjAiLCJvcGVyYXRvcnMub3BlcmF0b3JmcmFtZXdvcmsuaW8vcHJvamVjdF9sYXlvdXQiOiJnby5rdWJlYnVpbGRlci5pby92MiIsInJlcG9zaXRvcnkiOiJodHRwczovL2dpdGh1Yi5jb20vcHJvamVjdC1rb2t1L2tva3UtbWV0cmljcy1vcGVyYXRvciIsInN1cHBvcnQiOiJSZWQgSGF0In0sIm5hbWUiOiJjb3N0bWFuYWdlbWVudC1tZXRyaWNzLW9wZXJhdG9yLjMuMC4xIiwibmFtZXNwYWNlIjoicGxhY2Vob2xkZXIifSwic3BlYyI6eyJhcGlzZXJ2aWNlZGVmaW5pdGlvbnMiOnt9LCJjdXN0b21yZXNvdXJjZWRlZmluaXRpb25zIjp7Im93bmVkIjpbeyJkZXNjcmlwdGlvbiI6IkNvc3RNYW5hZ2VtZW50TWV0cmljc0NvbmZpZyBpcyB0aGUgU2NoZW1hIGZvciB0aGUgY29zdG1hbmFnZW1lbnRtZXRyaWNzY29uZmlnIEFQSSIsImtpbmQiOiJDb3N0TWFuYWdlbWVudE1ldHJpY3NDb25maWciLCJuYW1lIjoiY29zdG1hbmFnZW1lbnRtZXRyaWNzY29uZmlncy5jb3N0bWFuYWdlbWVudC1tZXRyaWNzLWNmZy5vcGVuc2hpZnQuaW8iLCJ2ZXJzaW9uIjoidjFiZXRhMSJ9XX0sImRlc2NyaXB0aW9uIjoiIyAzLjAuMSBDb3N0IE1hbmFnZW1lbnQgTWV0cmljcyBPcGVyYXRvclxuIyMgSW50cm9kdWN0aW9uXG5UaGUgYGNvc3RtYW5hZ2VtZW50LW1ldHJpY3Mtb3BlcmF0b3JgIGlzIGEgY29tcG9uZW50IG9mIHRoZSBbY29zdCBtYW5hZ21lbnRdKGh0dHBzOi8vYWNjZXNzLnJlZGhhdC5jb20vZG9jdW1lbnRhdGlvbi9lbi11cy9jb3N0X21hbmFnZW1lbnRfc2VydmljZSkgc2VydmljZSBmb3IgT3BlbnNoaWZ0LiBUaGUgb3BlcmF0b3IgcnVucyBvbiB0aGUgbGF0ZXN0IHN1cHBvcnRlZCB2ZXJzaW9ucyBvZiBPcGVuc2hpZnQuIFRoaXMgb3BlcmF0b3Igb2J0YWlucyBPcGVuU2hpZnQgdXNhZ2UgZGF0YSBieSBxdWVyeWluZyBQcm9tZXRoZXVzIGV2ZXJ5IGhvdXIgdG8gY3JlYXRlIG1ldHJpYyByZXBvcnRzIHRoYXQgaXQgdXBsb2FkcyB0byBDb3N0IE1hbmFnZW1lbnQgYXQgW2NvbnNvbGUucmVkaGF0LmNvbV0oaHR0cHM6Ly9jb25zb2xlLnJlZGhhdC5jb20pIHRvIGJlIHByb2Nlc3NlZC4gRm9yIG1vcmUgaW5mb3JtYXRpb24sIHJlYWNoIG91dCB0byBcdTAwM2Njb3N0bWFuYWdlbWVudEByZWRoYXQuY29tXHUwMDNlLlxuXG5UaGlzIG9wZXJhdG9yIGlzIGNhcGFibGUgb2YgZnVuY3Rpb25pbmcgd2l0aGluIGEgZGlzY29ubmVjdGVkL3Jlc3RyaWN0ZWQgbmV0d29yayAoYWthIGFpci1nYXBwZWQgbW9kZSkuIEluIHRoaXMgbW9kZSwgdGhlIG9wZXJhdG9yIHdpbGwgc3RvcmUgdGhlIHBhY2thZ2VkIHJlcG9ydHMgZm9yIG1hbnVhbCByZXRyaWV2YWwgaW5zdGVhZCBvZiBiZWluZyB1cGxvYWRlZCB0byBDb3N0IE1hbmFnZW1lbnQuIERvY3VtZW50YXRpb24gZm9yIGluc3RhbGxpbmcgYW4gb3BlcmF0b3Igd2l0aGluIGEgcmVzdHJpY3RlZCBuZXR3b3JrIGNhbiBiZSBmb3VuZCBbaGVyZV0oaHR0cHM6Ly9kb2NzLm9wZW5zaGlmdC5jb20vY29udGFpbmVyLXBsYXRmb3JtL2xhdGVzdC9vcGVyYXRvcnMvYWRtaW4vb2xtLXJlc3RyaWN0ZWQtbmV0d29ya3MuaHRtbCkuXG5cbiMjIEZlYXR1cmVzIGFuZCBDYXBhYmlsaXRpZXNcbiMjIyMgTWV0cmljcyBjb2xsZWN0aW9uOlxuVGhlIENvc3RNYW5hZ2VtZW50IE1ldHJpY3MgT3BlcmF0b3IgKGBjb3N0bWFuYWdlbWVudC1tZXRyaWNzLW9wZXJhdG9yYCkgY29sbGVjdHMgdGhlIG1ldHJpY3MgcmVxdWlyZWQgZm9yIENvc3QgTWFuYWdlbWVudCBieTpcbiogUXVlcnlpbmcgUHJvbWV0aGV1cyB0byBnYXRoZXIgdGhlIG5lY2Vzc2FyeSBtZXRyaWNzIGZvciBDb3N0IE1hbmFnZW1lbnQuXG4qIFdyaXRpbmcgdGhlIHJlc3VsdHMgb2YgUHJvbWV0aGV1cyBxdWVyaWVzIHRvIENTViByZXBvcnQgZmlsZXMuXG4qIFBhY2thZ2luZyB0aGUgQ1NWIHJlcG9ydCBmaWxlcyBpbnRvIHRhcmJhbGxzLlxuXG4jIyMjIEFkZGl0aW9uYWwgQ2FwYWJpbGl0aWVzOlxuKiBSZXNvdXJjZSBPcHRpbWl6YXRpb24gbWV0cmljcyBjb2xsZWN0aW9uLlxuKiBUaGUgb3BlcmF0b3IgY2FuIGJlIGNvbmZpZ3VyZWQgdG8gZ2F0aGVyIGFsbCBwcmV2aW91cyBkYXRhIHdpdGhpbiB0aGUgY29uZmlndXJlZCByZXRlbnRpb24gcGVyaW9kIG9yIGEgbWF4aW11bSBvZiA5MCBkYXlzLiBUaGUgZGVmYXVsdCBkYXRhIGNvbGxlY3Rpb24gcGVyaW9kIGlzIHRoZSAxNCBwcmV2aW91cyBkYXlzLiBUaGlzIHNldHRpbmcgaXMgb25seSBhcHBsaWNhYmxlIHRvIG5ld2x5IGNyZWF0ZWQgQ29zdE1hbmFnZW1lbnRNZXRyaWNzQ29uZmlncy5cbiogVGhlIG9wZXJhdG9yIGNhbiBiZSBjb25maWd1cmVkIHRvIGF1dG9tYXRpY2FsbHkgdXBsb2FkIHRoZSBwYWNrYWdlZCByZXBvcnRzIHRvIENvc3QgTWFuYWdlbWVudCB0aHJvdWdoIFJlZCBIYXQgSW5zaWdodHMgSW5ncmVzcyBzZXJ2aWNlLlxuKiBUaGUgb3BlcmF0b3IgY2FuIGNyZWF0ZSBhIHNvdXJjZSBpbiBjb25zb2xlLnJlZGhhdC5jb20uIEEgc291cmNlIGlzIHJlcXVpcmVkIGZvciBDb3N0IE1hbmFnZW1lbnQgdG8gcHJvY2VzcyB0aGUgdXBsb2FkZWQgcGFja2FnZXMuXG4qIFBlcnNpc3RlbnRWb2x1bWVDbGFpbSAoUFZDKSBjb25maWd1cmF0aW9uOiBUaGUgQ29zdE1hbmFnZW1lbnRNZXRyaWNzQ29uZmlnIENSIGNhbiBhY2NlcHQgYSBQVkMgZGVmaW5pdGlvbiBhbmQgdGhlIG9wZXJhdG9yIHdpbGwgY3JlYXRlIGFuZCBtb3VudCB0aGUgUFZDLiBJZiBvbmUgaXMgbm90IHByb3ZpZGVkLCBhIGRlZmF1bHQgUFZDIHdpbGwgYmUgY3JlYXRlZC5cbiogUmVzdHJpY3RlZCBuZXR3b3JrIGluc3RhbGxhdGlvbjogdGhpcyBvcGVyYXRvciBjYW4gZnVuY3Rpb24gb24gYSByZXN0cmljdGVkIG5ldHdvcmsuIEluIHRoaXMgbW9kZSwgdGhlIG9wZXJhdG9yIHN0b3JlcyB0aGUgcGFja2FnZWQgcmVwb3J0cyBmb3IgbWFudWFsIHJldHJpZXZhbC5cblxuIyMgTmV3IGluIHYzLjAuMDpcbiogRGFpbHkgcmVwb3J0IGdlbmVyYXRpb246IE9wZXJhdG9yIHZlcnNpb25zIHByaW9yIHRvIHYzLjAuMCBnZW5lcmF0ZWQgc2VxdWVudGlhbCByZXBvcnRzLiBOb3csIHJlcG9ydHMgYXJlIGdlbmVyYXRlZCBzdGFydGluZyBhdCAwOjAwIFVUQy4gQW55IHBheWxvYWRzIGdlbmVyYXRlZCB0aHJvdWdob3V0IGEgZ2l2ZW4gZGF5IHdpbGwgY29udGFpbiBhbGwgZGF0YSBzdGFydGluZyBmcm9tIDA6MDAgVVRDLiBPbmNlIHRoZSBuZXh0IGRheSBzdGFydHMsIHRoZSBwcmV2aW91cyBkYXkncyByZXBvcnRzIGFyZSBwYWNrYWdlZCwgYW5kIHRoZSBuZXcgcmVwb3J0IGFnYWluIHN0YXJ0cyBhdCAwOjAwIFVUQyBmb3IgdGhlIGN1cnJlbnQgZGF5LlxuKiBGYWlsZWQgcXVlcnkgcmV0cnk6IEluIGFuIGF0dGVtcHQgdG8gcHJldmVudCBtaXNzaW5nIGRhdGEsIHRoZSBvcGVyYXRvciB3aWxsIHJldHJ5IHF1ZXJpZXMgZnJvbSB0aGUgbGFzdCBzdWNjZXNzZnVsIHF1ZXJ5IHRpbWUsIHVwIHRvIDUgdGltZXMuXG5cbiMjIE5ldyBpbiB2Mi4wLjA6XG4qIEFkZHMgbWV0cmljcyBhbmQgcmVwb3J0IGdlbmVyYXRpb24gZm9yIHJlc291cmNlIG9wdGltaXphdGlvbi4gVGhpcyBmZWF0dXJlIHdpbGwgY29sbGVjdCBhZGRpdGlvbmFsIHVzYWdlIG1ldHJpY3MgYW5kIGNyZWF0ZSBhIG5ldyByZXBvcnQgaW4gdGhlIHBheWxvYWQuIFRoZXNlIG1ldHJpY3MgYXJlIGVuYWJsZWQgYnkgZGVmYXVsdCwgYnV0IGNhbiBiZSBkaXNhYmxlZCBieSBzZXR0aW5nIGBkaXNhYmxlX21ldHJpY3NfY29sbGVjdGlvbl9yZXNvdXJjZV9vcHRpbWl6YXRpb25gIHRvIGB0cnVlYC5cbiogQ29sbGVjdCBhbGwgYXZhaWxhYmxlIFByb21ldGhldXMgZGF0YSB1cG9uIENSIGNyZWF0aW9uLiBUaGlzIGZlYXR1cmUgb25seSBhcHBsaWVzIHRvIG5ld2x5IGNyZWF0ZWQgQ29zdE1hbmFnZW1lbnRNZXRyaWNzQ29uZmlncy4gVGhlIG9wZXJhdG9yIHdpbGwgY2hlY2sgdGhlIG1vbml0b3Jpbmcgc3RhY2sgY29uZmlndXJhdGlvbiBpbiB0aGUgYG9wZW5zaGlmdC1tb25pdG9yaW5nYCBuYW1lc3BhY2UuIFRoZSBvcGVyYXRvciB3aWxsIHVzZSB0aGUgYHJldGVudGlvbmAgcGVyaW9kIHNldCBpbiB0aGUgYGNsdXN0ZXItbW9uaXRvcmluZy1jb25maWdgIENvbmZpZ01hcCBpZiBkZWZpbmVkLCB1cCB0byBhIG1heGltdW0gb2YgOTAgZGF5cy4gT3RoZXJ3aXNlIGl0IHdpbGwgZmFsbCBiYWNrIHRvIGNvbGxlY3RpbmcgMTQgZGF5cyBvZiBkYXRhLCBpZiBhdmFpbGFibGUuIFRoaXMgZGF0YSBjb2xsZWN0aW9uIG1heSBiZSBkaXNhYmxlZCBieSBzZXR0aW5nIGBjb2xsZWN0X3ByZXZpb3VzX2RhdGFgIHRvIGBmYWxzZWAuIFR1cm5pbmcgdGhpcyBmZWF0dXJlIG9mZiByZXN1bHRzIGluIHRoZSBvcGVyYXRvciBjb2xsZWN0aW5nIG1ldHJpY3MgZnJvbSB0aGUgdGltZSB0aGUgQ29zdE1hbmFnZW1lbnRNZXRyaWNzQ29uZmlnIGlzIGNyZWF0ZWQsIGZvcndhcmQuXG5cbiMjIExpbWl0YXRpb25zIGFuZCBQcmUtUmVxdWlzaXRlc1xuIyMjIyBMaW1pdGF0aW9ucyAoUG90ZW50aWFsIGZvciBtZXRyaWNzIGRhdGEgbG9zcylcbiogQSBzb3VyY2UgKiptdXN0KiogZXhpc3QgaW4gY29uc29sZS5yZWRoYXQuY29tIGZvciBhbiB1cGxvYWRlZCBwYXlsb2FkIHRvIGJlIHByb2Nlc3NlZCBieSBDb3N0IE1hbmFnZW1lbnQuIFRoZSBvcGVyYXRvciBzZW5kcyB0aGUgcGF5bG9hZCB0byB0aGUgUmVkIEhhdCBJbnNpZ2h0cyBJbmdyZXNzIHNlcnZpY2Ugd2hpY2ggdXN1YWxseSByZXR1cm5zIHN1Y2Nlc3NmdWxseSwgYnV0IHRoZSBvcGVyYXRvciBkb2VzIG5vdCBjdXJyZW50bHkgY29uZmlybSB3aXRoIENvc3QgTWFuYWdlbWVudCB0aGF0IHRoZSBwYXlsb2FkIHdhcyBwcm9jZXNzZWQuIEFmdGVyIEluZ3Jlc3MgYWNjZXB0cyB0aGUgdXBsb2FkZWQgcGF5bG9hZCwgaXQgaXMgZGVsZXRlZCBmcm9tIHRoZSBvcGVyYXRvci4gSWYgdGhlIGRhdGEgd2l0aGluIHRoZSBwYXlsb2FkIGlzIG5vdCBwcm9jZXNzZWQsIGEgZ2FwIHdpbGwgYmUgaW50cm9kdWNlZCBpbiB0aGUgdXNhZ2UgbWV0cmljcy4gRGF0YSBtYXkgYmUgcmVjb2xsZWN0ZWQgYnkgZGVsZXRpbmcgdGhlIGBDb3N0TWFuYWdlbWVudE1ldHJpY3NDb25maWdgLCBjcmVhdGluZyBhIG5ldyBgQ29zdE1hbmFnZW1lbnRNZXRyaWNzQ29uZmlnYCwgYW5kIHNldHRpbmcgYGNvbGxlY3RfcHJldmlvdXNfZGF0YTogdHJ1ZWAuIFRoaXMgcmUtY29sbGVjdGlvbiBvZiBkYXRhIHdpbGwgZ2F0aGVyIGFsbCBkYXRhIHN0b3JlZCBpbiBQcm9tZXRoZXVzLCB1cCB0byA5MCBkYXlzLlxuXG4qKk5vdGUqKiBUaGUgZm9sbG93aW5nIGxpbWl0YXRpb25zIGFyZSBzcGVjaWZpYyB0byBvcGVyYXRvcnMgY29uZmlndXJlZCB0byBydW4gaW4gYSByZXN0cmljdGVkIG5ldHdvcms6XG4qIFRoZSBgY29zdG1hbmFnZW1lbnQtbWV0cmljcy1vcGVyYXRvcmAgd2lsbCBub3QgYmUgYWJsZSB0byBnZW5lcmF0ZSBuZXcgcmVwb3J0cyBpZiB0aGUgUFZDIHN0b3JhZ2UgaXMgZnVsbC4gSWYgdGhpcyBvY2N1cnMsIHRoZSByZXBvcnRzIG11c3QgYmUgbWFudWFsbHkgZGVsZXRlZCBmcm9tIHRoZSBQVkMgc28gdGhhdCB0aGUgb3BlcmF0b3IgY2FuIGZ1bmN0aW9uIGFzIG5vcm1hbC5cbiogVGhlIGRlZmF1bHQgcmVwb3J0IHJldGVudGlvbiBpcyAzMCByZXBvcnRzIChhYm91dCBvbmUgd2VlaydzIHdvcnRoIG9mIGRhdGEpLiBUaGUgcmVwb3J0cyBtdXN0IGJlIG1hbnVhbGx5IGRvd25sb2FkZWQgYW5kIHVwbG9hZGVkIHRvIGNvbnNvbGUucmVkaGF0LmNvbSBldmVyeSB3ZWVrLCBvciB0aGV5IHdpbGwgYmUgZGVsZXRlZCBhbmQgdGhlIGRhdGEgd2lsbCBiZSBsb3N0LlxuXG4jIyMjIFN0b3JhZ2UgY29uZmlndXJhdGlvbiBwcmVyZXF1aXNpdGVcblRoZSBvcGVyYXRvciB3aWxsIGF0dGVtcHQgdG8gY3JlYXRlIGFuZCB1c2UgdGhlIGZvbGxvd2luZyBQVkMgd2hlbiBpbnN0YWxsZWQ6XG5cbiAgICAgIHZvbHVtZV9jbGFpbV90ZW1wbGF0ZTpcbiAgICAgICAgYXBpVmVyc2lvbjogdjFcbiAgICAgICAga2luZDogUGVyc2lzdGVudFZvbHVtZUNsYWltXG4gICAgICAgIG1ldGFkYXRhOlxuICAgICAgICAgIG5hbWU6IGNvc3RtYW5hZ2VtZW50LW1ldHJpY3Mtb3BlcmF0b3ItZGF0YVxuICAgICAgICBzcGVjOlxuICAgICAgICAgIGFjY2Vzc01vZGVzOlxuICAgICAgICAgICAgLSBSZWFkV3JpdGVPbmNlXG4gICAgICAgICAgcmVzb3VyY2VzOlxuICAgICAgICAgICAgcmVxdWVzdHM6XG4gICAgICAgICAgICAgIHN0b3JhZ2U6IDEwR2lcblxuSWYgYSBkaWZmZXJlbnQgUFZDIHNob3VsZCBiZSB1dGlsaXplZCwgYSB2YWxpZCBQVkMgc2hvdWxkIGJlIHNwZWNpZmllZCBpbiB0aGUgQ29zdE1hbmFnZW1lbnRNZXRyaWNzQ29uZmlnIENSIGFzIGRlc2NyaWJlZCBpbiB0aGUgYXBwcm9wcmlhdGUgc2VjdGlvbiBiZWxvdy4gVGhlIFBWQyB0byBiZSB1c2VkIG1heSBleGlzdCBhbHJlYWR5LCBvciB0aGUgb3BlcmF0b3Igd2lsbCBhdHRlbXB0IHRvIGNyZWF0ZSBpdC5cblxuVG8gdXNlIHRoZSBkZWZhdWx0IHNwZWNpZmljYXRpb24sIHRoZSBmb2xsb3cgYXNzdW1wdGlvbnMgbXVzdCBiZSBtZXQ6XG4xLiBBIGRlZmF1bHQgU3RvcmFnZUNsYXNzIGlzIGRlZmluZWQuXG4yLiBEeW5hbWljIHByb3Zpc2lvbmluZyBmb3IgdGhhdCBkZWZhdWx0IFN0b3JhZ2VDbGFzcyBpcyBlbmFibGVkLlxuXG5JZiB0aGVzZSBhc3N1bXB0aW9ucyBhcmUgbm90IG1ldCwgdGhlIG9wZXJhdG9yIHdpbGwgbm90IGRlcGxveSBjb3JyZWN0bHkuIEluIHRoZXNlIGNhc2VzLCBzdG9yYWdlIG11c3QgYmUgbWFudWFsbHkgY29uZmlndXJlZC4gQWZ0ZXIgY29uZmlndXJpbmcgc3RvcmFnZSwgYSB2YWxpZCBQVkMgdGVtcGxhdGUgc2hvdWxkIGJlIHN1cHBsaWVkIGluIHRoZSBgdm9sdW1lX2NsYWltX3RlbXBsYXRlYCBzcGVjIG9mIHRoZSBDb3N0TWFuYWdlbWVudE1ldHJpY3NDb25maWcgQ1IuXG5cbiMjIENvbmZpZ3VyYWJsZSBwYXJhbWV0ZXJzOlxuICAqIGBhdXRoZW50aWNhdGlvbmA6XG4gICAgKiBgdHlwZTogdG9rZW5gIC1cdTAwM2UgVGhlIGF1dGhlbnRpY2F0aW9uIG1ldGhvZCBmb3IgY29ubmVjdGluZyB0byBgY29uc29sZS5yZWRoYXQuY29tYC4gVGhlIGRlZmF1bHQgYW5kIHByZWZlcnJlZCBtZXRob2QgaXMgYHRva2VuYC4gYGJhc2ljYCBpcyB1c2VkIHdoZW4gdGhlIG9wZW5zaGlmdC1jb25maWcgcHVsbC1zZWNyZXQgZG9lcyBub3QgY29udGFpbiBhIHRva2VuIGZvciBgY29uc29sZS5yZWRoYXQuY29tYC5cbiAgICAqIGBzZWNyZXRfbmFtZWAgLVx1MDAzZSBUaGUgU2VjcmV0IHVzZWQgYnkgdGhlIG9wZXJhdG9yIHdoZW4gdGhlIGF1dGhlbnRpY2F0aW9uIHR5cGUgaXMgYGJhc2ljYC4gVGhpcyBwYXJhbWV0ZXIgaXMgcmVxdWlyZWQgKipvbmx5IGlmKiogdGhlIGF1dGhlbnRpY2F0aW9uIHR5cGUgaXMgYGJhc2ljYC5cbiAgKiBgcGFja2FnaW5nYDpcbiAgICAqIGBtYXhfcmVwb3J0c190b19zdG9yZTogMzBgIC1cdTAwM2UgVGhlIG51bWJlciBvZiByZXBvcnRzIHRvIHN0b3JlIHdoZW4gY29uZmlndXJlZCBpbiBhaXItZ2FwcGVkIG1vZGUuIFRoZSBkZWZhdWx0IGlzIDMwLCB3aXRoIGEgbWluaW11bSBvZiAxIGFuZCBubyBtYXhpbXVtLiBXaGVuIHRoZSBvcGVyYXRvciBpcyBub3QgY29uZmlndXJlZCBpbiBhaXItZ2FwcGVkIG1vZGUsIHRoaXMgcGFyYW1ldGVyIGhhcyBubyBlZmZlY3QuIFJlcG9ydHMgYXJlIHJlbW92ZWQgYXMgc29vbiBhcyB0aGV5IGFyZSB1cGxvYWRlZC5cbiAgICAqIGBtYXhfc2l6ZTogMTAwYCAtXHUwMDNlIFRoZSBtYXhpbXVtIHNpemUgZm9yIHBhY2thZ2VkIGZpbGVzIGluIE1lZ2FieXRlcyBwcmlvciB0byBjb21wcmVzc2lvbi4gVGhlIGRlZmF1bHQgaXMgMTAwLCB3aXRoIGEgbWluaW11bSBvZiAxIGFuZCBtYXhpbXVtIG9mIDEwMC5cbiAgKiBgcHJvbWV0aGV1c19jb25maWdgOlxuICAgICogYGNvbGxlY3RfcHJldmlvdXNfZGF0YTogdHJ1ZWAgLVx1MDAzZSBUb2dnbGUgZm9yIGNvbGxlY3RpbmcgYWxsIGF2YWlsYWJsZSBkYXRhIGluIFByb21ldGhldXMgKip1cG9uIENvc3RNYW5hZ2VtZW50TWV0cmljc0NvbmZpZyBjcmVhdGlvbioqIChUaGlzIHBhcmFtZXRlciB3aWxsIHN0YXJ0IHRvIGFwcGVhciBpbiBDb3N0TWFuYWdlbWVudE1ldHJpY3NDb25maWdzIHRoYXQgd2VyZSBjcmVhdGVkIHByaW9yIHRvIHYyLjAuMCBidXQgd2lsbCBub3QgaGF2ZSBhbnkgZWZmZWN0IHVubGVzcyB0aGUgQ29zdE1hbmFnZW1lbnRNZXRyaWNzQ29uZmlnIGlzIGRlbGV0ZWQgYW5kIHJlY3JlYXRlZCkuIFRoZSBkZWZhdWx0IGlzIGB0cnVlYC4gVGhlIG9wZXJhdG9yIHdpbGwgZmlyc3QgbG9vayBmb3IgYSBgcmV0ZW50aW9uYCBwZXJpb2QgaW4gdGhlIGBjbHVzdGVyLW1vbml0b3JpbmctY29uZmlnYCBDb25maWdNYXAgaW4gdGhlIGBvcGVuc2hpZnQtbW9uaXRvcmluZ2AgbmFtZXNwYWNlIGFuZCBnYXRoZXIgZGF0YSBvdmVyIHRoaXMgdGltZSBwZXJpb2QgdXAgdG8gYSBtYXhpbXVtIG9mIDkwIGRheXMuIElmIHRoaXMgY29uZmlndXJhdGlvbiBpcyBub3Qgc2V0LCB0aGUgZGVmYXVsdCBpcyAxNCBkYXlzLiAoTmV3IGluIHYyLjAuMClcbiAgICAqIGBkaXNhYmxlX21ldHJpY3NfY29sbGVjdGlvbl9jb3N0X21hbmFnZW1lbnQ6IGZhbHNlYCAtXHUwMDNlIFRvZ2dsZSBmb3IgZGlzYWJsaW5nIHRoZSBjb2xsZWN0aW9uIG9mIG1ldHJpY3MgZm9yIENvc3QgTWFuYWdlbWVudC4gVGhlIGRlZmF1bHQgaXMgZmFsc2UuIChOZXcgaW4gdjIuMC4wKVxuICAgICogYGRpc2FibGVfbWV0cmljc19jb2xsZWN0aW9uX3Jlc291cmNlX29wdGltaXphdGlvbjogZmFsc2VgIC1cdTAwM2UgVG9nZ2xlIGZvciBkaXNhYmxpbmcgdGhlIGNvbGxlY3Rpb24gb2YgbWV0cmljcyBmb3IgUmVzb3VyY2UgT3B0aW1pemF0aW9uLiBUaGUgZGVmYXVsdCBpcyBmYWxzZS4gKE5ldyBpbiB2Mi4wLjApXG4gICAgKiBgY29udGV4dF90aW1lb3V0OiAxMjBgIC1cdTAwM2UgVGhlIHRpbWUgaW4gc2Vjb25kcyBiZWZvcmUgUHJvbWV0aGV1cyBxdWVyaWVzIHRpbWVvdXQgZHVlIHRvIGV4Y2VlZGluZyBjb250ZXh0IHRpbWVvdXQuIFRoZSBkZWZhdWx0IGlzIDEyMCwgd2l0aCBhIG1pbmltdW0gb2YgMTAgYW5kIG1heGltdW0gb2YgMTgwLlxuICAqIGBzb3VyY2VgOlxuICAgICogYG5hbWU6ICcnYCAtXHUwMDNlIFRoZSBuYW1lIG9mIHRoZSBzb3VyY2UgdGhlIG9wZXJhdG9yIHdpbGwgY3JlYXRlIGluIGBjb25zb2xlLnJlZGhhdC5jb21gLiBJZiB0aGUgbmFtZSB2YWx1ZSBpcyBlbXB0eSwgdGhlIGRlZmF1bHQgaW50ZXJncmF0aW9uIG5hbWUgaXMgdGhlICoqY2x1c3RlciBpZCoqLlxuICAgICogYGNyZWF0ZV9zb3VyY2U6IGZhbHNlYCAtXHUwMDNlIFRvZ2dsZSBmb3Igd2hldGhlciBvciBub3QgdGhlIG9wZXJhdG9yIHdpbGwgY3JlYXRlIHRoZSBzb3VyY2UgaW4gYGNvbnNvbGUucmVkaGF0LmNvbWAuIFRoZSBkZWZhdWx0IGlzIEZhbHNlLiBUaGlzIHBhcmFtZXRlciBzaG91bGQgYmUgc3dpdGNoZWQgdG8gVHJ1ZSB3aGVuIGEgc291cmNlIGRvZXMgbm90IGFscmVhZHkgZXhpc3QgaW4gYGNvbnNvbGUucmVkaGF0LmNvbWAgZm9yIHRoaXMgY2x1c3Rlci5cbiAgICAqIGBjaGVja19jeWNsZTogMTQ0MGAgLVx1MDAzZSBUaGUgdGltZSBpbiBtaW51dGVzIHRvIHdhaXQgYmV0d2VlbiBjaGVja2luZyBpZiBhIHNvdXJjZSBleGlzdHMgZm9yIHRoaXMgY2x1c3Rlci4gVGhlIGRlZmF1bHQgaXMgMTQ0MCBtaW51dGVzICgyNCBocnMpLlxuICAqIGB1cGxvYWRgOlxuICAgICogYHVwbG9hZF9jeWNsZTogMzYwYCAtXHUwMDNlIFRoZSB0aW1lIGluIG1pbnV0ZXMgYmV0d2VlbiBwYXlsb2FkIHVwbG9hZHMuIFRoZSBkZWZhdWx0IGlzIDM2MCAoNiBob3VycykuXG4gICAgKiBgdXBsb2FkX3RvZ2dsZTogdHJ1ZWAgLVx1MDAzZSBUb2dnbGUgdG8gdHVybiB1cGxvYWQgb24gb3Igb2ZmIC1cdTAwM2UgdHJ1ZSBtZWFucyB1cGxvYWQsIGZhbHNlIG1lYW5zIGRvIG5vdCB1cGxvYWQgKGZhbHNlID09IGFpci1nYXBwZWQgbW9kZSkuIFRoZSBkZWZhdWx0IGlzIGB0cnVlYC5cbiAgICAqIGB1cGxvYWRfd2FpdGAgLVx1MDAzZSBUaGUgYW1vdW50IG9mIHRpbWUgKGluIHNlY29uZHMpIHRvIHBhdXNlIGJlZm9yZSB1cGxvYWRpbmcgYSBwYXlsb2FkLiBUaGUgZGVmYXVsdCBpcyBhIHJhbmRvbSBudW1iZXIgYmV0d2VlbiAwIGFuZCAzNS4gVGhpcyBpcyB1c2VkIHRvIGRlY3JlYXNlIHNlcnZpY2UgbG9hZCwgYnV0IG1heSBiZSBzZXQgdG8gYDBgIGlmIGRlc2lyZWQuXG4gICogYHZvbHVtZV9jbGFpbV90ZW1wbGF0ZWAgLVx1MDAzZSBzZWUgdGhlIFwiU3RvcmFnZSBjb25maWd1cmF0aW9uIHByZXJlcXVpc2l0ZVwiIHNlY3Rpb24gYWJvdmUuXG5cbiMjIENvbmZpZ3VyZSB0aGUgY29zdG1hbmFnZW1lbnQtbWV0cmljcy1vcGVyYXRvclxuKipOb3RlKiogVGhlcmUgYXJlIHNlcGFyYXRlIGluc3RydWN0aW9ucyBmb3IgY29uZmlndXJpbmcgdGhlIGBjb3N0bWFuYWdlbWVudC1tZXRyaWNzLW9wZXJhdG9yYCB0byBydW4gaW4gYSByZXN0cmljdGVkIG5ldHdvcmsuXG4jIyMjIyBDb25maWd1cmUgYXV0aGVudGljYXRpb25cblRoZSBkZWZhdWx0IGF1dGhlbnRpY2F0aW9uIGZvciB0aGUgb3BlcmF0b3IgaXMgYHRva2VuYC4gTm8gZnVydGhlciBzdGVwcyBhcmUgcmVxdWlyZWQgdG8gY29uZmlndXJlIHRva2VuIGF1dGhlbnRpY2F0aW9uLiBJZiBgYmFzaWNgIGlzIHRoZSBwcmVmZXJyZWQgYXV0aGVudGljYXRpb24gbWV0aG9kLCBhIFNlY3JldCBtdXN0IGJlIGNyZWF0ZWQgd2hpY2ggaG9sZHMgdXNlcm5hbWUgYW5kIHBhc3N3b3JkIGNyZWRlbnRpYWxzOlxuMS4gT24gdGhlIGxlZnQgbmF2aWdhdGlvbiBwYW5lLCBzZWxlY3QgYFdvcmtsb2Fkc2AgLVx1MDAzZSBgU2VjcmV0c2AgLVx1MDAzZSBzZWxlY3QgUHJvamVjdDogYGNvc3RtYW5hZ2VtZW50LW1ldHJpY3Mtb3BlcmF0b3JgIC1cdTAwM2UgYENyZWF0ZWAgLVx1MDAzZSBgS2V5L1ZhbHVlIFNlY3JldGBcbjIuIEdpdmUgdGhlIFNlY3JldCBhIG5hbWUgYW5kIGFkZCAyIGtleXM6IGB1c2VybmFtZWAgYW5kIGBwYXNzd29yZGAgKGFsbCBsb3dlcmNhc2UpLiBUaGUgdmFsdWVzIGZvciB0aGVzZSBrZXlzIGNvcnJlc3BvbmQgdG8gY29uc29sZS5yZWRoYXQuY29tIGNyZWRlbnRpYWxzLlxuMy4gU2VsZWN0IGBDcmVhdGVgLlxuIyMjIyMgQ3JlYXRlIHRoZSBDb3N0TWFuYWdlbWVudE1ldHJpY3NDb25maWdcbkNvbmZpZ3VyZSB0aGUgY29zdG1hbmFnZW1lbnQtbWV0cmljcy1vcGVyYXRvciBieSBjcmVhdGluZyBhIGBDb3N0TWFuYWdlbWVudE1ldHJpY3NDb25maWdgLlxuMS4gT24gdGhlIGxlZnQgbmF2aWdhdGlvbiBwYW5lLCBzZWxlY3QgYE9wZXJhdG9yc2AgLVx1MDAzZSBgSW5zdGFsbGVkIE9wZXJhdG9yc2AgLVx1MDAzZSBgY29zdG1hbmFnZW1lbnQtbWV0cmljcy1vcGVyYXRvcmAgLVx1MDAzZSBgQ29zdE1hbmFnZW1lbnRNZXRyaWNzQ29uZmlnYCAtXHUwMDNlIGBDcmVhdGUgSW5zdGFuY2VgLlxuMi4gRm9yIGBiYXNpY2AgYXV0aGVudGljYXRpb24sIGVkaXQgdGhlIGZvbGxvd2luZyB2YWx1ZXMgaW4gdGhlIHNwZWM6XG4gICAgKiBSZXBsYWNlIGBhdXRoZW50aWNhdGlvbjogdHlwZTpgIHdpdGggYGJhc2ljYC5cbiAgICAqIEFkZCB0aGUgYHNlY3JldF9uYW1lYCBmaWVsZCB1bmRlciBgYXV0aGVudGljYXRpb25gLCBhbmQgc2V0IGl0IGVxdWFsIHRvIHRoZSBuYW1lIG9mIHRoZSBhdXRoZW50aWNhdGlvbiBTZWNyZXQgdGhhdCB3YXMgY3JlYXRlZCBhYm92ZS4gVGhlIHNwZWMgc2hvdWxkIGxvb2sgc2ltaWxhciB0byB0aGUgZm9sbG93aW5nOlxuXG4gICAgICAgIGBgYFxuICAgICAgICAgIGF1dGhlbnRpY2F0aW9uOlxuICAgICAgICAgICAgc2VjcmV0X25hbWU6IFNFQ1JFVC1OQU1FXG4gICAgICAgICAgICB0eXBlOiBiYXNpY1xuICAgICAgICBgYGBcblxuMy4gVG8gY29uZmlndXJlIHRoZSBjb3N0bWFuYWdlbWVudC1tZXRyaWNzLW9wZXJhdG9yIHRvIGNyZWF0ZSBhIGNvc3QgbWFuYWdlbWVudCBzb3VyY2UsIGVkaXQgdGhlIGZvbGxvd2luZyB2YWx1ZXMgaW4gdGhlIGBzb3VyY2VgIGZpZWxkOlxuICAgICogUmVwbGFjZSB0aGUgYG5hbWVgIGZpZWxkIHZhbHVlIHdpdGggdGhlIHByZWZlcnJlZCBuYW1lIG9mIHRoZSBzb3VyY2UgdG8gYmUgY3JlYXRlZC5cbiAgICAqIFJlcGxhY2UgdGhlIGBjcmVhdGVfc291cmNlYCBmaWVsZCB2YWx1ZSB3aXRoIGB0cnVlYC5cblxuICAgICoqTm90ZToqKiBpZiB0aGUgc291cmNlIGFscmVhZHkgZXhpc3RzLCByZXBsYWNlIHRoZSBlbXB0eSBzdHJpbmcgdmFsdWUgb2YgdGhlIGBuYW1lYCBmaWVsZCB3aXRoIHRoZSBleGlzdGluZyBuYW1lLCBhbmQgbGVhdmUgYGNyZWF0ZV9zb3VyY2VgIGFzIGZhbHNlLiBUaGlzIHdpbGwgYWxsb3cgdGhlIG9wZXJhdG9yIHRvIGNvbmZpcm0gdGhhdCB0aGUgc291cmNlIGV4aXN0cy5cblxuNC4gSWYgbm90IHNwZWNpZmllZCwgdGhlIG9wZXJhdG9yIHdpbGwgY3JlYXRlIGEgZGVmYXVsdCBQZXJzaXN0ZW50Vm9sdW1lQ2xhaW0gY2FsbGVkIGBjb3N0bWFuYWdlbWVudC1tZXRyaWNzLW9wZXJhdG9yLWRhdGFgIHdpdGggMTBHaSBvZiBzdG9yYWdlLiBUbyBjb25maWd1cmUgdGhlIGNvc3RtYW5hZ2VtZW50LW1ldHJpY3Mtb3BlcmF0b3IgdG8gdXNlIG9yIGNyZWF0ZSBhIGRpZmZlcmVudCBQVkMsIGVkaXQgdGhlIGZvbGxvd2luZyBpbiB0aGUgc3BlYzpcbiAgICAqIEFkZCB0aGUgZGVzaXJlZCBjb25maWd1cmF0aW9uIHRvIHRoZSBgdm9sdW1lX2NsYWltX3RlbXBsYXRlYCBmaWVsZCBpbiB0aGUgc3BlYzpcblxuICAgICAgYGBgXG4gICAgICAgIHZvbHVtZV9jbGFpbV90ZW1wbGF0ZTpcbiAgICAgICAgICBhcGlWZXJzaW9uOiB2MVxuICAgICAgICAgIGtpbmQ6IFBlcnNpc3RlbnRWb2x1bWVDbGFpbVxuICAgICAgICAgIG1ldGFkYXRhOlxuICAgICAgICAgICAgbmFtZTogXHUwMDNjaW5zZXJ0LW5hbWVcdTAwM2VcbiAgICAgICAgICBzcGVjOlxuICAgICAgICAgICAgYWNjZXNzTW9kZXM6XG4gICAgICAgICAgICAgIC0gUmVhZFdyaXRlT25jZVxuICAgICAgICAgICAgcmVzb3VyY2VzOlxuICAgICAgICAgICAgICByZXF1ZXN0czpcbiAgICAgICAgICAgICAgICBzdG9yYWdlOiAxMEdpXG4gICAgICBgYGBcblxuICAgICoqTm90ZToqKiBJZiB1c2luZyB0aGUgWUFNTCBWaWV3LCB0aGUgYHZvbHVtZV9jbGFpbV90ZW1wbGF0ZWAgZmllbGQgbXVzdCBiZSBhZGRlZCB0byB0aGUgc3BlY1xuNS4gU2VsZWN0IGBDcmVhdGVgLlxuXG4jIFJlc3RyaWN0ZWQgTmV0d29yayBVc2FnZSAoZGlzY29ubmVjdGVkL2Fpci1nYXBwZWQgbW9kZSlcbiMjIEluc3RhbGxhdGlvblxuVG8gaW5zdGFsbCB0aGUgYGNvc3RtYW5hZ2VtZW50LW1ldHJpY3Mtb3BlcmF0b3JgIGluIGEgcmVzdHJpY3RlZCBuZXR3b3JrLCBmb2xsb3cgdGhlIFtvbG0gZG9jdW1lbnRhdGlvbl0oaHR0cHM6Ly9kb2NzLm9wZW5zaGlmdC5jb20vY29udGFpbmVyLXBsYXRmb3JtL2xhdGVzdC9vcGVyYXRvcnMvYWRtaW4vb2xtLXJlc3RyaWN0ZWQtbmV0d29ya3MuaHRtbCkuIFRoZSBvcGVyYXRvciBpcyBmb3VuZCBpbiB0aGUgYGNvbW11bml0eS1vcGVyYXRvcnNgIENhdGFsb2cgaW4gdGhlIGByZWdpc3RyeS5yZWRoYXQuaW8vcmVkaGF0L2NvbW11bml0eS1vcGVyYXRvci1pbmRleDpsYXRlc3RgIEluZGV4LiBJZiBwcnVuaW5nIHRoZSBpbmRleCBiZWZvcmUgcHVzaGluZyB0byB0aGUgbWlycm9yZWQgcmVnaXN0cnksIGtlZXAgdGhlIGBjb3N0bWFuYWdlbWVudC1tZXRyaWNzLW9wZXJhdG9yYCBwYWNrYWdlLlxuXG5XaXRoaW4gYSByZXN0cmljdGVkIG5ldHdvcmssIHRoZSBvcGVyYXRvciBxdWVyaWVzIHByb21ldGhldXMgdG8gZ2F0aGVyIHRoZSBuZWNlc3NhcnkgdXNhZ2UgbWV0cmljcywgd3JpdGVzIHRoZSBxdWVyeSByZXN1bHRzIHRvIENTViBmaWxlcywgYW5kIHBhY2thZ2VzIHRoZSByZXBvcnRzIGZvciBzdG9yYWdlIGluIHRoZSBQVkMuIFRoZXNlIHJlcG9ydHMgdGhlbiBuZWVkIHRvIGJlIG1hbnVhbGx5IGRvd25sb2FkZWQgZnJvbSB0aGUgY2x1c3RlciBhbmQgdXBsb2FkZWQgdG8gW2NvbnNvbGUucmVkaGF0LmNvbV0oaHR0cHM6Ly9jb25zb2xlLnJlZGhhdC5jb20pLlxuXG4jIyBDb25maWd1cmUgdGhlIGNvc3RtYW5hZ2VtZW50LW1ldHJpY3Mtb3BlcmF0b3IgZm9yIGEgcmVzdHJpY3RlZCBuZXR3b3JrXG4jIyMjIyBDcmVhdGUgdGhlIENvc3RNYW5hZ2VtZW50TWV0cmljc0NvbmZpZ1xuQ29uZmlndXJlIHRoZSBjb3N0bWFuYWdlbWVudC1tZXRyaWNzLW9wZXJhdG9yIGJ5IGNyZWF0aW5nIGEgYENvc3RNYW5hZ2VtZW50TWV0cmljc0NvbmZpZ2AuXG4xLiBPbiB0aGUgbGVmdCBuYXZpZ2F0aW9uIHBhbmUsIHNlbGVjdCBgT3BlcmF0b3JzYCAtXHUwMDNlIGBJbnN0YWxsZWQgT3BlcmF0b3JzYCAtXHUwMDNlIGBjb3N0bWFuYWdlbWVudC1tZXRyaWNzLW9wZXJhdG9yYCAtXHUwMDNlIGBDb3N0TWFuYWdlbWVudE1ldHJpY3NDb25maWdgIC1cdTAwM2UgYENyZWF0ZSBJbnN0YW5jZWAuXG4yLiBTcGVjaWZ5IHRoZSBkZXNpcmVkIHN0b3JhZ2UuIElmIG5vdCBzcGVjaWZpZWQsIHRoZSBvcGVyYXRvciB3aWxsIGNyZWF0ZSBhIGRlZmF1bHQgUGVyc2lzdGVudCBWb2x1bWUgQ2xhaW0gY2FsbGVkIGBjb3N0bWFuYWdlbWVudC1tZXRyaWNzLW9wZXJhdG9yLWRhdGFgIHdpdGggMTBHaSBvZiBzdG9yYWdlLiBUbyBjb25maWd1cmUgdGhlIGNvc3RtYW5hZ2VtZW50LW1ldHJpY3Mtb3BlcmF0b3IgdG8gdXNlIG9yIGNyZWF0ZSBhIGRpZmZlcmVudCBQVkMsIGVkaXQgdGhlIGZvbGxvd2luZyBpbiB0aGUgc3BlYzpcbiAgICAqIEFkZCB0aGUgZGVzaXJlZCBjb25maWd1cmF0aW9uIHRvIHRoZSBgdm9sdW1lX2NsYWltX3RlbXBsYXRlYCBmaWVsZCBpbiB0aGUgc3BlYyAoYmVsb3cgaXMgb25seSBhIHRlbXBsYXRlLiBBbnkgX3ZhbGlkXyBgUGVyc2lzdGVudFZvbHVtZUNsYWltYCBtYXkgYmUgZGVmaW5lZCBoZXJlKTpcblxuICAgICAgYGBgXG4gICAgICAgIHZvbHVtZV9jbGFpbV90ZW1wbGF0ZTpcbiAgICAgICAgICBhcGlWZXJzaW9uOiB2MVxuICAgICAgICAgIGtpbmQ6IFBlcnNpc3RlbnRWb2x1bWVDbGFpbVxuICAgICAgICAgIG1ldGFkYXRhOlxuICAgICAgICAgICAgbmFtZTogXHUwMDNjaW5zZXJ0LW5hbWVcdTAwM2VcbiAgICAgICAgICBzcGVjOlxuICAgICAgICAgICAgc3RvcmFnZUNsYXNzTmFtZTogXHUwMDNjaW5zZXJ0LWNsYXNzLW5hbWVcdTAwM2VcbiAgICAgICAgICAgIGFjY2Vzc01vZGVzOlxuICAgICAgICAgICAgICAtIFJlYWRXcml0ZU9uY2VcbiAgICAgICAgICAgIHJlc291cmNlczpcbiAgICAgICAgICAgICAgcmVxdWVzdHM6XG4gICAgICAgICAgICAgICAgc3RvcmFnZTogMTBHaVxuICAgICAgYGBgXG5cbiAgICAqKk5vdGU6KiogSWYgdXNpbmcgdGhlIFlBTUwgVmlldywgdGhlIGB2b2x1bWVfY2xhaW1fdGVtcGxhdGVgIGZpZWxkIG11c3QgYmUgYWRkZWQgdG8gdGhlIHNwZWNcbjMuIChPcHRpb25hbCkgU3BlY2lmeSB0aGUgZGVzaXJlZCByZXBvcnQgcmV0ZW50aW9uLiBUaGUgb3BlcmF0b3Igd2lsbCByZXRhaW4gMzAgcmVwb3J0cyBieSBkZWZhdWx0LiBUaGlzIGNvcnJlc3BvbmRzIHRvIGFwcHJveGltYXRlbHkgb25lIHdlZWsncyB3b3J0aCBvZiBkYXRhIGlmIHVzaW5nIHRoZSBkZWZhdWx0IHBhY2thZ2luZyBjeWNsZS4gVG8gbW9kaWZ5IHRoZSBudW1iZXIgb2YgcmV0YWluZWQgcmVwb3J0czpcbiAgICAqIENoYW5nZSB0aGUgYHBhY2thZ2luZ2Agc3BlYyBmaWVsZCBgbWF4X3JlcG9ydHNfdG9fc3RvcmVgIHRvIHRoZSBkZXNpcmVkIG51bWJlciBvZiByZXBvcnRzIHRvIHJldGFpbi4gT25jZSB0aGlzIG1heCBudW1iZXIgaXMgcmVhY2hlZCwgdGhlIG9wZXJhdG9yIHdpbGwgc3RhcnQgcmVtb3ZpbmcgdGhlIG9sZGVzdCBwYWNrYWdlcyByZW1haW5pbmcgb24gdGhlIFBWQzpcblxuICAgICAgYGBgXG4gICAgICAgIHBhY2thZ2luZzpcbiAgICAgICAgICBtYXhfc2l6ZV9NQjogMTAwXG4gICAgICAgICAgbWF4X3JlcG9ydHNfdG9fc3RvcmU6IDMwXG4gICAgICBgYGBcblxuICAgICoqTm90ZToqKiBUaGUgbnVtYmVyIG9mIHJldGFpbmVkIHJlcG9ydHMgZGlyZWN0bHkgYWZmZWN0cyB0aGUgZnJlcXVlbmN5IHRoYXQgcmVwb3J0cyBtdXN0IGJlIG1hbnVhbGx5IGRvd25sb2FkZWQgZnJvbSB0aGUgUFZDLiBUYWtlIGNhdXRpb24gaW4gc2V0dGluZyB0aGlzIHRvIGEgaGlnaGVyIG51bWJlciBvZiByZXBvcnRzLCBhcyB0aGUgb3BlcmF0b3IgY2Fubm90IHdyaXRlIGRhdGEgdG8gdGhlIFBWQyBpZiB0aGUgc3RvcmFnZSBpcyBmdWxsLlxuNC4gVG8gY29uZmlndXJlIHRoZSBvcGVyYXRvciB0byBwZXJmb3JtIGluIGEgcmVzdHJpY3RlZCBuZXR3b3JrLCBzZXQgdGhlIGB1cGxvYWRfdG9nZ2xlYCB0byBgZmFsc2VgOlxuXG4gIGBgYFxuICAgIHVwbG9hZDpcbiAgICAgIHVwbG9hZF9jeWNsZTogMzYwXG4gICAgICB1cGxvYWRfdG9nZ2xlOiBmYWxzZVxuICBgYGBcblxuNS4gU2VsZWN0IGBDcmVhdGVgLlxuXG4jIyBEb3dubG9hZCByZXBvcnRzIGZyb20gdGhlIE9wZXJhdG9yIFx1MDAyNiBjbGVhbiB1cCB0aGUgUFZDXG5JZiB0aGUgYGNvc3RtYW5hZ2VtZW50LW1ldHJpY3Mtb3BlcmF0b3JgIGlzIGNvbmZpZ3VyZWQgdG8gcnVuIGluIGEgcmVzdHJpY3RlZCBuZXR3b3JrLCB0aGUgbWV0cmljIHJlcG9ydHMgd2lsbCBub3QgYXV0b21hdGljYWxseSB1cGxvYWQgdG8gY29zdCBtYW5hZ21lbnQuIEluc3RlYWQsIHRoZXkgbmVlZCB0byBiZSBtYW51YWxseSBjb3BpZWQgZnJvbSB0aGUgUFZDIGZvciB1cGxvYWQgdG8gW2NvbnNvbGUucmVkaGF0LmNvbV0oaHR0cHM6Ly9jb25zb2xlLnJlZGhhdC5jb20pLiBUaGUgZGVmYXVsdCBjb25maWd1cmF0aW9uIHNhdmVzIG9uZSB3ZWVrIG9mIHJlcG9ydHMgd2hpY2ggbWVhbnMgdGhlIHByb2Nlc3Mgb2YgZG93bmxvYWRpbmcgYW5kIHVwbG9hZGluZyByZXBvcnRzIHNob3VsZCBiZSByZXBlYXRlZCB3ZWVrbHkgdG8gcHJldmVudCBsb3NzIG9mIG1ldHJpY3MgZGF0YS4gVG8gZG93bmxvYWQgdGhlIHJlcG9ydHMsIGNvbXBsZXRlIHRoZSBmb2xsb3dpbmcgc3RlcHM6XG4xLiBDcmVhdGUgdGhlIGZvbGxvd2luZyBQb2QsIGVuc3VyaW5nIHRoZSBgY2xhaW1OYW1lYCBtYXRjaGVzIHRoZSBQVkMgY29udGFpbmluZyB0aGUgcmVwb3J0IGRhdGE6XG5cbiAgYGBgXG4gICAga2luZDogUG9kXG4gICAgYXBpVmVyc2lvbjogdjFcbiAgICBtZXRhZGF0YTpcbiAgICAgIG5hbWU6IHZvbHVtZS1zaGVsbFxuICAgICAgbmFtZXNwYWNlOiBjb3N0bWFuYWdlbWVudC1tZXRyaWNzLW9wZXJhdG9yXG4gICAgICBsYWJlbHM6XG4gICAgICAgIGFwcDogY29zdG1hbmFnZW1lbnQtbWV0cmljcy1vcGVyYXRvclxuICAgIHNwZWM6XG4gICAgICB2b2x1bWVzOlxuICAgICAgLSBuYW1lOiBjb3N0bWFuYWdlbWVudC1tZXRyaWNzLW9wZXJhdG9yLXJlcG9ydHNcbiAgICAgICAgcGVyc2lzdGVudFZvbHVtZUNsYWltOlxuICAgICAgICAgIGNsYWltTmFtZTogY29zdG1hbmFnZW1lbnQtbWV0cmljcy1vcGVyYXRvci1kYXRhXG4gICAgICBjb250YWluZXJzOlxuICAgICAgLSBuYW1lOiB2b2x1bWUtc2hlbGxcbiAgICAgICAgaW1hZ2U6IGJ1c3lib3hcbiAgICAgICAgY29tbWFuZDogWydzbGVlcCcsICdpbmZpbml0eSddXG4gICAgICAgIHZvbHVtZU1vdW50czpcbiAgICAgICAgLSBuYW1lOiBjb3N0bWFuYWdlbWVudC1tZXRyaWNzLW9wZXJhdG9yLXJlcG9ydHNcbiAgICAgICAgICBtb3VudFBhdGg6IC90bXAvY29zdG1hbmFnZW1lbnQtbWV0cmljcy1vcGVyYXRvci1yZXBvcnRzXG4gIGBgYFxuXG4yLiBVc2UgcnN5bmMgdG8gY29weSBhbGwgb2YgdGhlIGZpbGVzIHJlYWR5IGZvciB1cGxvYWQgZnJvbSB0aGUgUFZDIHRvIGEgbG9jYWwgZm9sZGVyOlxuXG4gIGBgYFxuICAkIG9jIHJzeW5jIHZvbHVtZS1zaGVsbDovdG1wL2Nvc3RtYW5hZ2VtZW50LW1ldHJpY3Mtb3BlcmF0b3ItcmVwb3J0cy91cGxvYWQgbG9jYWwvcGF0aC90by9zYXZlL2ZvbGRlclxuICBgYGBcblxuMy4gT25jZSBjb25maXJtaW5nIHRoYXQgdGhlIGZpbGVzIGhhdmUgYmVlbiBzdWNjZXNzZnVsbHkgY29waWVkLCB1c2UgcnNoIHRvIGNvbm5lY3QgdG8gdGhlIHBvZCBhbmQgZGVsZXRlIHRoZSBjb250ZW50cyBvZiB0aGUgdXBsb2FkIGZvbGRlciBzbyB0aGF0IHRoZXkgYXJlIG5vIGxvbmdlciBpbiBzdG9yYWdlOlxuXG4gIGBgYFxuICAkIG9jIHJzaCB2b2x1bWUtc2hlbGxcbiAgJCBybSAvdG1wL2Nvc3RtYW5hZ2VtZW50LW1ldHJpY3Mtb3BlcmF0b3ItcmVwb3J0cy91cGxvYWQvKlxuICBgYGBcblxuNC4gKE9wdGlvbmFsKSBEZWxldGUgdGhlIHBvZCB0aGF0IHdhcyB1c2VkIHRvIGNvbm5lY3QgdG8gdGhlIFBWQzpcblxuICBgYGBcbiAgJCBvYyBkZWxldGUgLWYgdm9sdW1lLXNoZWxsLnlhbWxcbiAgYGBgXG5cbiMjIENyZWF0ZSBhIFNvdXJjZVxuSW4gYSByZXN0cmljdGVkIG5ldHdvcmssIHRoZSBgY29zdG1hbmFnZW1lbnQtbWV0cmljcy1vcGVyYXRvcmAgY2Fubm90IGF1dG9tYXRpY2FsbHkgY3JlYXRlIGEgc291cmNlLiBUaGlzIHByb2Nlc3MgbXVzdCBiZSBkb25lIG1hbnVhbGx5LiBJbiB0aGUgY29uc29sZS5yZWRoYXQuY29tIHBsYXRmb3JtLCBvcGVuIHRoZSBbU291cmNlcyBtZW51XShodHRwczovL2NvbnNvbGUucmVkaGF0LmNvbS9zZXR0aW5ncy9zb3VyY2VzLykgdG8gYmVnaW4gYWRkaW5nIGFuIE9wZW5TaGlmdCBzb3VyY2UgdG8gQ29zdCBNYW5hZ2VtZW50OlxuXG5QcmVyZXF1aXNpdGVzOlxuKiBUaGUgY2x1c3RlciBpZGVudGlmaWVyIHdoaWNoIGNhbiBiZSBmb3VuZCBpbiB0aGUgQ29zdE1hbmFnZW1lbnRNZXRyaWNzQ29uZmlnIENSLCB0aGUgY2x1c3RlciBPdmVydmlldyBwYWdlLCBvciB0aGUgY2x1c3RlciBIZWxwIFx1MDAzZSBBYm91dC5cblxuQ3JlYXRpbmcgYSBzb3VyY2U6XG4xLiBOYXZpZ2F0ZSB0byB0aGUgU291cmNlcyBtZW51XG4yLiBTZWxlY3QgdGhlIGBSZWQgSGF0YCB0YWJcbjMuIENyZWF0ZSBhIG5ldyBgUmVkIEhhdCBPcGVuc2hpZnQgQ29udGFpbmVyIFBsYXRmb3JtYCBzb3VyY2U6XG4gICAgKiBnaXZlIHRoZSBzb3VyY2UgYSB1bmlxdWUgbmFtZVxuICAgICogYWRkIHRoZSBDb3N0IE1hbmFnZW1lbnQgYXBwbGljYXRpb25cbiAgICAqIGFkZCB0aGUgY2x1c3RlciBpZGVudGlmaWVyXG40LiBJbiB0aGUgU291cmNlIHdpemFyZCwgcmV2aWV3IHRoZSBkZXRhaWxzIGFuZCBjbGljayBgRmluaXNoYCB0byBjcmVhdGUgdGhlIHNvdXJjZS5cblxuIyMgVXBsb2FkIHRoZSByZXBvcnRzIHRvIGNvc3QgbWFuYWdtZW50XG5VcGxvYWRpbmcgcmVwb3J0cyB0byBjb3N0IG1hbmFnbWVudCBpcyBkb25lIHRocm91Z2ggY3VybDpcblxuICAgICQgY3VybCAtdnZ2diAtRiBcImZpbGU9QEZJTEVfTkFNRS50YXIuZ3o7dHlwZT1hcHBsaWNhdGlvbi92bmQucmVkaGF0LmhjY20udGFyK3RnelwiICBodHRwczovL2NvbnNvbGUucmVkaGF0LmNvbS9hcGkvaW5ncmVzcy92MS91cGxvYWQgLXUgVVNFUk5BTUU6UEFTU1xuXG53aGVyZSBgVVNFUk5BTUVgIGFuZCBgUEFTU2AgY29ycmVzcG9uZCB0byB0aGUgdXNlciBjcmVkZW50aWFscyBmb3IgW2NvbnNvbGUucmVkaGF0LmNvbV0oaHR0cHM6Ly9jb25zb2xlLnJlZGhhdC5jb20pLCBhbmQgYEZJTEVfTkFNRWAgaXMgdGhlIG5hbWUgb2YgdGhlIHJlcG9ydCB0byB1cGxvYWQuIiwiZGlzcGxheU5hbWUiOiJDb3N0IE1hbmFnZW1lbnQgTWV0cmljcyBPcGVyYXRvciIsImljb24iOlt7ImJhc2U2NGRhdGEiOiJQRDk0Yld3Z2RtVnljMmx2YmowaU1TNHdJaUJsYm1OdlpHbHVaejBpZFhSbUxUZ2lQejRLUENFdExTQkhaVzVsY21GMGIzSTZJRUZrYjJKbElFbHNiSFZ6ZEhKaGRHOXlJREl5TGpFdU1Dd2dVMVpISUVWNGNHOXlkQ0JRYkhWbkxVbHVJQzRnVTFaSElGWmxjbk5wYjI0NklEWXVNREFnUW5WcGJHUWdNQ2tnSUMwdFBnbzhjM1puSUhabGNuTnBiMjQ5SWpFdU1TSWdhV1E5SWt4aGVXVnlYekVpSUhodGJHNXpQU0pvZEhSd09pOHZkM2QzTG5jekxtOXlaeTh5TURBd0wzTjJaeUlnZUcxc2JuTTZlR3hwYm1zOUltaDBkSEE2THk5M2QzY3Vkek11YjNKbkx6RTVPVGt2ZUd4cGJtc2lJSGc5SWpCd2VDSWdlVDBpTUhCNElnb0pJSFpwWlhkQ2IzZzlJakFnTUNBek1EQWdNekF3SWlCemRIbHNaVDBpWlc1aFlteGxMV0poWTJ0bmNtOTFibVE2Ym1WM0lEQWdNQ0F6TURBZ016QXdPeUlnZUcxc09uTndZV05sUFNKd2NtVnpaWEoyWlNJK0NqeHpkSGxzWlNCMGVYQmxQU0owWlhoMEwyTnpjeUkrQ2drdWMzUXdlMlpwYkd3NkkwVkZNREF3TUR0OUNqd3ZjM1I1YkdVK0NqeDBhWFJzWlQ1RGIzTjBMV2xqYjI0OEwzUnBkR3hsUGdvOFpHVnpZejVEY21WaGRHVmtJSGRwZEdnZ1UydGxkR05vTGp3dlpHVnpZejRLUEdjK0NnazhaejRLQ1FrOGNHRjBhQ0JqYkdGemN6MGljM1F3SWlCa1BTSk5Nak01TGpBek56QXpNekVzTVRFM0xqSTNOVEUzTjJNdE15NHlOalU0TURneExUUXhMams0T1RBMU1UZ3RNemd1TWpVMk5qZ3pNeTAzTkM0Mk5EY3lNREUxTFRneExqRTNPRGd6TXkwM05DNDJORGN5TURFMUNna0pDV010TWpjdU5USTJNVFV6Tml3d0xUVXpMakU0TmpFeU5qY3NNVE11T1RrMk16UTVNeTAyT0M0eE1UVTFOekF4TERNM0xqTXlNell3TURoakxURXVPRFkyTVRnd05Dd3dMVE11TnpNeU16VXpNaTB3TGpRMk5qVTBOVEV0Tmk0d05qVXdOemczTFRBdU5EWTJOVFExTVFvSkNRbGpMVE0wTGpVeU5ETXpNREVzTUMwMk1pNDVPRE0xTnpjM0xESTNMams1TWpZNU9EY3ROakl1T1Rnek5UYzNOeXcyTWk0NU9ETTFOall6Y3pJM0xqazVNalk1T0Rjc05qSXVPVGd6TlRZMk15dzJNaTQ1T0RNMU56YzNMRFl5TGprNE16VTJOak5vTVRZdU16STVNRGN4Q2drSkNXTXpMamN6TWpNMk1EZ3NNQ3cyTGprNU9ERTNOall0TXk0eU5qVTRNRGd4TERZdU9UazRNVGMyTmkwMkxqazVPREUyT0RsekxUTXVNalkxT0RFMU55MDJMams1T0RFMk9Ea3ROaTQ1T1RneE56WTJMVFl1T1RrNE1UWTRPV2d0TVRZdU16STVNRGN4Q2drSkNXTXRNamN1TURVNU5qRXlNeXd3TFRRNExqVXlNRFkzT1RVdE1qRXVPVEkzTmpJM05pMDBPQzQxTWpBMk56azFMVFE0TGpVeU1EWTNOVGR6TWpFdU9USTNOakV5TXkwME9DNDFNakEyT0RNekxEUTRMalV5TURZM09UVXRORGd1TlRJd05qZ3pNd29KQ1Fsak1pNDNPVGt5TnpBMkxEQXNOUzQxT1RnMU5ERXpMREF1TkRZMk5UUTFNU3c0TGpNNU56Z3dORE1zTUM0NU16TXdPVEF5WXpJdU56azVNamN3Tml3d0xqUTJOalUwTlRFc05pNHdOalV3TnpnM0xUQXVPVE16TURrd01pdzNMalEyTkRjeU1UY3RNeTQzTXpJek5qQTRDZ2tKQ1dNeE1pNHhNekF4TnpJM0xUSXdMams1TkRVeU9UY3NNelF1TlRJME16TXdNUzB6TkM0d05UYzNPRGc0TERVNExqTXhPREV5TWprdE16UXVNRFUzTnpnNE9HTXpOaTQ0TlRjd056QTVMREFzTmpjdU1UZ3lORGsxTVN3ek1DNHpNalUwTWpBMExEWTNMakU0TWpRNU5URXNOamN1TVRneU5EYzVPUW9KQ1Fsak1Dd3pMamN6TWpNMU16SXNNeTR5TmpVNE1EZ3hMRFl1T1RrNE1UYzJOaXcyTGprNU9ERTJPRGtzTmk0NU9UZ3hOelkyWXpFMkxqTXlPVEEzTVN3d0xESTVMamcxT0Rrd01pd3hNeTQxTWprNE1EQTBMREk1TGpnMU9Ea3dNaXd5T1M0NE5UZzROekUxQ2drSkNYTXRNVE11TlRJNU9ETXdPU3d5T1M0NE5UZzRPRFkzTFRJNUxqZzFPRGt3TWl3eU9TNDROVGc0T0RZM1l5MHpMamN6TWpNMk1EZ3NNQzAyTGprNU9ERTJPRGtzTXk0eU5qVTRNRGd4TFRZdU9UazRNVFk0T1N3MkxqazVPREUyT0RrS0NRa0pjek11TWpZMU9EQTRNU3cyTGprNU9ERTJPRGtzTmk0NU9UZ3hOamc1TERZdU9UazRNVFk0T1dNeU5DNHlOakF6TXpBeUxEQXNORFF1TXpJeE56WXlNUzB5TUM0d05qRTBNVFkyTERRMExqTXlNVGMyTWpFdE5EUXVNekl4TnpZeU1Rb0pDUWxETWpjMkxqTTJNRFl5TmpJc01UTTVMakl3TWpjNE9UTXNNall3TGpBek1UVTFOVElzTVRJd0xqVTBNRGs1TWpjc01qTTVMakF6TnpBek16RXNNVEUzTGpJM05URTNOM29pTHo0S0NRazhjR0YwYUNCamJHRnpjejBpYzNRd0lpQmtQU0pOTWpBMkxqZzBOVFF5T0RVc01qSXdMamcwT0RFM05XTTNMalEyTkRjd05qUXRPQzQ0TmpRek5qUTJMREV4TGpZMk16WXlMVEl3TGpVeU56azRORFlzTVRFdU5qWXpOakl0TXpJdU5qVTRNVFUzTXdvSkNRbGpNQzB5T0M0NU1qVTNPVFkxTFRJekxqTXlOekkwTFRVeUxqSTFNekF6TmpVdE5USXVNalV6TURNMk5TMDFNaTR5TlRNd016WTFjeTAxTWk0eU5UTXdORFF4TERJekxqTXlOekkwTFRVeUxqSTFNekEwTkRFc05USXVNalV6TURNMk5Rb0pDUWx6TWpNdU16STNNalEzTml3MU1pNHlOVE13TlRFNExEVXlMakkxTXpBME5ERXNOVEl1TWpVek1EVXhPR014TVM0eE9UY3dPREkxTERBc01qRXVPVEkzTmpFeU15MHpMamN6TWpNMk1EZ3NNekF1TXpJMU5ESTBNaTA1TGpjNU56UXpPVFpzTXpFdU56STFNRFV4T1N3ek1DNDNPVEU1TmpFM0Nna0pDV014TGpNNU9UWXlOemNzTVM0ek9UazJNamMzTERNdU1qWTFPREl6TkN3eExqZzJOakU0TURRc05TNHhNekU1T0RnMUxERXVPRFkyTVRnd05HTXhMamcyTmpFNU5UY3NNQ3d6TGpjek1qTTJNRGd0TUM0NU16TXdOelVzTlM0eE16RTVPRGcxTFRJdU16TXlOek16TWdvSkNRbGpNaTQzT1RreU56QTJMVEl1TnprNU1qVTFOQ3d5TGpjNU9USTNNRFl0Tnk0ME5qUTNNRFkwTERBdE1UQXVNall6T1RjM01Vd3lNRFl1T0RRMU5ESTROU3d5TWpBdU9EUTRNVGMxZWlCTk1USTRMalEyTlRnMk5qRXNNVGc0TGpFNU1EQXhOemNLQ1FrSll6QXRNakF1T1RrME5USXlNU3d4Tnk0eU5qSXhOelkxTFRNNExqSTFOalk1T0RZc016Z3VNalUyTmprNE5pMHpPQzR5TlRZMk9UZzJjek00TGpJMU5qWTVPRFlzTVRjdU1qWXlNVGMyTlN3ek9DNHlOVFkyT1RnMkxETTRMakkxTmpZNU9EWUtDUWtKY3kweE55NHlOakl4TnpZMUxETTRMakkxTmpZNU9EWXRNemd1TWpVMk5qazROaXd6T0M0eU5UWTJPVGcyVXpFeU9DNDBOalU0TmpZeExESXdPUzR4T0RRMU16azRMREV5T0M0ME5qVTROall4TERFNE9DNHhPVEF3TVRjM2VpSXZQZ29KUEM5blBnb0pQR2MrQ2drSlBIQmhkR2dnWTJ4aGMzTTlJbk4wTUNJZ1pEMGlUVEUzTkM0eU9EQTJNemsyTERFNE5TNDROek0yTVRFMVl6SXVNakUyTWpjNE1Td3dMalk0TmpVek9EY3NOQzR4TVRBd016RXhMREV1T0Rjd056RXlNeXcxTGpZM05qWXpOVGNzTXk0MU5USTFNRFUxQ2drSkNXTXhMalUyTmpZd05EWXNNUzQyT0RFNE1EZzFMREl1TlRrNE56QTVNU3d6TGpZME9USTJNVFVzTXk0d09URTNNelU0TERVdU9UQXlOREEwT0dNd0xqUTVOell4T1RZc01pNHlOVE14TkRNekxEQXVNell6T1RrNE5DdzBMalV5T1RNeU56UXRNQzQwTURBNE56ZzVMRFl1T0RFNU16TTFPUW9KQ1FsakxUQXVPVEUyT1RFMU9Td3lMalV5TURNNE5UY3RNaTQwT0RNMU1qQTFMRFF1TlRJNU16RXlNUzAwTGpZNU9UYzVPRFlzTmk0d01UYzFPVE0wWXkweUxqSXhOakkyTWpnc01TNDBPRGd5T0RFeUxUUXVOamsxTWpBMU55d3lMakkzTVRVM05Ua3ROeTQwTlRBMU56WTRMREl1TXpRNU9EazVNd29KQ1FsMk5TNDFNREUxTlRZMFl6QXNNQzQxTXpRME9EUTVMVEF1TVRjd05EY3hNaXd3TGprM01qSXhNemN0TUM0MU1URTBOVGswTERFdU16RTNOemM1TldNdE1DNHpORFUxTmpVNExEQXVNelExTlRneE1TMHdMamM0TXpJNU5EY3NNQzQxTVRZd05qYzFMVEV1TXpJeU16ZzNOeXd3TGpVeE5qQTJOelVLQ1FrSmFDMHpMalkyTnpZNU5ERmpMVEF1TlRNME5UQXdNU3d3TFRBdU9UY3lNakV6Tnkwd0xqRTNNRFE0TmpVdE1TNHpNVGMzTnprMUxUQXVOVEUyTURZM05XTXRNQzR6TkRBNU56STVMVEF1TXpRMU5UWTFPQzB3TGpVeE5qQTJOelV0TUM0M09ETXlPVFEzTFRBdU5URTJNRFkzTlMweExqTXhOemMzT1RVS0NRa0pkaTAxTGpVd01UVTFOalJqTFRNdU5qWTNOamswTVN3d0xUWXVPVGc1T0RJeU5DMHhMakUwTnpJNU16RXRPUzQ1TmpnMk5UZzBMVE11TkRNM016QXhObU10TUM0ek9ESTBORFl6TFRBdU16Z3lORE14TFRBdU5qRXlPREl6TlMwd0xqZzBNekl3TURjdE1DNDJPRGc0TkRJNExURXVNemMzTnpBd09Bb0pDUWxqTFRBdU1EYzJNRE0wTlMwd0xqVXpORFE0TkRrc01DNHhNVFV4T0RnMkxURXVNRE15TVRBME5Td3dMalUzTXpZek9Ea3RNUzQwT0RneU5UQTNiRE11T0RrMU56Z3lOUzB6TGpnNU9EQTROalVLQ1FrSll6QXVNekE0TnpBd05pMHdMakl6TURNNU1qVXNNQzQyTmpneE1EWXhMVEF1TXpneU5ETXhMREV1TURreU1ERXdOUzB3TGpRMU5qRTJNVFZqTUM0ME1Ua3lPVFl6TFRBdU1EYzRNekl6TkN3d0xqZ3lNREUxT1Rrc01DNHdNelk0TlN3eExqSXdNall3TmpJc01DNHpOREE1TnpJNUNna0pDV014TGpFME56STVNekVzTUM0M05qUTROemN6TERJdU5EUXlNRFEzTVN3eExqRTBOek13T0RNc015NDRPVE0wTmpNeExERXVNVFEzTXpBNE0yZzNMalk0TURrMU5HTXdMamt4TmprME5qUXNNQ3d4TGpjd01ESTBNVEV0TUM0ek1qSTFOREF6TERJdU16UTVPRGs1TXkwd0xqazNNakl4TXpjS0NRa0pZekF1TmpRNU5qZzROeTB3TGpZME9UWTRPRGNzTUM0NU56SXlNamt0TVM0ME56UTBOVFk0TERBdU9UY3lNakk1TFRJdU5EWTFNVEF6TVdNd0xUQXVOamcyTlRVMExUQXVNakkxTnpZNUxURXVNek0yTWpJM05DMHdMalk0TmpVek9EY3RNUzQ1TkRrd016VTJDZ2tKQ1dNdE1DNDBOVFl4TmpFMUxUQXVOakV5T0RJek5TMHhMakF6TWpFeE9UZ3RNUzR3TXpJeE1UazRMVEV1TnpFNE5qUXpNaTB4TGpJMk1qUTVOamxzTFRFeExqZ3dORGcwTURFdE15NDBNemN6TVRZNUNna0pDV010TWk0MU9UZzJPVE00TFRBdU56WTBPRGMzTXkwMExqYzNNelV5T1RFdE1pNHhNemM1TlRRM0xUWXVOVE16TmpRMU5pMDBMakV5T0RRME9EVmpMVEV1TnpVM09ERXlOUzB4TGprNE5Ua3dNRGt0TWk0M09EYzJORE0wTFRRdU1qYzFPVEkwTnkwekxqQTVOREF6T1RrdE5pNDROelEyTXpNNENna0pDV010TUM0eE5USXdOVE00TFRJdU5EUTJOalUxTXl3d0xqTXdOak01TmpVdE5DNDNNVGd5TXpFeUxERXVNemMxTXprMk55MDJMamd4T1RNek5UbGpNUzR3TmpnNU5qazNMVEl1TVRBeE1EZzVOU3d5TGpVNU9EY3dPVEV0TXk0M09ESTRPREkzTERRdU5UZzBOakV0TlM0d05EVXpOemsyQ2drSkNXTXhMams0TlRrd01Ea3RNUzR5TlRjNE9EZzRMRFF1TWpBeU1UYzVMVEV1T0RnNU1USTVOaXcyTGpZME9EZzBPVFV0TVM0NE9Ea3hNamsyYURBdU1qSTFOelk1ZGkwMUxqVXdNVFUwTVRFS0NRa0pZekF0TUM0MU16UTFNREF4TERBdU1UYzFNRGswTmkwd0xqazNNakl5T1N3d0xqVXhOakEyTnpVdE1TNHpNVGMzT1RRNFl6QXVNelExTlRZMU9DMHdMak0wTlRVNE1URXNNQzQzT0RNeU56azBMVEF1TlRFMk1EVXlNaXd4TGpNeE56YzNPVFV0TUM0MU1UWXdOVEl5YURNdU5qWTNOamswTVFvSkNRbGpNQzQxTXprd09UTXNNQ3d3TGprM05qZ3lNVGtzTUM0eE56QTBOekV5TERFdU16SXlNemczTnl3d0xqVXhOakExTWpKak1DNHpOREE1T0RneUxEQXVNelExTlRZMU9Dd3dMalV4TVRRMU9UUXNNQzQzT0RNeU9UUTNMREF1TlRFeE5EVTVOQ3d4TGpNeE56YzVORGgyTlM0MU1ERTFOREV4Q2drSkNXTXpMalkyTnpZNU5ERXNNQ3cyTGprMU56VTJOVE1zTVM0eE5EY3lPVE14TERrdU9EWXdNemd5TVN3ekxqUXpOek13TVRaak1DNDBOVFl4TnpZNExEQXVNemd5TkRRMk15d3dMamN5TXpReE9USXNNQzQ0TkRNeU1EQTNMREF1T0RBeE56UXlOaXd4TGpNM056WTROVFVLQ1FrSll6QXVNRGN6TnpFMU1pd3dMalV6TkRVd01ERXRNQzR4TVRVeU1ETTVMREF1T1Rrd05qUTJOQzB3TGpVM01UTTFNREVzTVM0ek56TXdOemMwYkMwekxqZzVPREE0TmpVc05DNHdNVE15TnpVeENna0pDV010TUM0ek1EZzNNVFU0TERBdU1qTXdNemt5TlMwd0xqWTJPREV3TmpFc01DNHpPREkwTXpFdE1TNHdPVEl3TVRBMUxEQXVORFUyTVRZeE5XTXRNQzQwTVRreU9UWXpMREF1TURjNE16SXpOQzB3TGpneU1ERTFPVGtzTUMweExqSXdNalU1TURrdE1DNHlNalUzTmprS0NRa0pZeTB4TGpFME1qY3hOVFV0TUM0NE5ETXlNREEzTFRJdU5EUXlNRGMzTmkweExqSTJNalE1TmprdE15NDRPVGd3T0RZMUxURXVNall5TkRrMk9XZ3ROeTQyTnpZek5qRXhZeTB3TGpreE5qa3hOVGtzTUMweExqY3dNREl5TlRnc01DNHpNakkxTWpVdE1pNHpORGs0T1RrekxEQXVPVGN5TWpFek53b0pDUWxqTFRBdU5qUTVOamc0Tnl3d0xqWTBPVFkzTXpVdE1DNDVOelk0TWpFNUxERXVORGMwTkRReE5TMHdMamszTmpneU1Ua3NNaTQwTmpVd09EYzVZekFzTUM0Mk9EWTFOVFFzTUM0eU16QXpPVEkxTERFdU16TTJNakV5TWl3d0xqWTVNVEUwTmprc01TNDVORGt3TXpVMkNna0pDV013TGpRMU5qRTJNVFVzTUM0Mk1USTRNak0xTERFdU1ETXlNVEU1T0N3eExqQXpNakV4T1Rnc01TNDNNVGcyTlRnMExERXVNall5TkRrMk9Vd3hOelF1TWpnd05qTTVOaXd4T0RVdU9EY3pOakV4TlhvaUx6NEtDVHd2Wno0S1BDOW5QZ284TDNOMlp6NEsiLCJtZWRpYXR5cGUiOiJpbWFnZS9zdmcreG1sIn1dLCJpbnN0YWxsIjp7InNwZWMiOnsiY2x1c3RlclBlcm1pc3Npb25zIjpbeyJydWxlcyI6W3siYXBpR3JvdXBzIjpbImNvbmZpZy5vcGVuc2hpZnQuaW8iXSwicmVzb3VyY2VzIjpbImNsdXN0ZXJ2ZXJzaW9ucyJdLCJ2ZXJicyI6WyJnZXQiLCJsaXN0Iiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsiIl0sInJlc291cmNlcyI6WyJjb25maWdtYXBzIl0sInZlcmJzIjpbImdldCIsImxpc3QiLCJ3YXRjaCJdfSx7ImFwaUdyb3VwcyI6WyIiXSwicmVzb3VyY2VzIjpbIm5hbWVzcGFjZXMiXSwidmVyYnMiOlsiZ2V0IiwibGlzdCIsIndhdGNoIl19LHsiYXBpR3JvdXBzIjpbIiJdLCJyZXNvdXJjZXMiOlsic2VjcmV0cyJdLCJ2ZXJicyI6WyJnZXQiXX1dLCJzZXJ2aWNlQWNjb3VudE5hbWUiOiJjb3N0bWFuYWdlbWVudC1tZXRyaWNzLWNvbnRyb2xsZXItbWFuYWdlciJ9XSwiZGVwbG95bWVudHMiOlt7ImxhYmVsIjp7ImFwcCI6ImNvc3RtYW5hZ2VtZW50LW1ldHJpY3Mtb3BlcmF0b3IiLCJjb250cm9sLXBsYW5lIjoiY29udHJvbGxlci1tYW5hZ2VyIn0sIm5hbWUiOiJjb3N0bWFuYWdlbWVudC1tZXRyaWNzLW9wZXJhdG9yIiwic3BlYyI6eyJyZXBsaWNhcyI6MSwic2VsZWN0b3IiOnsibWF0Y2hMYWJlbHMiOnsiYXBwIjoiY29zdG1hbmFnZW1lbnQtbWV0cmljcy1vcGVyYXRvciIsImNvbnRyb2wtcGxhbmUiOiJjb250cm9sbGVyLW1hbmFnZXIifX0sInN0cmF0ZWd5Ijp7fSwidGVtcGxhdGUiOnsibWV0YWRhdGEiOnsibGFiZWxzIjp7ImFwcCI6ImNvc3RtYW5hZ2VtZW50LW1ldHJpY3Mtb3BlcmF0b3IiLCJjb250cm9sLXBsYW5lIjoiY29udHJvbGxlci1tYW5hZ2VyIn19LCJzcGVjIjp7ImNvbnRhaW5lcnMiOlt7ImFyZ3MiOlsiLS1sZWFkZXItZWxlY3QiXSwiY29tbWFuZCI6WyIvdXNyL2Jpbi9jb3N0bWFuYWdlbWVudC1tZXRyaWNzLW9wZXJhdG9yIl0sImVudiI6W3sibmFtZSI6IklOX0NMVVNURVIiLCJ2YWx1ZSI6InRydWUifSx7Im5hbWUiOiJXQVRDSF9OQU1FU1BBQ0UiLCJ2YWx1ZUZyb20iOnsiZmllbGRSZWYiOnsiZmllbGRQYXRoIjoibWV0YWRhdGEuYW5ub3RhdGlvbnNbJ29sbS50YXJnZXROYW1lc3BhY2VzJ10ifX19XSwiaW1hZ2UiOiJyZWdpc3RyeS5yZWRoYXQuaW8vY29zdG1hbmFnZW1lbnQvY29zdG1hbmFnZW1lbnQtbWV0cmljcy1yaGVsOC1vcGVyYXRvckBzaGEyNTY6Mjk3NWFkNzcyZmE3OWFkYTU5OGFiNWYwNTRlMmNiZDgyMWRjYjczNGJkN2IxMWQwY2JjN2IzOGQ3YjI5YmU1NCIsIm5hbWUiOiJtYW5hZ2VyIiwicmVzb3VyY2VzIjp7ImxpbWl0cyI6eyJjcHUiOiI1MDBtIiwibWVtb3J5IjoiNTAwTWkifSwicmVxdWVzdHMiOnsiY3B1IjoiMTAwbSIsIm1lbW9yeSI6IjIwTWkifX0sInRlcm1pbmF0aW9uTWVzc2FnZVBvbGljeSI6IkZhbGxiYWNrVG9Mb2dzT25FcnJvciIsInZvbHVtZU1vdW50cyI6W3sibW91bnRQYXRoIjoiL3RtcC9jb3N0bWFuYWdlbWVudC1tZXRyaWNzLW9wZXJhdG9yLXJlcG9ydHMiLCJuYW1lIjoiY29zdG1hbmFnZW1lbnQtbWV0cmljcy1vcGVyYXRvci1yZXBvcnRzIn1dfV0sInNlcnZpY2VBY2NvdW50TmFtZSI6ImNvc3RtYW5hZ2VtZW50LW1ldHJpY3MtY29udHJvbGxlci1tYW5hZ2VyIiwidGVybWluYXRpb25HcmFjZVBlcmlvZFNlY29uZHMiOjEwLCJ2b2x1bWVzIjpbeyJuYW1lIjoiY29zdG1hbmFnZW1lbnQtbWV0cmljcy1vcGVyYXRvci1yZXBvcnRzIn1dfX19fV0sInBlcm1pc3Npb25zIjpbeyJydWxlcyI6W3siYXBpR3JvdXBzIjpbIiJdLCJyZXNvdXJjZXMiOlsiY29uZmlnbWFwcyJdLCJ2ZXJicyI6WyJnZXQiLCJsaXN0Iiwid2F0Y2giLCJjcmVhdGUiLCJ1cGRhdGUiLCJwYXRjaCIsImRlbGV0ZSJdfSx7ImFwaUdyb3VwcyI6WyIiXSwicmVzb3VyY2VzIjpbImNvbmZpZ21hcHMvc3RhdHVzIl0sInZlcmJzIjpbImdldCIsInVwZGF0ZSIsInBhdGNoIl19LHsiYXBpR3JvdXBzIjpbIiJdLCJyZXNvdXJjZXMiOlsiZXZlbnRzIl0sInZlcmJzIjpbImNyZWF0ZSIsInBhdGNoIl19LHsiYXBpR3JvdXBzIjpbImNvb3JkaW5hdGlvbi5rOHMuaW8iXSwicmVzb3VyY2VzIjpbImxlYXNlcyJdLCJ2ZXJicyI6WyJnZXQiLCJsaXN0Iiwid2F0Y2giLCJjcmVhdGUiLCJ1cGRhdGUiLCJwYXRjaCIsImRlbGV0ZSJdfSx7ImFwaUdyb3VwcyI6WyJhcHBzIl0sInJlc291cmNlcyI6WyJkZXBsb3ltZW50cyJdLCJ2ZXJicyI6WyJnZXQiLCJsaXN0IiwicGF0Y2giLCJ3YXRjaCJdfSx7ImFwaUdyb3VwcyI6WyIiXSwicmVzb3VyY2VzIjpbImNvbmZpZ21hcHMiLCJlbmRwb2ludHMiLCJldmVudHMiLCJwZXJzaXN0ZW50dm9sdW1lY2xhaW1zIiwicG9kcyIsInNlY3JldHMiLCJzZXJ2aWNlYWNjb3VudHMiLCJzZXJ2aWNlcyIsInNlcnZpY2VzL2ZpbmFsaXplcnMiXSwidmVyYnMiOlsiY3JlYXRlIiwiZGVsZXRlIiwiZ2V0IiwibGlzdCIsInBhdGNoIiwidXBkYXRlIiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsiY29zdG1hbmFnZW1lbnQtbWV0cmljcy1jZmcub3BlbnNoaWZ0LmlvIl0sInJlc291cmNlcyI6WyJjb3N0bWFuYWdlbWVudG1ldHJpY3Njb25maWdzIl0sInZlcmJzIjpbImNyZWF0ZSIsImRlbGV0ZSIsImdldCIsImxpc3QiLCJwYXRjaCIsInVwZGF0ZSIsIndhdGNoIl19LHsiYXBpR3JvdXBzIjpbImNvc3RtYW5hZ2VtZW50LW1ldHJpY3MtY2ZnLm9wZW5zaGlmdC5pbyJdLCJyZXNvdXJjZXMiOlsiY29zdG1hbmFnZW1lbnRtZXRyaWNzY29uZmlncy9zdGF0dXMiXSwidmVyYnMiOlsiZ2V0IiwicGF0Y2giLCJ1cGRhdGUiXX0seyJhcGlHcm91cHMiOlsib3BlcmF0b3JzLmNvcmVvcy5jb20iXSwicmVzb3VyY2VzIjpbImNsdXN0ZXJzZXJ2aWNldmVyc2lvbnMiXSwidmVyYnMiOlsiZ2V0IiwibGlzdCIsInBhdGNoIiwidXBkYXRlIiwid2F0Y2giXX1dLCJzZXJ2aWNlQWNjb3VudE5hbWUiOiJjb3N0bWFuYWdlbWVudC1tZXRyaWNzLWNvbnRyb2xsZXItbWFuYWdlciJ9XX0sInN0cmF0ZWd5IjoiZGVwbG95bWVudCJ9LCJpbnN0YWxsTW9kZXMiOlt7InN1cHBvcnRlZCI6dHJ1ZSwidHlwZSI6Ik93bk5hbWVzcGFjZSJ9LHsic3VwcG9ydGVkIjp0cnVlLCJ0eXBlIjoiU2luZ2xlTmFtZXNwYWNlIn0seyJzdXBwb3J0ZWQiOmZhbHNlLCJ0eXBlIjoiTXVsdGlOYW1lc3BhY2UifSx7InN1cHBvcnRlZCI6ZmFsc2UsInR5cGUiOiJBbGxOYW1lc3BhY2VzIn1dLCJrZXl3b3JkcyI6WyJjb3N0IiwibWFuYWdlbWVudCIsInVzYWdlIiwibW9uaXRvciJdLCJtYWludGFpbmVycyI6W3siZW1haWwiOiJjb3N0bWFuYWdlbWVudEByZWRoYXQuY29tIiwibmFtZSI6ImNvc3RtYW5hZ2VtZW50In1dLCJtYXR1cml0eSI6ImFscGhhIiwicHJvdmlkZXIiOnsibmFtZSI6IlJlZCBIYXQifSwicmVsYXRlZEltYWdlcyI6W3siaW1hZ2UiOiJyZWdpc3RyeS5yZWRoYXQuaW8vY29zdG1hbmFnZW1lbnQvY29zdG1hbmFnZW1lbnQtbWV0cmljcy1yaGVsOC1vcGVyYXRvckBzaGEyNTY6Mjk3NWFkNzcyZmE3OWFkYTU5OGFiNWYwNTRlMmNiZDgyMWRjYjczNGJkN2IxMWQwY2JjN2IzOGQ3YjI5YmU1NCIsIm5hbWUiOiJjb3N0bWFuYWdlbWVudC1tZXRyaWNzLXJoZWw4LW9wZXJhdG9yLTI5NzVhZDc3MmZhNzlhZGE1OThhYjVmMDU0ZTJjYmQ4MjFkY2I3MzRiZDdiMTFkMGNiYzdiMzhkN2IyOWJlNTQtYW5ub3RhdGlvbiJ9LHsiaW1hZ2UiOiJyZWdpc3RyeS5yZWRoYXQuaW8vY29zdG1hbmFnZW1lbnQvY29zdG1hbmFnZW1lbnQtbWV0cmljcy1yaGVsOC1vcGVyYXRvckBzaGEyNTY6Mjk3NWFkNzcyZmE3OWFkYTU5OGFiNWYwNTRlMmNiZDgyMWRjYjczNGJkN2IxMWQwY2JjN2IzOGQ3YjI5YmU1NCIsIm5hbWUiOiJtYW5hZ2VyIn1dLCJyZXBsYWNlcyI6ImNvc3RtYW5hZ2VtZW50LW1ldHJpY3Mtb3BlcmF0b3IuMy4wLjAiLCJ2ZXJzaW9uIjoiMy4wLjEifX0=
relatedImages:
- image: registry.redhat.io/costmanagement/costmanagement-metrics-operator-bundle@sha256:afcee273a058fa1ac7643271ee775bdc1ca5d765f0ea36af3b3a6633d9fcbd73
  name: ""
- image: registry.redhat.io/costmanagement/costmanagement-metrics-rhel8-operator@sha256:2975ad772fa79ada598ab5f054e2cbd821dcb734bd7b11d0cbc7b38d7b29be54
  name: costmanagement-metrics-rhel8-operator-2975ad772fa79ada598ab5f054e2cbd821dcb734bd7b11d0cbc7b38d7b29be54-annotation
- image: registry.redhat.io/costmanagement/costmanagement-metrics-rhel8-operator@sha256:2975ad772fa79ada598ab5f054e2cbd821dcb734bd7b11d0cbc7b38d7b29be54
  name: manager
schema: olm.bundle
---
image: registry.redhat.io/costmanagement/costmanagement-metrics-operator-bundle@sha256:d3962cd30fa64b2dee9aca114a2b91f14c01e490024e5cfaf40246f5e88072d1
name: costmanagement-metrics-operator.3.1.0
package: costmanagement-metrics-operator
properties:
- type: olm.gvk
  value:
    group: costmanagement-metrics-cfg.openshift.io
    kind: CostManagementMetricsConfig
    version: v1beta1
- type: olm.package
  value:
    packageName: costmanagement-metrics-operator
    version: 3.1.0
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: registry.redhat.io/costmanagement/costmanagement-metrics-operator-bundle@sha256:d3962cd30fa64b2dee9aca114a2b91f14c01e490024e5cfaf40246f5e88072d1
  name: ""
- image: registry.redhat.io/costmanagement/costmanagement-metrics-rhel8-operator@sha256:999eb8a0aef8333e985120eb5236f6e53f887ef90f028439bb63bb5205dd01bf
  name: costmanagement-metrics-rhel8-operator-999eb8a0aef8333e985120eb5236f6e53f887ef90f028439bb63bb5205dd01bf-annotation
- image: registry.redhat.io/costmanagement/costmanagement-metrics-rhel8-operator@sha256:999eb8a0aef8333e985120eb5236f6e53f887ef90f028439bb63bb5205dd01bf
  name: manager
schema: olm.bundle
---
image: registry.redhat.io/costmanagement/costmanagement-metrics-operator-bundle@sha256:0dba5aba9060c84b1e6d0f5c4322f39940ace6fc4b91891cfe3211df7f53895a
name: costmanagement-metrics-operator.3.1.1
package: costmanagement-metrics-operator
properties:
- type: olm.gvk
  value:
    group: costmanagement-metrics-cfg.openshift.io
    kind: CostManagementMetricsConfig
    version: v1beta1
- type: olm.package
  value:
    packageName: costmanagement-metrics-operator
    version: 3.1.1
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: registry.redhat.io/costmanagement/costmanagement-metrics-operator-bundle@sha256:0dba5aba9060c84b1e6d0f5c4322f39940ace6fc4b91891cfe3211df7f53895a
  name: ""
- image: registry.redhat.io/costmanagement/costmanagement-metrics-rhel8-operator@sha256:999eb8a0aef8333e985120eb5236f6e53f887ef90f028439bb63bb5205dd01bf
  name: costmanagement-metrics-rhel8-operator-999eb8a0aef8333e985120eb5236f6e53f887ef90f028439bb63bb5205dd01bf-annotation
- image: registry.redhat.io/costmanagement/costmanagement-metrics-rhel8-operator@sha256:999eb8a0aef8333e985120eb5236f6e53f887ef90f028439bb63bb5205dd01bf
  name: manager
schema: olm.bundle
---
image: registry.redhat.io/costmanagement/costmanagement-metrics-operator-bundle@sha256:3995f83eb27886d4b35c7051728cb57721ee0ba7ccfc0727592d368400a63fc8
name: costmanagement-metrics-operator.3.2.0
package: costmanagement-metrics-operator
properties:
- type: olm.gvk
  value:
    group: costmanagement-metrics-cfg.openshift.io
    kind: CostManagementMetricsConfig
    version: v1beta1
- type: olm.package
  value:
    packageName: costmanagement-metrics-operator
    version: 3.2.0
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: registry.redhat.io/costmanagement/costmanagement-metrics-operator-bundle@sha256:3995f83eb27886d4b35c7051728cb57721ee0ba7ccfc0727592d368400a63fc8
  name: ""
- image: registry.redhat.io/costmanagement/costmanagement-metrics-rhel8-operator@sha256:ce9d2f93f2c799a3a0b6aee3b09d8a94042dc221cb6105b7bd6bfeb2f1c4ebca
  name: costmanagement-metrics-rhel8-operator-ce9d2f93f2c799a3a0b6aee3b09d8a94042dc221cb6105b7bd6bfeb2f1c4ebca-annotation
- image: registry.redhat.io/costmanagement/costmanagement-metrics-rhel8-operator@sha256:ce9d2f93f2c799a3a0b6aee3b09d8a94042dc221cb6105b7bd6bfeb2f1c4ebca
  name: manager
schema: olm.bundle
---
image: registry.redhat.io/costmanagement/costmanagement-metrics-operator-bundle@sha256:a1dc9a219534acb572ea00c5749e5db7aa083682e2b381dd9faddbc907b4792b
name: costmanagement-metrics-operator.3.2.1
package: costmanagement-metrics-operator
properties:
- type: olm.gvk
  value:
    group: costmanagement-metrics-cfg.openshift.io
    kind: CostManagementMetricsConfig
    version: v1beta1
- type: olm.package
  value:
    packageName: costmanagement-metrics-operator
    version: 3.2.1
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: registry.redhat.io/costmanagement/costmanagement-metrics-operator-bundle@sha256:a1dc9a219534acb572ea00c5749e5db7aa083682e2b381dd9faddbc907b4792b
  name: ""
- image: registry.redhat.io/costmanagement/costmanagement-metrics-rhel8-operator@sha256:ee69d5cbf5909bdbffb85e2c55e8b830939ab1c9e6c3a679552bad8e0c90e657
  name: costmanagement-metrics-rhel8-operator-ee69d5cbf5909bdbffb85e2c55e8b830939ab1c9e6c3a679552bad8e0c90e657-annotation
- image: registry.redhat.io/costmanagement/costmanagement-metrics-rhel8-operator@sha256:ee69d5cbf5909bdbffb85e2c55e8b830939ab1c9e6c3a679552bad8e0c90e657
  name: manager
schema: olm.bundle
---
image: registry.redhat.io/costmanagement/costmanagement-metrics-operator-bundle@sha256:226634a6f640c8095b8c61055d8c9bb4c81dc50d1cf413267b23caa488982f1b
name: costmanagement-metrics-operator.3.3.0
package: costmanagement-metrics-operator
properties:
- type: olm.gvk
  value:
    group: costmanagement-metrics-cfg.openshift.io
    kind: CostManagementMetricsConfig
    version: v1beta1
- type: olm.package
  value:
    packageName: costmanagement-metrics-operator
    version: 3.3.0
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: registry.redhat.io/costmanagement/costmanagement-metrics-operator-bundle@sha256:226634a6f640c8095b8c61055d8c9bb4c81dc50d1cf413267b23caa488982f1b
  name: ""
- image: registry.redhat.io/costmanagement/costmanagement-metrics-rhel8-operator@sha256:d1e94a6e7a52e14e96a9acba54aeae4cb1aae0dad220298bb2ed034f9df19ee4
  name: costmanagement-metrics-rhel8-operator-d1e94a6e7a52e14e96a9acba54aeae4cb1aae0dad220298bb2ed034f9df19ee4-annotation
- image: registry.redhat.io/costmanagement/costmanagement-metrics-rhel8-operator@sha256:d1e94a6e7a52e14e96a9acba54aeae4cb1aae0dad220298bb2ed034f9df19ee4
  name: manager
schema: olm.bundle
---
image: registry.redhat.io/costmanagement/costmanagement-metrics-operator-bundle@sha256:01cab18a6af3cc819a936ce434004d5dce4495474e62bc116643eb753c25cd91
name: costmanagement-metrics-operator.3.3.1
package: costmanagement-metrics-operator
properties:
- type: olm.gvk
  value:
    group: costmanagement-metrics-cfg.openshift.io
    kind: CostManagementMetricsConfig
    version: v1beta1
- type: olm.package
  value:
    packageName: costmanagement-metrics-operator
    version: 3.3.1
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: registry.redhat.io/costmanagement/costmanagement-metrics-operator-bundle@sha256:01cab18a6af3cc819a936ce434004d5dce4495474e62bc116643eb753c25cd91
  name: ""
- image: registry.redhat.io/costmanagement/costmanagement-metrics-rhel8-operator@sha256:f03828d6e5c1d0aef3a10230f5199ac768328535cde12b594920b98106845477
  name: costmanagement-metrics-rhel8-operator-f03828d6e5c1d0aef3a10230f5199ac768328535cde12b594920b98106845477-annotation
- image: registry.redhat.io/costmanagement/costmanagement-metrics-rhel8-operator@sha256:f03828d6e5c1d0aef3a10230f5199ac768328535cde12b594920b98106845477
  name: manager
schema: olm.bundle
---
image: registry.redhat.io/costmanagement/costmanagement-metrics-operator-bundle@sha256:448e65667b5c167699778b0056a18b31dc7ed95022c803217a2786d27d21e945
name: costmanagement-metrics-operator.3.3.2
package: costmanagement-metrics-operator
properties:
- type: olm.gvk
  value:
    group: costmanagement-metrics-cfg.openshift.io
    kind: CostManagementMetricsConfig
    version: v1beta1
- type: olm.package
  value:
    packageName: costmanagement-metrics-operator
    version: 3.3.2
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: registry.redhat.io/costmanagement/costmanagement-metrics-operator-bundle@sha256:448e65667b5c167699778b0056a18b31dc7ed95022c803217a2786d27d21e945
  name: ""
- image: registry.redhat.io/costmanagement/costmanagement-metrics-rhel9-operator@sha256:aaff1e2e5ceae6e1ba91c32e60e5260883a8d4842895ed367d273afab303d1f2
  name: costmanagement-metrics-operator
schema: olm.bundle
---
image: registry.redhat.io/costmanagement/costmanagement-metrics-operator-bundle@sha256:6e25e20efbe423245fa14f689965105147ef8a94e0c393b1fdbcd8ce9590d521
name: costmanagement-metrics-operator.4.0.0
package: costmanagement-metrics-operator
properties:
- type: olm.gvk
  value:
    group: costmanagement-metrics-cfg.openshift.io
    kind: CostManagementMetricsConfig
    version: v1beta1
- type: olm.package
  value:
    packageName: costmanagement-metrics-operator
    version: 4.0.0
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: registry.redhat.io/costmanagement/costmanagement-metrics-operator-bundle@sha256:6e25e20efbe423245fa14f689965105147ef8a94e0c393b1fdbcd8ce9590d521
  name: ""
- image: registry.redhat.io/costmanagement/costmanagement-metrics-rhel9-operator@sha256:8f0ae76636e3d3f937c733e9178426db16dad24dc54cd02c1a80fcf95cb46821
  name: ""
schema: olm.bundle
